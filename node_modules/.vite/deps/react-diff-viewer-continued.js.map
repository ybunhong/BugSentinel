{
  "version": 3,
  "sources": ["../../classnames/index.js", "../../diff/src/diff/base.js", "../../diff/src/diff/character.js", "../../diff/src/util/params.js", "../../diff/src/diff/word.js", "../../diff/src/diff/line.js", "../../diff/src/diff/sentence.js", "../../diff/src/diff/css.js", "../../diff/src/diff/json.js", "../../diff/src/diff/array.js", "../../diff/src/patch/parse.js", "../../diff/src/util/distance-iterator.js", "../../diff/src/patch/apply.js", "../../diff/src/patch/create.js", "../../diff/src/util/array.js", "../../diff/src/patch/merge.js", "../../diff/src/patch/reverse.js", "../../diff/src/convert/dmp.js", "../../diff/src/convert/xml.js", "../../diff/src/index.js", "../../react-diff-viewer-continued/lib/src/compute-lines.js", "../../@emotion/sheet/dist/emotion-sheet.development.esm.js", "../../stylis/src/Enum.js", "../../stylis/src/Utility.js", "../../stylis/src/Tokenizer.js", "../../stylis/src/Parser.js", "../../stylis/src/Prefixer.js", "../../stylis/src/Serializer.js", "../../stylis/src/Middleware.js", "../../stylis/index.js", "../../@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js", "../../@emotion/memoize/dist/emotion-memoize.esm.js", "../../@emotion/cache/dist/emotion-cache.browser.development.esm.js", "../../@emotion/hash/dist/emotion-hash.esm.js", "../../@emotion/unitless/dist/emotion-unitless.esm.js", "../../@emotion/serialize/dist/emotion-serialize.development.esm.js", "../../@emotion/utils/dist/emotion-utils.browser.esm.js", "../../@emotion/css/create-instance/dist/emotion-css-create-instance.development.esm.js", "../../react-diff-viewer-continued/lib/src/styles.js", "../../react-diff-viewer-continued/lib/src/compute-hidden-blocks.js", "../../memoize-one/dist/memoize-one.esm.js", "../../react-diff-viewer-continued/lib/src/index.js"],
  "sourcesContent": ["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    if(options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n    const maxExecutionTime = options.timeout ?? Infinity;\n    const abortAfterTimestamp = Date.now() + maxExecutionTime;\n\n    let bestPath = [{ oldPos: -1, lastComponent: undefined }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n    let minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (\n        let diagonalPath = Math.max(minDiagonalToConsider, -editLength);\n        diagonalPath <= Math.min(maxDiagonalToConsider, editLength);\n        diagonalPath += 2\n      ) {\n        let basePath;\n        let removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = false;\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          const addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        let canRemove = removePath && removePath.oldPos + 1 < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n        if (!canRemove || (canAdd && removePath.oldPos + 1 < addPath.oldPos)) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  addToPath(path, added, removed, oldPosInc) {\n    let last = path.lastComponent;\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: last.count + 1, added: added, removed: removed, previousComponent: last.previousComponent }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {count: 1, added: added, removed: removed, previousComponent: last }\n      };\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {count: commonCount, previousComponent: basePath.lastComponent};\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  const components = [];\n  let nextComponent;\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n  components.reverse();\n\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let finalComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof finalComponent.value === 'string'\n      && (finalComponent.added || finalComponent.removed)\n      && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n", "import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n", "export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n", "import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n", "import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  if(this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n", "import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n", "import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n", "import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n", "import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n", "export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n", "// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n", "import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters && hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n", "import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  if(!diff) {\n    return;\n  }\n\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n", "export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n", "export function reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return {\n    ...structuredPatch,\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(hunk => {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(l => {\n          if (l.startsWith('-')) { return `+${l.slice(1)}`; }\n          if (l.startsWith('+')) { return `-${l.slice(1)}`; }\n          return l;\n        })\n      };\n    })\n  };\n}\n", "// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n", "export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n", "/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIs:\n * Diff.diffChars: Character by character diff\n * Diff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * Diff.diffLines: Line based diff\n *\n * Diff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {reversePatch} from './patch/reverse';\nimport {structuredPatch, createTwoFilesPatch, createPatch, formatPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  formatPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  reversePatch,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeLineInformation = exports.DiffMethod = exports.DiffType = void 0;\nconst diff = __importStar(require(\"diff\"));\nconst jsDiff = diff;\nvar DiffType;\n(function (DiffType) {\n    DiffType[DiffType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    DiffType[DiffType[\"ADDED\"] = 1] = \"ADDED\";\n    DiffType[DiffType[\"REMOVED\"] = 2] = \"REMOVED\";\n    DiffType[DiffType[\"CHANGED\"] = 3] = \"CHANGED\";\n})(DiffType || (exports.DiffType = DiffType = {}));\n// See https://github.com/kpdecker/jsdiff/tree/v4.0.1#api for more info on the below JsDiff methods\nvar DiffMethod;\n(function (DiffMethod) {\n    DiffMethod[\"CHARS\"] = \"diffChars\";\n    DiffMethod[\"WORDS\"] = \"diffWords\";\n    DiffMethod[\"WORDS_WITH_SPACE\"] = \"diffWordsWithSpace\";\n    DiffMethod[\"LINES\"] = \"diffLines\";\n    DiffMethod[\"TRIMMED_LINES\"] = \"diffTrimmedLines\";\n    DiffMethod[\"SENTENCES\"] = \"diffSentences\";\n    DiffMethod[\"CSS\"] = \"diffCss\";\n    DiffMethod[\"JSON\"] = \"diffJson\";\n})(DiffMethod || (exports.DiffMethod = DiffMethod = {}));\n/**\n * Splits diff text by new line and computes final list of diff lines based on\n * conditions.\n *\n * @param value Diff text from the js diff module.\n */\nconst constructLines = (value) => {\n    if (value === '')\n        return [];\n    const lines = value.replace(/\\n$/, '').split('\\n');\n    return lines;\n};\n/**\n * Computes word diff information in the line.\n * [TODO]: Consider adding options argument for JsDiff text block comparison\n *\n * @param oldValue Old word in the line.\n * @param newValue New word in the line.\n * @param compareMethod JsDiff text diff method from https://github.com/kpdecker/jsdiff/tree/v4.0.1#api\n */\nconst computeDiff = (oldValue, newValue, compareMethod = DiffMethod.CHARS) => {\n    const diffArray = jsDiff[compareMethod](oldValue, newValue);\n    const computedDiff = {\n        left: [],\n        right: [],\n    };\n    diffArray.forEach(({ added, removed, value }) => {\n        const diffInformation = {};\n        if (added) {\n            diffInformation.type = DiffType.ADDED;\n            diffInformation.value = value;\n            computedDiff.right.push(diffInformation);\n        }\n        if (removed) {\n            diffInformation.type = DiffType.REMOVED;\n            diffInformation.value = value;\n            computedDiff.left.push(diffInformation);\n        }\n        if (!removed && !added) {\n            diffInformation.type = DiffType.DEFAULT;\n            diffInformation.value = value;\n            computedDiff.right.push(diffInformation);\n            computedDiff.left.push(diffInformation);\n        }\n        return diffInformation;\n    });\n    return computedDiff;\n};\n/**\n * [TODO]: Think about moving common left and right value assignment to a\n * common place. Better readability?\n *\n * Computes line wise information based in the js diff information passed. Each\n * line contains information about left and right section. Left side denotes\n * deletion and right side denotes addition.\n *\n * @param oldString Old string to compare.\n * @param newString New string to compare with old string.\n * @param disableWordDiff Flag to enable/disable word diff.\n * @param lineCompareMethod JsDiff text diff method from https://github.com/kpdecker/jsdiff/tree/v4.0.1#api\n * @param linesOffset line number to start counting from\n * @param showLines lines that are always shown, regardless of diff\n */\nconst computeLineInformation = (oldString, newString, disableWordDiff = false, lineCompareMethod = DiffMethod.CHARS, linesOffset = 0, showLines = []) => {\n    let diffArray = [];\n    // Use diffLines for strings, and diffJson for objects...\n    if (typeof oldString === 'string' && typeof newString === 'string') {\n        diffArray = diff.diffLines(oldString.trimRight(), newString.trimRight(), {\n            newlineIsToken: false,\n            ignoreWhitespace: false,\n            ignoreCase: false,\n        });\n    }\n    else {\n        diffArray = diff.diffJson(oldString, newString);\n    }\n    let rightLineNumber = linesOffset;\n    let leftLineNumber = linesOffset;\n    let lineInformation = [];\n    let counter = 0;\n    const diffLines = [];\n    const ignoreDiffIndexes = [];\n    const getLineInformation = (value, diffIndex, added, removed, evaluateOnlyFirstLine) => {\n        const lines = constructLines(value);\n        return lines\n            .map((line, lineIndex) => {\n            const left = {};\n            const right = {};\n            if (ignoreDiffIndexes.includes(`${diffIndex}-${lineIndex}`) ||\n                (evaluateOnlyFirstLine && lineIndex !== 0)) {\n                return undefined;\n            }\n            if (added || removed) {\n                let countAsChange = true;\n                if (removed) {\n                    leftLineNumber += 1;\n                    left.lineNumber = leftLineNumber;\n                    left.type = DiffType.REMOVED;\n                    left.value = line || ' ';\n                    // When the current line is of type REMOVED, check the next item in\n                    // the diff array whether it is of type ADDED. If true, the current\n                    // diff will be marked as both REMOVED and ADDED. Meaning, the\n                    // current line is a modification.\n                    const nextDiff = diffArray[diffIndex + 1];\n                    if (nextDiff && nextDiff.added) {\n                        const nextDiffLines = constructLines(nextDiff.value)[lineIndex];\n                        if (nextDiffLines) {\n                            const nextDiffLineInfo = getLineInformation(nextDiffLines, diffIndex, true, false, true);\n                            const { value: rightValue, lineNumber, type, } = nextDiffLineInfo[0].right;\n                            // When identified as modification, push the next diff to ignore\n                            // list as the next value will be added in this line computation as\n                            // right and left values.\n                            ignoreDiffIndexes.push(`${diffIndex + 1}-${lineIndex}`);\n                            right.lineNumber = lineNumber;\n                            if (left.value === rightValue) {\n                                // The new value is exactly the same as the old\n                                countAsChange = false;\n                                right.type = 0;\n                                left.type = 0;\n                                right.value = rightValue;\n                            }\n                            else {\n                                right.type = type;\n                                // Do char level diff and assign the corresponding values to the\n                                // left and right diff information object.\n                                if (disableWordDiff) {\n                                    right.value = rightValue;\n                                }\n                                else {\n                                    const computedDiff = computeDiff(line, rightValue, lineCompareMethod);\n                                    right.value = computedDiff.right;\n                                    left.value = computedDiff.left;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    rightLineNumber += 1;\n                    right.lineNumber = rightLineNumber;\n                    right.type = DiffType.ADDED;\n                    right.value = line;\n                }\n                if (countAsChange && !evaluateOnlyFirstLine) {\n                    if (!diffLines.includes(counter)) {\n                        diffLines.push(counter);\n                    }\n                }\n            }\n            else {\n                leftLineNumber += 1;\n                rightLineNumber += 1;\n                left.lineNumber = leftLineNumber;\n                left.type = DiffType.DEFAULT;\n                left.value = line;\n                right.lineNumber = rightLineNumber;\n                right.type = DiffType.DEFAULT;\n                right.value = line;\n            }\n            if ((showLines === null || showLines === void 0 ? void 0 : showLines.includes(`L-${left.lineNumber}`)) || (showLines === null || showLines === void 0 ? void 0 : showLines.includes(`R-${right.lineNumber}`)) && !diffLines.includes(counter)) {\n                diffLines.push(counter);\n            }\n            if (!evaluateOnlyFirstLine) {\n                counter += 1;\n            }\n            return { right, left };\n        })\n            .filter(Boolean);\n    };\n    diffArray.forEach(({ added, removed, value }, index) => {\n        lineInformation = [\n            ...lineInformation,\n            ...getLineInformation(value, index, added, removed),\n        ];\n    });\n    return {\n        lineInformation,\n        diffLines,\n    };\n};\nexports.computeLineInformation = computeLineInformation;\n", "var isDevelopment = true;\n\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      return document.styleSheets[i];\n    }\n  } // this function should always return with a value\n  // TS can't understand it though so we make it stop complaining here\n\n\n  return undefined;\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? !isDevelopment : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    this.tags.forEach(function (tag) {\n      var _tag$parentNode;\n\n      return (_tag$parentNode = tag.parentNode) == null ? void 0 : _tag$parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n", "export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\nexport var LAYER = '@layer'\n", "/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n", "import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n", "import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n", "import {MS, MOZ, WEBKIT} from './Enum.js'\nimport {hash, charat, strlen, indexof, replace, substr, match} from './Utility.js'\n\n/**\n * @param {string} value\n * @param {number} length\n * @param {object[]} children\n * @return {string}\n */\nexport function prefix (value, length, children) {\n\tswitch (hash(value, length)) {\n\t\t// color-adjust\n\t\tcase 5103:\n\t\t\treturn WEBKIT + 'print-' + value + value\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// tab-size\n\t\tcase 4789:\n\t\t\treturn MOZ + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value\n\t\t\t\t// default: fallthrough to below\n\t\t\t}\n\t\t// flex, flex-direction, scroll-snap-type, writing-mode\n\t\tcase 6828: case 4268: case 2903:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + 'flex-' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/g, '') + (!match(value, /flex-|baseline/) ? MS + 'grid-row-' + replace(value, /flex-|-self/g, '') : '') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/g, '') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value\n\t\t// justify-self\n\t\tcase 4200:\n\t\t\tif (!match(value, /flex-|baseline/)) return MS + 'grid-column-align' + substr(value, length) + value\n\t\t\tbreak\n\t\t// grid-template-(columns|rows)\n\t\tcase 2592: case 3360:\n\t\t\treturn MS + replace(value, 'template-', '') + value\n\t\t// grid-(row|column)-start\n\t\tcase 4384: case 3616:\n\t\t\tif (children && children.some(function (element, index) { return length = index, match(element.props, /grid-\\w+-end/) })) {\n\t\t\t\treturn ~indexof(value + (children = children[length].value), 'span') ? value : (MS + replace(value, '-start', '') + value + MS + 'grid-row-span:' + (~indexof(children, 'span') ? match(children, /\\d+/) : +match(children, /\\d+/) - +match(value, /\\d+/)) + ';')\n\t\t\t}\n\t\t\treturn MS + replace(value, '-start', '') + value\n\t\t// grid-(row|column)-end\n\t\tcase 4896: case 4128:\n\t\t\treturn (children && children.some(function (element) { return match(element.props, /grid-\\w+-start/) })) ? value : MS + replace(replace(value, '-end', '-span'), 'span ', '') + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (charat(value, length + 4) !== 45)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t// (f)ill-available, (f)it-content\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length, children) + value : value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// grid-(column|row)\n\t\tcase 5152: case 5920:\n\t\t\treturn replace(value, /(.+?):(\\d+)(\\s*\\/\\s*(span)?\\s*(\\d+))?(.*)/, function (_, a, b, c, d, e, f) { return (MS + a + ':' + b + f) + (c ? (MS + a + '-span:' + (d ? e : +e - +b)) + f : '') + value })\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// stick(y)?\n\t\t\tif (charat(value, length + 6) === 121)\n\t\t\t\treturn replace(value, ':', ':' + WEBKIT) + value\n\t\t\tbreak\n\t\t// display: (flex|inline-flex|grid|inline-grid)\n\t\tcase 6444:\n\t\t\tswitch (charat(value, charat(value, 14) === 45 ? 18 : 11)) {\n\t\t\t\t// (inline-)?fle(x)\n\t\t\t\tcase 120:\n\t\t\t\t\treturn replace(value, /(.+:)([^;\\s!]+)(;|(\\s+)?!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value\n\t\t\t\t// (inline-)?gri(d)\n\t\t\t\tcase 100:\n\t\t\t\t\treturn replace(value, ':', ':' + MS) + value\n\t\t\t}\n\t\t\tbreak\n\t\t// scroll-margin, scroll-margin-(top|right|bottom|left)\n\t\tcase 5719: case 2647: case 2135: case 3927: case 2391:\n\t\t\treturn replace(value, 'scroll-', 'scroll-snap-') + value\n\t}\n\n\treturn value\n}\n", "import {IMPORT, LAYER, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n", "import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n", "export * from './src/Enum.js'\nexport * from './src/Utility.js'\nexport * from './src/Parser.js'\nexport * from './src/Prefixer.js'\nexport * from './src/Tokenizer.js'\nexport * from './src/Serializer.js'\nexport * from './src/Middleware.js'\n", "var weakMemoize = function weakMemoize(func) {\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // Use non-null assertion because we just checked that the cache `has` it\n      // This allows us to remove `undefined` from the return value\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\nexport { weakMemoize as default };\n", "function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n", "import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, middleware, stringify, COMMENT, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value;\n  var parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = !!element.parent; // in nested rules comments become children of the \"auto-inserted\" rule and that's always the `element.parent`\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? element.parent.children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\nvar getSourceMap;\n\n{\n  var sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n\n  getSourceMap = function getSourceMap(styles) {\n    var matches = styles.match(sourceMapPattern);\n    if (!matches) return;\n    return matches[matches.length - 1];\n  };\n}\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (!key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  {\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' ');\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } ];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (getSourceMap) {\n        var sourceMap = getSourceMap(serialized.styles);\n\n        if (sourceMap) {\n          currentSheet = {\n            insert: function insert(rule) {\n              sheet.insert(rule + sourceMap);\n            }\n          };\n        }\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport { createCache as default };\n", "/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport { murmur2 as default };\n", "var unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  scale: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport { unitlessKeys as default };\n", "import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar isDevelopment = true;\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\n{\n  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  var componentSelector = interpolation;\n\n  if (componentSelector.__emotion_styles !== undefined) {\n    if (String(componentSelector) === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return componentSelector;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        var keyframes = interpolation;\n\n        if (keyframes.anim === 1) {\n          cursor = {\n            name: keyframes.name,\n            styles: keyframes.styles,\n            next: cursor\n          };\n          return keyframes.name;\n        }\n\n        var serializedStyles = interpolation;\n\n        if (serializedStyles.styles !== undefined) {\n          var next = serializedStyles.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = serializedStyles.styles + \";\";\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (_match, _p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error(\"`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\nInstead of doing this:\\n\\n\" + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + \"\\n\\nYou should wrap it with `css` like this:\\n\\ncss`\" + replaced + \"`\");\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  var asString = interpolation;\n\n  if (registered == null) {\n    return asString;\n  }\n\n  var cached = registered[asString];\n  return cached !== undefined ? cached : asString;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var key in obj) {\n      var value = obj[key];\n\n      if (typeof value !== 'object') {\n        var asString = value;\n\n        if (registered != null && registered[asString] !== undefined) {\n          string += key + \"{\" + registered[asString] + \"}\";\n        } else if (isProcessableValue(asString)) {\n          string += processStyleName(key) + \":\" + processStyleValue(key, asString) + \";\";\n        }\n      } else {\n        if (key === 'NO_COMPONENT_SELECTOR' && isDevelopment) {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(key) + \":\" + processStyleValue(key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;{]+)\\s*(;|$)/g; // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\nvar cursor;\nfunction serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    var asTemplateStringsArr = strings;\n\n    if (asTemplateStringsArr[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += asTemplateStringsArr[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      var templateStringsArr = strings;\n\n      if (templateStringsArr[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += templateStringsArr[i];\n    }\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  {\n    var devStyles = {\n      name: name,\n      styles: styles,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n    return devStyles;\n  }\n}\n\nexport { serializeStyles };\n", "var isBrowser = true;\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else if (className) {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n", "import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options);\n\n  cache.sheet.speedy = function (value) {\n    if (this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport { createEmotion as default };\n", "\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst create_instance_1 = __importDefault(require(\"@emotion/css/create-instance\"));\n// eslint-disable-next-line import/no-anonymous-default-export\nexports.default = (styleOverride, useDarkTheme = false, nonce = '') => {\n    const { variables: overrideVariables = {} } = styleOverride, styles = __rest(styleOverride, [\"variables\"]);\n    const themeVariables = {\n        light: Object.assign({\n            diffViewerBackground: '#fff',\n            diffViewerColor: '#212529',\n            addedBackground: '#e6ffed',\n            addedColor: '#24292e',\n            removedBackground: '#ffeef0',\n            removedColor: '#24292e',\n            changedBackground: '#fffbdd',\n            wordAddedBackground: '#acf2bd',\n            wordRemovedBackground: '#fdb8c0',\n            addedGutterBackground: '#cdffd8',\n            removedGutterBackground: '#ffdce0',\n            gutterBackground: '#f7f7f7',\n            gutterBackgroundDark: '#f3f1f1',\n            highlightBackground: '#fffbdd',\n            highlightGutterBackground: '#fff5b1',\n            codeFoldGutterBackground: '#dbedff',\n            codeFoldBackground: '#f1f8ff',\n            emptyLineBackground: '#fafbfc',\n            gutterColor: '#212529',\n            addedGutterColor: '#212529',\n            removedGutterColor: '#212529',\n            codeFoldContentColor: '#212529',\n            diffViewerTitleBackground: '#fafbfc',\n            diffViewerTitleColor: '#212529',\n            diffViewerTitleBorderColor: '#eee',\n        }, (overrideVariables.light || {})),\n        dark: Object.assign({\n            diffViewerBackground: '#2e303c',\n            diffViewerColor: '#FFF',\n            addedBackground: '#044B53',\n            addedColor: 'white',\n            removedBackground: '#632F34',\n            removedColor: 'white',\n            changedBackground: '#3e302c',\n            wordAddedBackground: '#055d67',\n            wordRemovedBackground: '#7d383f',\n            addedGutterBackground: '#034148',\n            removedGutterBackground: '#632b30',\n            gutterBackground: '#2c2f3a',\n            gutterBackgroundDark: '#262933',\n            highlightBackground: '#2a3967',\n            highlightGutterBackground: '#2d4077',\n            codeFoldGutterBackground: '#21232b',\n            codeFoldBackground: '#262831',\n            emptyLineBackground: '#363946',\n            gutterColor: '#666c87',\n            addedGutterColor: '#8c8c8c',\n            removedGutterColor: '#8c8c8c',\n            codeFoldContentColor: '#656a8b',\n            diffViewerTitleBackground: '#2f323e',\n            diffViewerTitleColor: '#555a7b',\n            diffViewerTitleBorderColor: '#353846',\n        }, (overrideVariables.dark || {})),\n    };\n    const variables = useDarkTheme ? themeVariables.dark : themeVariables.light;\n    const { css, cx } = (0, create_instance_1.default)({ key: 'react-diff', nonce });\n    const content = css({\n        width: '100%',\n        label: 'content',\n    });\n    const splitView = css({\n        [`.${content}`]: {\n            width: '50%',\n        },\n        label: 'split-view',\n    });\n    const diffContainer = css({\n        width: '100%',\n        background: variables.diffViewerBackground,\n        pre: {\n            margin: 0,\n            whiteSpace: 'pre-wrap',\n            lineHeight: '25px',\n        },\n        label: 'diff-container',\n        borderCollapse: 'collapse',\n    });\n    const codeFoldContent = css({\n        color: variables.codeFoldContentColor,\n        label: 'code-fold-content',\n    });\n    const contentText = css({\n        color: variables.diffViewerColor,\n        label: 'content-text',\n    });\n    const titleBlock = css({\n        background: variables.diffViewerTitleBackground,\n        padding: 10,\n        borderBottom: `1px solid ${variables.diffViewerTitleBorderColor}`,\n        label: 'title-block',\n        ':last-child': {\n            borderLeft: `1px solid ${variables.diffViewerTitleBorderColor}`,\n        },\n        [`.${contentText}`]: {\n            color: variables.diffViewerTitleColor,\n        },\n    });\n    const lineNumber = css({\n        color: variables.gutterColor,\n        label: 'line-number',\n    });\n    const diffRemoved = css({\n        background: variables.removedBackground,\n        color: variables.removedColor,\n        pre: {\n            color: variables.removedColor,\n        },\n        [`.${lineNumber}`]: {\n            color: variables.removedGutterColor,\n        },\n        label: 'diff-removed',\n    });\n    const diffAdded = css({\n        background: variables.addedBackground,\n        color: variables.addedColor,\n        pre: {\n            color: variables.addedColor,\n        },\n        [`.${lineNumber}`]: {\n            color: variables.addedGutterColor,\n        },\n        label: 'diff-added',\n    });\n    const diffChanged = css({\n        background: variables.changedBackground,\n        [`.${lineNumber}`]: {\n            color: variables.gutterColor,\n        },\n        label: 'diff-changed',\n    });\n    const wordDiff = css({\n        padding: 2,\n        display: 'inline-flex',\n        borderRadius: 4,\n        wordBreak: 'break-all',\n        label: 'word-diff',\n    });\n    const wordAdded = css({\n        background: variables.wordAddedBackground,\n        label: 'word-added',\n    });\n    const wordRemoved = css({\n        background: variables.wordRemovedBackground,\n        label: 'word-removed',\n    });\n    const codeFoldGutter = css({\n        backgroundColor: variables.codeFoldGutterBackground,\n        label: 'code-fold-gutter',\n    });\n    const codeFold = css({\n        backgroundColor: variables.codeFoldBackground,\n        height: 40,\n        fontSize: 14,\n        fontWeight: 700,\n        label: 'code-fold',\n        a: {\n            textDecoration: 'underline !important',\n            cursor: 'pointer',\n            pre: {\n                display: 'inline',\n            },\n        },\n    });\n    const emptyLine = css({\n        backgroundColor: variables.emptyLineBackground,\n        label: 'empty-line',\n    });\n    const marker = css({\n        width: 25,\n        paddingLeft: 10,\n        paddingRight: 10,\n        userSelect: 'none',\n        label: 'marker',\n        [`&.${diffAdded}`]: {\n            pre: {\n                color: variables.addedColor,\n            },\n        },\n        [`&.${diffRemoved}`]: {\n            pre: {\n                color: variables.removedColor,\n            },\n        },\n    });\n    const highlightedLine = css({\n        background: variables.highlightBackground,\n        label: 'highlighted-line',\n        [`.${wordAdded}, .${wordRemoved}`]: {\n            backgroundColor: 'initial',\n        },\n    });\n    const highlightedGutter = css({\n        label: 'highlighted-gutter',\n    });\n    const gutter = css({\n        userSelect: 'none',\n        minWidth: 50,\n        padding: '0 10px',\n        whiteSpace: 'nowrap',\n        label: 'gutter',\n        textAlign: 'right',\n        background: variables.gutterBackground,\n        '&:hover': {\n            cursor: 'pointer',\n            background: variables.gutterBackgroundDark,\n            pre: {\n                opacity: 1,\n            },\n        },\n        pre: {\n            opacity: 0.5,\n        },\n        [`&.${diffAdded}`]: {\n            background: variables.addedGutterBackground,\n        },\n        [`&.${diffRemoved}`]: {\n            background: variables.removedGutterBackground,\n        },\n        [`&.${highlightedGutter}`]: {\n            background: variables.highlightGutterBackground,\n            '&:hover': {\n                background: variables.highlightGutterBackground,\n            },\n        },\n    });\n    const emptyGutter = css({\n        '&:hover': {\n            background: variables.gutterBackground,\n            cursor: 'initial',\n        },\n        label: 'empty-gutter',\n    });\n    const line = css({\n        verticalAlign: 'baseline',\n        label: 'line',\n    });\n    const defaultStyles = {\n        diffContainer,\n        diffRemoved,\n        diffAdded,\n        diffChanged,\n        splitView,\n        marker,\n        highlightedGutter,\n        highlightedLine,\n        gutter,\n        line,\n        wordDiff,\n        wordAdded,\n        wordRemoved,\n        codeFoldGutter,\n        codeFold,\n        emptyGutter,\n        emptyLine,\n        lineNumber,\n        contentText,\n        content,\n        codeFoldContent,\n        titleBlock,\n    };\n    const computerOverrideStyles = Object.keys(styles).reduce((acc, key) => (Object.assign(Object.assign({}, acc), {\n        [key]: css(styles[key]),\n    })), {});\n    return Object.keys(defaultStyles).reduce((acc, key) => (Object.assign(Object.assign({}, acc), {\n        [key]: computerOverrideStyles[key]\n            ? cx(defaultStyles[key], computerOverrideStyles[key])\n            : defaultStyles[key],\n    })), {});\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeHiddenBlocks = void 0;\nfunction computeHiddenBlocks(lineInformation, diffLines, extraLines) {\n    let newBlockIndex = 0;\n    let currentBlock;\n    let lineBlocks = {};\n    let blocks = [];\n    lineInformation.forEach((line, lineIndex) => {\n        const isDiffLine = diffLines.some(diffLine => diffLine >= lineIndex - extraLines && diffLine <= lineIndex + extraLines);\n        if (!isDiffLine && currentBlock == undefined) {\n            // block begins\n            currentBlock = {\n                index: newBlockIndex,\n                startLine: lineIndex,\n                endLine: lineIndex,\n                lines: 1\n            };\n            blocks.push(currentBlock);\n            lineBlocks[lineIndex] = currentBlock.index;\n            newBlockIndex++;\n        }\n        else if (!isDiffLine) {\n            // block continues\n            currentBlock.endLine = lineIndex;\n            currentBlock.lines++;\n            lineBlocks[lineIndex] = currentBlock.index;\n        }\n        else {\n            // not a block anymore\n            currentBlock = undefined;\n        }\n    });\n    return {\n        lineBlocks,\n        blocks: blocks\n    };\n}\nexports.computeHiddenBlocks = computeHiddenBlocks;\n", "var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiffMethod = exports.LineNumberPrefix = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst React = __importStar(require(\"react\"));\nconst classnames_1 = __importDefault(require(\"classnames\"));\nconst compute_lines_1 = require(\"./compute-lines\");\nObject.defineProperty(exports, \"DiffMethod\", { enumerable: true, get: function () { return compute_lines_1.DiffMethod; } });\nconst styles_1 = __importDefault(require(\"./styles\"));\nconst compute_hidden_blocks_1 = require(\"./compute-hidden-blocks\");\nconst m = require('memoize-one');\nconst memoize = m.default || m;\nvar LineNumberPrefix;\n(function (LineNumberPrefix) {\n    LineNumberPrefix[\"LEFT\"] = \"L\";\n    LineNumberPrefix[\"RIGHT\"] = \"R\";\n})(LineNumberPrefix || (exports.LineNumberPrefix = LineNumberPrefix = {}));\nclass DiffViewer extends React.Component {\n    constructor(props) {\n        super(props);\n        /**\n         * Resets code block expand to the initial stage. Will be exposed to the parent component via\n         * refs.\n         */\n        this.resetCodeBlocks = () => {\n            if (this.state.expandedBlocks.length > 0) {\n                this.setState({\n                    expandedBlocks: [],\n                });\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Pushes the target expanded code block to the state. During the re-render,\n         * this value is used to expand/fold unmodified code.\n         */\n        this.onBlockExpand = (id) => {\n            const prevState = this.state.expandedBlocks.slice();\n            prevState.push(id);\n            this.setState({\n                expandedBlocks: prevState,\n            });\n        };\n        /**\n         * Computes final styles for the diff viewer. It combines the default styles with the user\n         * supplied overrides. The computed styles are cached with performance in mind.\n         *\n         * @param styles User supplied style overrides.\n         */\n        this.computeStyles = memoize(styles_1.default);\n        /**\n         * Returns a function with clicked line number in the closure. Returns an no-op function when no\n         * onLineNumberClick handler is supplied.\n         *\n         * @param id Line id of a line.\n         */\n        this.onLineNumberClickProxy = (id) => {\n            if (this.props.onLineNumberClick) {\n                return (e) => this.props.onLineNumberClick(id, e);\n            }\n            return () => { };\n        };\n        /**\n         * Maps over the word diff and constructs the required React elements to show word diff.\n         *\n         * @param diffArray Word diff information derived from line information.\n         * @param renderer Optional renderer to format diff words. Useful for syntax highlighting.\n         */\n        this.renderWordDiff = (diffArray, renderer) => {\n            return diffArray.map((wordDiff, i) => {\n                return ((0, jsx_runtime_1.jsx)(\"span\", { className: (0, classnames_1.default)(this.styles.wordDiff, {\n                        [this.styles.wordAdded]: wordDiff.type === compute_lines_1.DiffType.ADDED,\n                        [this.styles.wordRemoved]: wordDiff.type === compute_lines_1.DiffType.REMOVED,\n                    }), children: renderer ? renderer(wordDiff.value) : wordDiff.value }, i));\n            });\n        };\n        /**\n         * Maps over the line diff and constructs the required react elements to show line diff. It calls\n         * renderWordDiff when encountering word diff. This takes care of both inline and split view line\n         * renders.\n         *\n         * @param lineNumber Line number of the current line.\n         * @param type Type of diff of the current line.\n         * @param prefix Unique id to prefix with the line numbers.\n         * @param value Content of the line. It can be a string or a word diff array.\n         * @param additionalLineNumber Additional line number to be shown. Useful for rendering inline\n         *  diff view. Right line number will be passed as additionalLineNumber.\n         * @param additionalPrefix Similar to prefix but for additional line number.\n         */\n        this.renderLine = (lineNumber, type, prefix, value, additionalLineNumber, additionalPrefix) => {\n            const lineNumberTemplate = `${prefix}-${lineNumber}`;\n            const additionalLineNumberTemplate = `${additionalPrefix}-${additionalLineNumber}`;\n            const highlightLine = this.props.highlightLines.includes(lineNumberTemplate) ||\n                this.props.highlightLines.includes(additionalLineNumberTemplate);\n            const added = type === compute_lines_1.DiffType.ADDED;\n            const removed = type === compute_lines_1.DiffType.REMOVED;\n            const changed = type === compute_lines_1.DiffType.CHANGED;\n            let content;\n            if (Array.isArray(value)) {\n                content = this.renderWordDiff(value, this.props.renderContent);\n            }\n            else if (this.props.renderContent) {\n                content = this.props.renderContent(value);\n            }\n            else {\n                content = value;\n            }\n            return ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [!this.props.hideLineNumbers && ((0, jsx_runtime_1.jsx)(\"td\", { onClick: lineNumber && this.onLineNumberClickProxy(lineNumberTemplate), className: (0, classnames_1.default)(this.styles.gutter, {\n                            [this.styles.emptyGutter]: !lineNumber,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedGutter]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.lineNumber, children: lineNumber }) })), !this.props.splitView && !this.props.hideLineNumbers && ((0, jsx_runtime_1.jsx)(\"td\", { onClick: additionalLineNumber &&\n                            this.onLineNumberClickProxy(additionalLineNumberTemplate), className: (0, classnames_1.default)(this.styles.gutter, {\n                            [this.styles.emptyGutter]: !additionalLineNumber,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedGutter]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.lineNumber, children: additionalLineNumber }) })), this.props.renderGutter\n                        ? this.props.renderGutter({\n                            lineNumber,\n                            type,\n                            prefix,\n                            value,\n                            additionalLineNumber,\n                            additionalPrefix,\n                            styles: this.styles,\n                        })\n                        : null, !this.props.hideMarkers && ((0, jsx_runtime_1.jsx)(\"td\", { className: (0, classnames_1.default)(this.styles.marker, {\n                            [this.styles.emptyLine]: !content,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedLine]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsxs)(\"pre\", { children: [added && '+', removed && '-'] }) })), (0, jsx_runtime_1.jsx)(\"td\", { className: (0, classnames_1.default)(this.styles.content, {\n                            [this.styles.emptyLine]: !content,\n                            [this.styles.diffAdded]: added,\n                            [this.styles.diffRemoved]: removed,\n                            [this.styles.diffChanged]: changed,\n                            [this.styles.highlightedLine]: highlightLine,\n                        }), children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.contentText, children: content }) })] }));\n        };\n        /**\n         * Generates lines for split view.\n         *\n         * @param obj Line diff information.\n         * @param obj.left Life diff information for the left pane of the split view.\n         * @param obj.right Life diff information for the right pane of the split view.\n         * @param index React key for the lines.\n         */\n        this.renderSplitView = ({ left, right }, index) => {\n            return ((0, jsx_runtime_1.jsxs)(\"tr\", { className: this.styles.line, children: [this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value), this.renderLine(right.lineNumber, right.type, LineNumberPrefix.RIGHT, right.value)] }, index));\n        };\n        /**\n         * Generates lines for inline view.\n         *\n         * @param obj Line diff information.\n         * @param obj.left Life diff information for the added section of the inline view.\n         * @param obj.right Life diff information for the removed section of the inline view.\n         * @param index React key for the lines.\n         */\n        this.renderInlineView = ({ left, right }, index) => {\n            let content;\n            if (left.type === compute_lines_1.DiffType.REMOVED && right.type === compute_lines_1.DiffType.ADDED) {\n                return ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"tr\", { className: this.styles.line, children: this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null) }), (0, jsx_runtime_1.jsx)(\"tr\", { className: this.styles.line, children: this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber) })] }, index));\n            }\n            if (left.type === compute_lines_1.DiffType.REMOVED) {\n                content = this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, null);\n            }\n            if (left.type === compute_lines_1.DiffType.DEFAULT) {\n                content = this.renderLine(left.lineNumber, left.type, LineNumberPrefix.LEFT, left.value, right.lineNumber, LineNumberPrefix.RIGHT);\n            }\n            if (right.type === compute_lines_1.DiffType.ADDED) {\n                content = this.renderLine(null, right.type, LineNumberPrefix.RIGHT, right.value, right.lineNumber);\n            }\n            return ((0, jsx_runtime_1.jsx)(\"tr\", { className: this.styles.line, children: content }, index));\n        };\n        /**\n         * Returns a function with clicked block number in the closure.\n         *\n         * @param id Cold fold block id.\n         */\n        this.onBlockClickProxy = (id) => () => this.onBlockExpand(id);\n        /**\n         * Generates cold fold block. It also uses the custom message renderer when available to show\n         * cold fold messages.\n         *\n         * @param num Number of skipped lines between two blocks.\n         * @param blockNumber Code fold block id.\n         * @param leftBlockLineNumber First left line number after the current code fold block.\n         * @param rightBlockLineNumber First right line number after the current code fold block.\n         */\n        this.renderSkippedLineIndicator = (num, blockNumber, leftBlockLineNumber, rightBlockLineNumber) => {\n            const { hideLineNumbers, splitView } = this.props;\n            const message = this.props.codeFoldMessageRenderer ? (this.props.codeFoldMessageRenderer(num, leftBlockLineNumber, rightBlockLineNumber)) : ((0, jsx_runtime_1.jsxs)(\"pre\", { className: this.styles.codeFoldContent, children: [\"Expand \", num, \" lines ...\"] }));\n            const content = ((0, jsx_runtime_1.jsx)(\"td\", { children: (0, jsx_runtime_1.jsx)(\"a\", { onClick: this.onBlockClickProxy(blockNumber), tabIndex: 0, children: message }) }));\n            const isUnifiedViewWithoutLineNumbers = !splitView && !hideLineNumbers;\n            return ((0, jsx_runtime_1.jsxs)(\"tr\", { className: this.styles.codeFold, children: [!hideLineNumbers && (0, jsx_runtime_1.jsx)(\"td\", { className: this.styles.codeFoldGutter }), this.props.renderGutter ? ((0, jsx_runtime_1.jsx)(\"td\", { className: this.styles.codeFoldGutter })) : null, (0, jsx_runtime_1.jsx)(\"td\", { className: (0, classnames_1.default)({\n                            [this.styles.codeFoldGutter]: isUnifiedViewWithoutLineNumbers,\n                        }) }), isUnifiedViewWithoutLineNumbers ? ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [(0, jsx_runtime_1.jsx)(\"td\", {}), content] })) : ((0, jsx_runtime_1.jsxs)(React.Fragment, { children: [content, this.props.renderGutter ? (0, jsx_runtime_1.jsx)(\"td\", {}) : null, (0, jsx_runtime_1.jsx)(\"td\", {})] })), (0, jsx_runtime_1.jsx)(\"td\", {}), (0, jsx_runtime_1.jsx)(\"td\", {})] }, `${leftBlockLineNumber}-${rightBlockLineNumber}`));\n        };\n        /**\n         * Generates the entire diff view.\n         */\n        this.renderDiff = () => {\n            const { oldValue, newValue, splitView, disableWordDiff, compareMethod, linesOffset, } = this.props;\n            const { lineInformation, diffLines } = (0, compute_lines_1.computeLineInformation)(oldValue, newValue, disableWordDiff, compareMethod, linesOffset, this.props.alwaysShowLines);\n            const extraLines = this.props.extraLinesSurroundingDiff < 0\n                ? 0\n                : Math.round(this.props.extraLinesSurroundingDiff);\n            const { lineBlocks, blocks } = (0, compute_hidden_blocks_1.computeHiddenBlocks)(lineInformation, diffLines, extraLines);\n            return lineInformation.map((line, lineIndex) => {\n                if (this.props.showDiffOnly) {\n                    const blockIndex = lineBlocks[lineIndex];\n                    if (blockIndex !== undefined) {\n                        const lastLineOfBlock = blocks[blockIndex].endLine === lineIndex;\n                        if (!this.state.expandedBlocks.includes(blockIndex) && lastLineOfBlock) {\n                            return ((0, jsx_runtime_1.jsx)(React.Fragment, { children: this.renderSkippedLineIndicator(blocks[blockIndex].lines, blockIndex, line.left.lineNumber, line.right.lineNumber) }, lineIndex));\n                        }\n                        else if (!this.state.expandedBlocks.includes(blockIndex)) {\n                            return null;\n                        }\n                    }\n                }\n                const diffNodes = splitView\n                    ? this.renderSplitView(line, lineIndex)\n                    : this.renderInlineView(line, lineIndex);\n                return diffNodes;\n            });\n        };\n        this.render = () => {\n            const { oldValue, newValue, useDarkTheme, leftTitle, rightTitle, splitView, hideLineNumbers, hideMarkers, nonce, } = this.props;\n            if (this.props.compareMethod !== compute_lines_1.DiffMethod.JSON) {\n                if (typeof oldValue !== 'string' || typeof newValue !== 'string') {\n                    throw Error('\"oldValue\" and \"newValue\" should be strings');\n                }\n            }\n            this.styles = this.computeStyles(this.props.styles, useDarkTheme, nonce);\n            const nodes = this.renderDiff();\n            let colSpanOnSplitView = hideLineNumbers ? 2 : 3;\n            let colSpanOnInlineView = hideLineNumbers ? 2 : 4;\n            if (hideMarkers) {\n                colSpanOnSplitView -= 1;\n                colSpanOnInlineView -= 1;\n            }\n            const columnExtension = this.props.renderGutter ? 1 : 0;\n            const title = (leftTitle || rightTitle) && ((0, jsx_runtime_1.jsxs)(\"tr\", { children: [(0, jsx_runtime_1.jsx)(\"td\", { colSpan: (splitView ? colSpanOnSplitView : colSpanOnInlineView) +\n                            columnExtension, className: this.styles.titleBlock, children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.contentText, children: leftTitle }) }), splitView && ((0, jsx_runtime_1.jsx)(\"td\", { colSpan: colSpanOnSplitView + columnExtension, className: this.styles.titleBlock, children: (0, jsx_runtime_1.jsx)(\"pre\", { className: this.styles.contentText, children: rightTitle }) }))] }));\n            return ((0, jsx_runtime_1.jsx)(\"table\", { className: (0, classnames_1.default)(this.styles.diffContainer, {\n                    [this.styles.splitView]: splitView,\n                }), children: (0, jsx_runtime_1.jsxs)(\"tbody\", { children: [title, nodes] }) }));\n        };\n        this.state = {\n            expandedBlocks: [],\n        };\n    }\n}\nDiffViewer.defaultProps = {\n    oldValue: '',\n    newValue: '',\n    splitView: true,\n    highlightLines: [],\n    disableWordDiff: false,\n    compareMethod: compute_lines_1.DiffMethod.CHARS,\n    styles: {},\n    hideLineNumbers: false,\n    hideMarkers: false,\n    extraLinesSurroundingDiff: 3,\n    showDiffOnly: true,\n    useDarkTheme: false,\n    linesOffset: 0,\n    nonce: '',\n};\nexports.default = DiffViewer;\n"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAOA,KAAC,WAAY;AACZ;AAEA,UAAI,SAAS,CAAC,EAAE;AAEhB,eAAS,aAAc;AACtB,YAAI,UAAU;AAEd,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,cAAI,MAAM,UAAU,CAAC;AACrB,cAAI,KAAK;AACR,sBAAU,YAAY,SAAS,WAAW,GAAG,CAAC;AAAA,UAC/C;AAAA,QACD;AAEA,eAAO;AAAA,MACR;AAEA,eAAS,WAAY,KAAK;AACzB,YAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU;AACvD,iBAAO;AAAA,QACR;AAEA,YAAI,OAAO,QAAQ,UAAU;AAC5B,iBAAO;AAAA,QACR;AAEA,YAAI,MAAM,QAAQ,GAAG,GAAG;AACvB,iBAAO,WAAW,MAAM,MAAM,GAAG;AAAA,QAClC;AAEA,YAAI,IAAI,aAAa,OAAO,UAAU,YAAY,CAAC,IAAI,SAAS,SAAS,EAAE,SAAS,eAAe,GAAG;AACrG,iBAAO,IAAI,SAAS;AAAA,QACrB;AAEA,YAAI,UAAU;AAEd,iBAAS,OAAO,KAAK;AACpB,cAAI,OAAO,KAAK,KAAK,GAAG,KAAK,IAAI,GAAG,GAAG;AACtC,sBAAU,YAAY,SAAS,GAAG;AAAA,UACnC;AAAA,QACD;AAEA,eAAO;AAAA,MACR;AAEA,eAAS,YAAa,OAAO,UAAU;AACtC,YAAI,CAAC,UAAU;AACd,iBAAO;AAAA,QACR;AAEA,YAAI,OAAO;AACV,iBAAO,QAAQ,MAAM;AAAA,QACtB;AAEA,eAAO,QAAQ;AAAA,MAChB;AAEA,UAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AACpD,mBAAW,UAAU;AACrB,eAAO,UAAU;AAAA,MAClB,WAAW,OAAO,WAAW,cAAc,OAAO,OAAO,QAAQ,YAAY,OAAO,KAAK;AAExF,eAAO,cAAc,CAAC,GAAG,WAAY;AACpC,iBAAO;AAAA,QACR,CAAC;AAAA,MACF,OAAO;AACN,eAAO,aAAa;AAAA,MACrB;AAAA,IACD,GAAE;AAAA;AAAA;;;;;;;;;;AC5Ea,aAASA,OAAO;IAAE;AAEjCA,SAAKC,YAAY;;;MACfC,MADe,SAAA,KACVC,WAAWC,WAAyB;AAAA,YAAA;AAAA,YAAdC,UAAc,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAJ,CAAA;AACnC,YAAIC,WAAWD,QAAQC;AACvB,YAAI,OAAOD,YAAY,YAAY;AACjCC,qBAAWD;AACXA,oBAAU,CAAA;QACX;AACD,aAAKA,UAAUA;AAEf,YAAIE,OAAO;AAEX,iBAASC,KAAKC,OAAO;AACnB,cAAIH,UAAU;AACZI,uBAAW,WAAW;AAAEJ,uBAASK,QAAWF,KAAZ;YAAqB,GAAE,CAA7C;AACV,mBAAO;UACR,OAAM;AACL,mBAAOA;UACR;QACF;AAGDN,oBAAY,KAAKS,UAAUT,SAAf;AACZC,oBAAY,KAAKQ,UAAUR,SAAf;AAEZD,oBAAY,KAAKU,YAAY,KAAKC,SAASX,SAAd,CAAjB;AACZC,oBAAY,KAAKS,YAAY,KAAKC,SAASV,SAAd,CAAjB;AAEZ,YAAIW,SAASX,UAAUY,QAAQC,SAASd,UAAUa;AAClD,YAAIE,aAAa;AACjB,YAAIC,gBAAgBJ,SAASE;AAC7B,YAAGZ,QAAQc,eAAe;AACxBA,0BAAgBC,KAAKC,IAAIF,eAAed,QAAQc,aAAhC;QACjB;AACD,YAAMG;;WAAgB;UAAGjB,QAAQkB,aAAX,QAAA,qBAAA,SAAA,mBAAsBC;;AAC5C,YAAMC,sBAAsBC,KAAKC,IAAL,IAAaL;AAEzC,YAAIM,WAAW,CAAC;UAAEC,QAAQ;UAAIC,eAAenB;QAA7B,CAAD;AAGf,YAAIoB,SAAS,KAAKC,cAAcJ,SAAS,CAAD,GAAKxB,WAAWD,WAAW,CAAtD;AACb,YAAIyB,SAAS,CAAD,EAAIC,SAAS,KAAKZ,UAAUc,SAAS,KAAKhB,QAAQ;AAE5D,iBAAOP,KAAK,CAAC;YAACC,OAAO,KAAKwB,KAAK7B,SAAV;YAAsB8B,OAAO9B,UAAUY;UAA/C,CAAD,CAAD;QACZ;AAmBD,YAAImB,wBAAwB,WAAWC,wBAAwBZ;AAG/D,iBAASa,iBAAiB;AACxB,mBACMC,eAAelB,KAAKmB,IAAIJ,uBAAuB,CAACjB,UAAjC,GACnBoB,gBAAgBlB,KAAKC,IAAIe,uBAAuBlB,UAAhC,GAChBoB,gBAAgB,GAChB;AACA,gBAAIE;;cAAQ;;AACZ,gBAAIC,aAAab,SAASU,eAAe,CAAhB,GACrBI,UAAUd,SAASU,eAAe,CAAhB;AACtB,gBAAIG,YAAY;AAEdb,uBAASU,eAAe,CAAhB,IAAqB3B;YAC9B;AAED,gBAAIgC,SAAS;AACb,gBAAID,SAAS;AAEX,kBAAME,gBAAgBF,QAAQb,SAASS;AACvCK,uBAASD,WAAW,KAAKE,iBAAiBA,gBAAgB7B;YAC3D;AAED,gBAAI8B,YAAYJ,cAAcA,WAAWZ,SAAS,IAAIZ;AACtD,gBAAI,CAAC0B,UAAU,CAACE,WAAW;AAEzBjB,uBAASU,YAAD,IAAiB3B;AACzB;YACD;AAOD,gBAAI,CAACkC,aAAcF,UAAUF,WAAWZ,SAAS,IAAIa,QAAQb,QAAS;AACpEW,yBAAWjC,KAAKuC,UAAUJ,SAAS,MAAM/B,QAAW,CAAzC;YACZ,OAAM;AACL6B,yBAAWjC,KAAKuC,UAAUL,YAAY9B,QAAW,MAAM,CAA5C;YACZ;AAEDoB,qBAASxB,KAAKyB,cAAcQ,UAAUpC,WAAWD,WAAWmC,YAAnD;AAET,gBAAIE,SAASX,SAAS,KAAKZ,UAAUc,SAAS,KAAKhB,QAAQ;AAEzD,qBAAOP,KAAKuC,YAAYxC,MAAMiC,SAASV,eAAe1B,WAAWD,WAAWI,KAAKyC,eAA1D,CAAZ;YACZ,OAAM;AACLpB,uBAASU,YAAD,IAAiBE;AACzB,kBAAIA,SAASX,SAAS,KAAKZ,QAAQ;AACjCmB,wCAAwBhB,KAAKC,IAAIe,uBAAuBE,eAAe,CAA/C;cACzB;AACD,kBAAIP,SAAS,KAAKhB,QAAQ;AACxBoB,wCAAwBf,KAAKmB,IAAIJ,uBAAuBG,eAAe,CAA/C;cACzB;YACF;UACF;AAEDpB;QACD;AAMD,YAAIZ,UAAU;AACX,WAAA,SAAS2C,OAAO;AACfvC,uBAAW,WAAW;AACpB,kBAAIQ,aAAaC,iBAAiBO,KAAKC,IAAL,IAAaF,qBAAqB;AAClE,uBAAOnB,SAAQ;cAChB;AAED,kBAAI,CAAC+B,eAAc,GAAI;AACrBY,qBAAI;cACL;YACF,GAAE,CARO;UASX,GAVA;QAWF,OAAM;AACL,iBAAO/B,cAAcC,iBAAiBO,KAAKC,IAAL,KAAcF,qBAAqB;AACvE,gBAAIyB,MAAMb,eAAc;AACxB,gBAAIa,KAAK;AACP,qBAAOA;YACR;UACF;QACF;MACF;;;MAEDJ,WArJe,SAAA,UAqJLK,MAAMC,OAAOC,SAASC,WAAW;AACzC,YAAIC,OAAOJ,KAAKrB;AAChB,YAAIyB,QAAQA,KAAKH,UAAUA,SAASG,KAAKF,YAAYA,SAAS;AAC5D,iBAAO;YACLxB,QAAQsB,KAAKtB,SAASyB;YACtBxB,eAAe;cAACI,OAAOqB,KAAKrB,QAAQ;cAAGkB;cAAcC;cAAkBG,mBAAmBD,KAAKC;YAAhF;UAFV;QAIR,OAAM;AACL,iBAAO;YACL3B,QAAQsB,KAAKtB,SAASyB;YACtBxB,eAAe;cAACI,OAAO;cAAGkB;cAAcC;cAAkBG,mBAAmBD;YAA9D;UAFV;QAIR;MACF;;;MACDvB,eAnKe,SAAA,cAmKDQ,UAAUpC,WAAWD,WAAWmC,cAAc;AAC1D,YAAIvB,SAASX,UAAUY,QACnBC,SAASd,UAAUa,QACnBa,SAASW,SAASX,QAClBE,SAASF,SAASS,cAElBmB,cAAc;AAClB,eAAO1B,SAAS,IAAIhB,UAAUc,SAAS,IAAIZ,UAAU,KAAKyC,OAAOtD,UAAU2B,SAAS,CAAV,GAAc5B,UAAU0B,SAAS,CAAV,CAA5C,GAA2D;AAC9GE;AACAF;AACA4B;QACD;AAED,YAAIA,aAAa;AACfjB,mBAASV,gBAAgB;YAACI,OAAOuB;YAAaD,mBAAmBhB,SAASV;UAAjD;QAC1B;AAEDU,iBAASX,SAASA;AAClB,eAAOE;MACR;;;MAED2B,QAxLe,SAAA,OAwLRC,MAAMC,OAAO;AAClB,YAAI,KAAKvD,QAAQwD,YAAY;AAC3B,iBAAO,KAAKxD,QAAQwD,WAAWF,MAAMC,KAA9B;QACR,OAAM;AACL,iBAAOD,SAASC,SACV,KAAKvD,QAAQyD,cAAcH,KAAKI,YAAL,MAAuBH,MAAMG,YAAN;QACzD;MACF;;;MACDlD,aAhMe,SAAA,YAgMHmD,OAAO;AACjB,YAAId,MAAM,CAAA;AACV,iBAASe,IAAI,GAAGA,IAAID,MAAMhD,QAAQiD,KAAK;AACrC,cAAID,MAAMC,CAAD,GAAK;AACZf,gBAAIgB,KAAKF,MAAMC,CAAD,CAAd;UACD;QACF;AACD,eAAOf;MACR;;;MACDtC,WAzMe,SAAA,UAyMLH,OAAO;AACf,eAAOA;MACR;;;MACDK,UA5Me,SAAAA,UA4MNL,OAAO;AACd,eAAOA,MAAM0D,MAAM,EAAZ;MACR;;;MACDlC,MA/Me,SAAA,KA+MVmC,OAAO;AACV,eAAOA,MAAMnC,KAAK,EAAX;MACR;IAjNc;AAoNjB,aAASc,YAAY7C,MAAM4B,eAAe1B,WAAWD,WAAW6C,iBAAiB;AAG/E,UAAMqB,aAAa,CAAA;AACnB,UAAIC;AACJ,aAAOxC,eAAe;AACpBuC,mBAAWH,KAAKpC,aAAhB;AACAwC,wBAAgBxC,cAAc0B;AAC9B,eAAO1B,cAAc0B;AACrB1B,wBAAgBwC;MACjB;AACDD,iBAAWE,QAAX;AAEA,UAAIC,eAAe,GACfC,eAAeJ,WAAWrD,QAC1Be,SAAS,GACTF,SAAS;AAEb,aAAO2C,eAAeC,cAAcD,gBAAgB;AAClD,YAAIE,YAAYL,WAAWG,YAAD;AAC1B,YAAI,CAACE,UAAUrB,SAAS;AACtB,cAAI,CAACqB,UAAUtB,SAASJ,iBAAiB;AACvC,gBAAIvC,QAAQL,UAAUuE,MAAM5C,QAAQA,SAAS2C,UAAUxC,KAA3C;AACZzB,oBAAQA,MAAMmE,IAAI,SAASnE,QAAOwD,GAAG;AACnC,kBAAIY,WAAW1E,UAAU0B,SAASoC,CAAV;AACxB,qBAAOY,SAAS7D,SAASP,OAAMO,SAAS6D,WAAWpE;YACpD,CAHO;AAKRiE,sBAAUjE,QAAQP,KAAK+B,KAAKxB,KAAV;UACnB,OAAM;AACLiE,sBAAUjE,QAAQP,KAAK+B,KAAK7B,UAAUuE,MAAM5C,QAAQA,SAAS2C,UAAUxC,KAA3C,CAAV;UACnB;AACDH,oBAAU2C,UAAUxC;AAGpB,cAAI,CAACwC,UAAUtB,OAAO;AACpBvB,sBAAU6C,UAAUxC;UACrB;QACF,OAAM;AACLwC,oBAAUjE,QAAQP,KAAK+B,KAAK9B,UAAUwE,MAAM9C,QAAQA,SAAS6C,UAAUxC,KAA3C,CAAV;AAClBL,oBAAU6C,UAAUxC;AAKpB,cAAIsC,gBAAgBH,WAAWG,eAAe,CAAhB,EAAmBpB,OAAO;AACtD,gBAAI0B,MAAMT,WAAWG,eAAe,CAAhB;AACpBH,uBAAWG,eAAe,CAAhB,IAAqBH,WAAWG,YAAD;AACzCH,uBAAWG,YAAD,IAAiBM;UAC5B;QACF;MACF;AAKD,UAAIC,iBAAiBV,WAAWI,eAAe,CAAhB;AAC/B,UAAIA,eAAe,KACZ,OAAOM,eAAetE,UAAU,aAC/BsE,eAAe3B,SAAS2B,eAAe1B,YACxCnD,KAAKwD,OAAO,IAAIqB,eAAetE,KAA/B,GAAuC;AAC5C4D,mBAAWI,eAAe,CAAhB,EAAmBhE,SAASsE,eAAetE;AACrD4D,mBAAWW,IAAX;MACD;AAED,aAAOX;IACR;;;;;;;;;;;;;ACxRD,QAAA,QAAA,uBAAA,cAAA;;;;AAEO,QAAMY,gBAAgB;IAAIC;;MAAAA;;IAAAA,EAAJ;;AACtB,aAASC,UAAUC,QAAQC,QAAQC,SAAS;AAAE,aAAOL,cAAcM,KAAKH,QAAQC,QAAQC,OAAnC;IAA8C;;;;;;;;;;;;ACHnG,aAASE,gBAAgBC,SAASC,UAAU;AACjD,UAAI,OAAOD,YAAY,YAAY;AACjCC,iBAASC,WAAWF;MACrB,WAAUA,SAAS;AAClB,iBAASG,QAAQH,SAAS;AAExB,cAAIA,QAAQI,eAAeD,IAAvB,GAA8B;AAChCF,qBAASE,IAAD,IAASH,QAAQG,IAAD;UACzB;QACF;MACF;AACD,aAAOF;IACR;;;;;;;;;;;;;;ACZD,QAAA,QAAA,uBAAA,cAAA;AACA,QAAA,UAAA;;;;AAoBA,QAAMI,oBAAoB;AAE1B,QAAMC,eAAe;AAEd,QAAMC,WAAW;IAAIC;;MAAAA;;IAAAA,EAAJ;;AACxBD,aAASE,SAAS,SAASC,MAAMC,OAAO;AACtC,UAAI,KAAKC,QAAQC,YAAY;AAC3BH,eAAOA,KAAKI,YAAL;AACPH,gBAAQA,MAAMG,YAAN;MACT;AACD,aAAOJ,SAASC,SAAU,KAAKC,QAAQG,oBAAoB,CAACT,aAAaU,KAAKN,IAAlB,KAA2B,CAACJ,aAAaU,KAAKL,KAAlB;IACzF;AACDJ,aAASU,WAAW,SAASC,OAAO;AAElC,UAAIC,SAASD,MAAME,MAAM,iCAAZ;AAGb,eAASC,IAAI,GAAGA,IAAIF,OAAOG,SAAS,GAAGD,KAAK;AAE1C,YAAI,CAACF,OAAOE,IAAI,CAAL,KAAWF,OAAOE,IAAI,CAAL,KACnBhB,kBAAkBW,KAAKG,OAAOE,CAAD,CAA7B,KACAhB,kBAAkBW,KAAKG,OAAOE,IAAI,CAAL,CAA7B,GAAuC;AAC9CF,iBAAOE,CAAD,KAAOF,OAAOE,IAAI,CAAL;AACnBF,iBAAOI,OAAOF,IAAI,GAAG,CAArB;AACAA;QACD;MACF;AAED,aAAOF;IACR;AAEM,aAASK,UAAUC,QAAQC,QAAQd,SAAS;AACjDA;OAAU;;MAAAe,QAAAA,iBAAgBf,SAAS;QAACG,kBAAkB;MAAnB,CAAzB;AACV,aAAOR,SAASqB,KAAKH,QAAQC,QAAQd,OAA9B;IACR;AAEM,aAASiB,mBAAmBJ,QAAQC,QAAQd,SAAS;AAC1D,aAAOL,SAASqB,KAAKH,QAAQC,QAAQd,OAA9B;IACR;;;;;;;;;;;;;;AC3DD,QAAA,QAAA,uBAAA,cAAA;AACA,QAAA,UAAA;;;;AAEO,QAAMkB,WAAW;IAAIC;;MAAAA;;IAAAA,EAAJ;;AACxBD,aAASE,WAAW,SAASC,OAAO;AAClC,UAAG,KAAKC,QAAQC,iBAAiB;AAE/BF,gBAAQA,MAAMG,QAAQ,SAAS,IAAvB;MACT;AAED,UAAIC,WAAW,CAAA,GACXC,mBAAmBL,MAAMM,MAAM,WAAZ;AAGvB,UAAI,CAACD,iBAAiBA,iBAAiBE,SAAS,CAA3B,GAA+B;AAClDF,yBAAiBG,IAAjB;MACD;AAGD,eAASC,IAAI,GAAGA,IAAIJ,iBAAiBE,QAAQE,KAAK;AAChD,YAAIC,QAAOL,iBAAiBI,CAAD;AAE3B,YAAIA,IAAI,KAAK,CAAC,KAAKR,QAAQU,gBAAgB;AACzCP,mBAASA,SAASG,SAAS,CAAnB,KAAyBG;QAClC,OAAM;AACL,cAAI,KAAKT,QAAQW,kBAAkB;AACjCF,YAAAA,QAAOA,MAAKG,KAAL;UACR;AACDT,mBAASU,KAAKJ,KAAd;QACD;MACF;AAED,aAAON;IACR;AAEM,aAASW,UAAUC,QAAQC,QAAQC,UAAU;AAAE,aAAOrB,SAASsB,KAAKH,QAAQC,QAAQC,QAA9B;IAA0C;AAChG,aAASE,iBAAiBJ,QAAQC,QAAQC,UAAU;AACzD,UAAIjB;;SAAU;;QAAAoB,QAAAA,iBAAgBH,UAAU;UAACN,kBAAkB;QAAnB,CAA1B;;AACd,aAAOf,SAASsB,KAAKH,QAAQC,QAAQhB,OAA9B;IACR;;;;;;;;;;;;;ACvCD,QAAA,QAAA,uBAAA,cAAA;;;;AAGO,QAAMqB,eAAe;IAAIC;;MAAAA;;IAAAA,EAAJ;;AAC5BD,iBAAaE,WAAW,SAASC,OAAO;AACtC,aAAOA,MAAMC,MAAM,uBAAZ;IACR;AAEM,aAASC,cAAcC,QAAQC,QAAQC,UAAU;AAAE,aAAOR,aAAaS,KAAKH,QAAQC,QAAQC,QAAlC;IAA8C;;;;;;;;;;;;;ACR/G,QAAA,QAAA,uBAAA,cAAA;;;;AAEO,QAAME,UAAU;IAAIC;;MAAAA;;IAAAA,EAAJ;;AACvBD,YAAQE,WAAW,SAASC,OAAO;AACjC,aAAOA,MAAMC,MAAM,eAAZ;IACR;AAEM,aAASC,QAAQC,QAAQC,QAAQC,UAAU;AAAE,aAAOR,QAAQS,KAAKH,QAAQC,QAAQC,QAA7B;IAAyC;;;;;;;;;;;;;;ACPpG,QAAA,QAAA,uBAAA,cAAA;AACA,QAAA,QAAA;;;;;;;;;;;;;;;;;AAEA,QAAME,0BAA0BC,OAAOC,UAAUC;AAG1C,QAAMC,WAAW;IAAIC;;MAAAA;;IAAAA,EAAJ;;AAGxBD,aAASE,kBAAkB;AAE3BF,aAASG;IAAWC,MAAAA,SAASD;AAC7BH,aAASK,YAAY,SAASC,OAAO;AAAA,UAAA;;QAC+E,KAAKC;SAAhHC,uBAD4B,cAC5BA,sBAD4B,wBAAA,cACNC,mBAAAA,oBADM,0BAAA,SACc,SAACC,GAAGC,GAAJ;AAAA;;UAAU,OAAOA,MAAM,cAAcH,uBAAuBG;;MAA5D,IADd;AAGnC,aAAO,OAAOL,UAAU,WAAWA,QAAQM,KAAKC,UAAUC,aAAaR,OAAO,MAAM,MAAMG,iBAApB,GAAwCA,mBAAmB,IAAtF;IAC5C;AACDT,aAASe,SAAS,SAASC,MAAMC,OAAO;AACtC;;QAAOhB;;UAAAA;;QAAAA,EAAKH,UAAUiB,OAAOG,KAAKlB,UAAUgB,KAAKG,QAAQ,cAAc,IAA3B,GAAkCF,MAAME,QAAQ,cAAc,IAA5B,CAAvE;;IACR;AAEM,aAASC,SAASC,QAAQC,QAAQf,SAAS;AAAE,aAAOP,SAASuB,KAAKF,QAAQC,QAAQf,OAA9B;IAAyC;AAI7F,aAASO,aAAaU,KAAKC,OAAOC,kBAAkBC,UAAUC,KAAK;AACxEH,cAAQA,SAAS,CAAA;AACjBC,yBAAmBA,oBAAoB,CAAA;AAEvC,UAAIC,UAAU;AACZH,cAAMG,SAASC,KAAKJ,GAAN;MACf;AAED,UAAIK;AAEJ,WAAKA,IAAI,GAAGA,IAAIJ,MAAMK,QAAQD,KAAK,GAAG;AACpC,YAAIJ,MAAMI,CAAD,MAAQL,KAAK;AACpB,iBAAOE,iBAAiBG,CAAD;QACxB;MACF;AAED,UAAIE;AAEJ,UAAI,qBAAqBnC,wBAAwBsB,KAAKM,GAA7B,GAAmC;AAC1DC,cAAMO,KAAKR,GAAX;AACAO,2BAAmB,IAAIE,MAAMT,IAAIM,MAAd;AACnBJ,yBAAiBM,KAAKD,gBAAtB;AACA,aAAKF,IAAI,GAAGA,IAAIL,IAAIM,QAAQD,KAAK,GAAG;AAClCE,2BAAiBF,CAAD,IAAMf,aAAaU,IAAIK,CAAD,GAAKJ,OAAOC,kBAAkBC,UAAUC,GAA5C;QACnC;AACDH,cAAMS,IAAN;AACAR,yBAAiBQ,IAAjB;AACA,eAAOH;MACR;AAED,UAAIP,OAAOA,IAAIW,QAAQ;AACrBX,cAAMA,IAAIW,OAAJ;MACP;AAED;;QAAI;;UAAOX;QAAP,MAAe,YAAYA,QAAQ;QAAM;AAC3CC,cAAMO,KAAKR,GAAX;AACAO,2BAAmB,CAAA;AACnBL,yBAAiBM,KAAKD,gBAAtB;AACA,YAAIK,aAAa,CAAA,GACbR;AACJ,aAAKA,QAAOJ,KAAK;AAEf,cAAIA,IAAIa,eAAeT,IAAnB,GAAyB;AAC3BQ,uBAAWJ,KAAKJ,IAAhB;UACD;QACF;AACDQ,mBAAWE,KAAX;AACA,aAAKT,IAAI,GAAGA,IAAIO,WAAWN,QAAQD,KAAK,GAAG;AACzCD,iBAAMQ,WAAWP,CAAD;AAChBE,2BAAiBH,IAAD,IAAQd,aAAaU,IAAII,IAAD,GAAOH,OAAOC,kBAAkBC,UAAUC,IAA9C;QACrC;AACDH,cAAMS,IAAN;AACAR,yBAAiBQ,IAAjB;MACD,OAAM;AACLH,2BAAmBP;MACpB;AACD,aAAOO;IACR;;;;;;;;;;;;;AClFD,QAAA,QAAA,uBAAA,cAAA;;;;AAEO,QAAMQ,YAAY;IAAIC;;MAAAA;;IAAAA,EAAJ;;AACzBD,cAAUE,WAAW,SAASC,OAAO;AACnC,aAAOA,MAAMC,MAAN;IACR;AACDJ,cAAUK,OAAOL,UAAUM,cAAc,SAASH,OAAO;AACvD,aAAOA;IACR;AAEM,aAASI,WAAWC,QAAQC,QAAQC,UAAU;AAAE,aAAOV,UAAUW,KAAKH,QAAQC,QAAQC,QAA/B;IAA2C;;;;;;;;;;;;ACVlG,aAASE,WAAWC,SAAuB;AAAA,UAAdC,UAAc,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAJ,CAAA;AAC5C,UAAIC,UAAUF,QAAQG,MAAM,qBAAd,GACVC,aAAaJ,QAAQK,MAAM,sBAAd,KAAyC,CAAA,GACtDC,OAAO,CAAA,GACPC,IAAI;AAER,eAASC,aAAa;AACpB,YAAIC,QAAQ,CAAA;AACZH,aAAKI,KAAKD,KAAV;AAGA,eAAOF,IAAIL,QAAQS,QAAQ;AACzB,cAAIC,QAAOV,QAAQK,CAAD;AAGlB,cAAK,wBAAyBM,KAAKD,KAA/B,GAAsC;AACxC;UACD;AAGD,cAAIE,SAAU,2CAA4CC,KAAKH,KAAlD;AACb,cAAIE,QAAQ;AACVL,kBAAMA,QAAQK,OAAO,CAAD;UACrB;AAEDP;QACD;AAIDS,wBAAgBP,KAAD;AACfO,wBAAgBP,KAAD;AAGfA,cAAMQ,QAAQ,CAAA;AAEd,eAAOV,IAAIL,QAAQS,QAAQ;AACzB,cAAIC,QAAOV,QAAQK,CAAD;AAElB,cAAK,iCAAkCM,KAAKD,KAAxC,GAA+C;AACjD;UACD,WAAW,MAAOC,KAAKD,KAAb,GAAoB;AAC7BH,kBAAMQ,MAAMP,KAAKQ,UAAS,CAA1B;UACD,WAAUN,SAAQX,QAAQkB,QAAQ;AAEjC,kBAAM,IAAIC,MAAM,mBAAmBb,IAAI,KAAK,MAAMc,KAAKC,UAAUV,KAAf,CAA5C;UACP,OAAM;AACLL;UACD;QACF;MACF;AAID,eAASS,gBAAgBP,OAAO;AAC9B,YAAMc,aAAc,wBAAyBR,KAAKb,QAAQK,CAAD,CAAtC;AACnB,YAAIgB,YAAY;AACd,cAAIC,YAAYD,WAAW,CAAD,MAAQ,QAAQ,QAAQ;AAClD,cAAME,OAAOF,WAAW,CAAD,EAAIpB,MAAM,KAAM,CAA1B;AACb,cAAIuB,WAAWD,KAAK,CAAD,EAAIE,QAAQ,SAAS,IAAzB;AACf,cAAK,SAAUd,KAAKa,QAAhB,GAA2B;AAC7BA,uBAAWA,SAASE,OAAO,GAAGF,SAASf,SAAS,CAArC;UACZ;AACDF,gBAAMe,YAAY,UAAb,IAA2BE;AAChCjB,gBAAMe,YAAY,QAAb,KAA0BC,KAAK,CAAD,KAAO,IAAII,KAAhB;AAE9BtB;QACD;MACF;AAID,eAASW,YAAY;AACnB,YAAIY,mBAAmBvB,GACnBwB,kBAAkB7B,QAAQK,GAAD,GACzByB,cAAcD,gBAAgB5B,MAAM,4CAAtB;AAElB,YAAI8B,OAAO;UACTC,UAAU,CAACF,YAAY,CAAD;UACtBG,UAAU,OAAOH,YAAY,CAAD,MAAQ,cAAc,IAAI,CAACA,YAAY,CAAD;UAClEI,UAAU,CAACJ,YAAY,CAAD;UACtBK,UAAU,OAAOL,YAAY,CAAD,MAAQ,cAAc,IAAI,CAACA,YAAY,CAAD;UAClEM,OAAO,CAAA;UACPC,gBAAgB,CAAA;QANP;AAYX,YAAIN,KAAKE,aAAa,GAAG;AACvBF,eAAKC,YAAY;QAClB;AACD,YAAID,KAAKI,aAAa,GAAG;AACvBJ,eAAKG,YAAY;QAClB;AAED,YAAII,WAAW,GACXC,cAAc;AAClB,eAAOlC,IAAIL,QAAQS,QAAQJ,KAAK;AAG9B,cAAIL,QAAQK,CAAD,EAAImC,QAAQ,MAAnB,MAA+B,KACzBnC,IAAI,IAAIL,QAAQS,UACjBT,QAAQK,IAAI,CAAL,EAAQmC,QAAQ,MAAvB,MAAmC,KACnCxC,QAAQK,IAAI,CAAL,EAAQmC,QAAQ,IAAvB,MAAiC,GAAG;AACzC;UACH;AACD,cAAIC,YAAazC,QAAQK,CAAD,EAAII,UAAU,KAAKJ,KAAML,QAAQS,SAAS,IAAM,MAAMT,QAAQK,CAAD,EAAI,CAAX;AAE9E,cAAIoC,cAAc,OAAOA,cAAc,OAAOA,cAAc,OAAOA,cAAc,MAAM;AACrFV,iBAAKK,MAAM5B,KAAKR,QAAQK,CAAD,CAAvB;AACA0B,iBAAKM,eAAe7B,KAAKN,WAAWG,CAAD,KAAO,IAA1C;AAEA,gBAAIoC,cAAc,KAAK;AACrBH;YACD,WAAUG,cAAc,KAAK;AAC5BF;YACD,WAAUE,cAAc,KAAK;AAC5BH;AACAC;YACD;UACF,OAAM;AACL;UACD;QACF;AAGD,YAAI,CAACD,YAAYP,KAAKI,aAAa,GAAG;AACpCJ,eAAKI,WAAW;QACjB;AACD,YAAI,CAACI,eAAeR,KAAKE,aAAa,GAAG;AACvCF,eAAKE,WAAW;QACjB;AAGD,YAAIlC,QAAQkB,QAAQ;AAClB,cAAIqB,aAAaP,KAAKI,UAAU;AAC9B,kBAAM,IAAIjB,MAAM,sDAAsDU,mBAAmB,EAAnF;UACP;AACD,cAAIW,gBAAgBR,KAAKE,UAAU;AACjC,kBAAM,IAAIf,MAAM,wDAAwDU,mBAAmB,EAArF;UACP;QACF;AAED,eAAOG;MACR;AAED,aAAO1B,IAAIL,QAAQS,QAAQ;AACzBH,mBAAU;MACX;AAED,aAAOF;IACR;;;;;;;;;;;;ACrJc,aAAA,SAASsC,OAAOC,SAASC,SAAS;AAC/C,UAAIC,cAAc,MACdC,oBAAoB,OACpBC,mBAAmB,OACnBC,cAAc;AAElB,aAAO,SAASC,WAAW;AACzB,YAAIJ,eAAe,CAACE,kBAAkB;AACpC,cAAID,mBAAmB;AACrBE;UACD,OAAM;AACLH,0BAAc;UACf;AAID,cAAIH,QAAQM,eAAeJ,SAAS;AAClC,mBAAOI;UACR;AAEDD,6BAAmB;QACpB;AAED,YAAI,CAACD,mBAAmB;AACtB,cAAI,CAACC,kBAAkB;AACrBF,0BAAc;UACf;AAID,cAAIF,WAAWD,QAAQM,aAAa;AAClC,mBAAO,CAACA;UACT;AAEDF,8BAAoB;AACpB,iBAAOG,SAAQ;QAChB;MAIF;IACF;;;;;;;;;;;;;AC5CD,QAAA,SAAA;AACA,QAAA,oBAAA,uBAAA,2BAAA;;;;AAEO,aAASC,WAAWC,QAAQC,SAAuB;AAAA,UAAdC,UAAc,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAJ,CAAA;AACpD,UAAI,OAAOD,YAAY,UAAU;AAC/BA;SAAU;;QAAAE,OAAAA,YAAWF,OAAX;MACX;AAED,UAAIG,MAAMC,QAAQJ,OAAd,GAAwB;AAC1B,YAAIA,QAAQK,SAAS,GAAG;AACtB,gBAAM,IAAIC,MAAM,4CAAV;QACP;AAEDN,kBAAUA,QAAQ,CAAD;MAClB;AAGD,UAAIO,QAAQR,OAAOS,MAAM,qBAAb,GACRC,aAAaV,OAAOW,MAAM,sBAAb,KAAwC,CAAA,GACrDC,QAAQX,QAAQW,OAEhBC,cAAcX,QAAQW,eAAgB,SAACC,YAAYC,OAAMC,YAAWC,cAA9B;AAAA;;UAA+CF,UAASE;;MAAxD,GACtCC,aAAa,GACbC,aAAajB,QAAQiB,cAAc,GACnCC,UAAU,GACVC,SAAS,GAETC,aACAC;AAKJ,eAASC,SAASC,OAAMC,QAAO;AAC7B,iBAASC,KAAI,GAAGA,KAAIF,MAAKjB,MAAMF,QAAQqB,MAAK;AAC1C,cAAIZ,QAAOU,MAAKjB,MAAMmB,EAAX,GACPX,aAAaD,MAAKT,SAAS,IAAIS,MAAK,CAAD,IAAM,KACzCa,WAAWb,MAAKT,SAAS,IAAIS,MAAKc,OAAO,CAAZ,IAAiBd;AAElD,cAAIC,eAAc,OAAOA,eAAc,KAAK;AAE1C,gBAAI,CAACH,YAAYa,SAAQ,GAAGlB,MAAMkB,MAAD,GAASV,YAAWY,QAArC,GAA+C;AAC7DV;AAEA,kBAAIA,aAAaC,YAAY;AAC3B,uBAAO;cACR;YACF;AACDO,YAAAA;UACD;QACF;AAED,eAAO;MACR;AAGD,eAASI,IAAI,GAAGA,IAAIlB,MAAMN,QAAQwB,KAAK;AACrC,YAAIL,OAAOb,MAAMkB,CAAD,GACZC,UAAUvB,MAAMF,SAASmB,KAAKO,UAC9BC,cAAc,GACdP,QAAQL,SAASI,KAAKS,WAAW;AAErC,YAAIC;;WAAW;;UAAAC;;YAAAA;;UAAAA,GAAiBV,OAAON,SAASW,OAAjC;;AAEf,eAAOE,gBAAgBI,QAAWJ,cAAcE,SAAQ,GAAI;AAC1D,cAAIX,SAASC,MAAMC,QAAQO,WAAf,GAA6B;AACvCR,iBAAKJ,SAASA,UAAUY;AACxB;UACD;QACF;AAED,YAAIA,gBAAgBI,QAAW;AAC7B,iBAAO;QACR;AAIDjB,kBAAUK,KAAKJ,SAASI,KAAKS,WAAWT,KAAKO;MAC9C;AAGD,UAAIM,aAAa;AACjB,eAASR,KAAI,GAAGA,KAAIlB,MAAMN,QAAQwB,MAAK;AACrC,YAAIL,QAAOb,MAAMkB,EAAD,GACZJ,SAAQD,MAAKS,WAAWT,MAAKJ,SAASiB,aAAa;AACvDA,sBAAcb,MAAKc,WAAWd,MAAKO;AAEnC,iBAASL,IAAI,GAAGA,IAAIF,MAAKjB,MAAMF,QAAQqB,KAAK;AAC1C,cAAIZ,QAAOU,MAAKjB,MAAMmB,CAAX,GACPX,YAAaD,MAAKT,SAAS,IAAIS,MAAK,CAAD,IAAM,KACzCa,UAAWb,MAAKT,SAAS,IAAIS,MAAKc,OAAO,CAAZ,IAAiBd,OAC9CyB,aAAYf,MAAKgB,kBAAkBhB,MAAKgB,eAAed,CAApB,KAA0B;AAEjE,cAAIX,cAAc,KAAK;AACrBU;UACD,WAAUV,cAAc,KAAK;AAC5BR,kBAAMkC,OAAOhB,QAAO,CAApB;AACAhB,uBAAWgC,OAAOhB,QAAO,CAAzB;UAED,WAAUV,cAAc,KAAK;AAC5BR,kBAAMkC,OAAOhB,QAAO,GAAGE,OAAvB;AACAlB,uBAAWgC,OAAOhB,QAAO,GAAGc,UAA5B;AACAd;UACD,WAAUV,cAAc,MAAM;AAC7B,gBAAI2B,oBAAoBlB,MAAKjB,MAAMmB,IAAI,CAAf,IAAoBF,MAAKjB,MAAMmB,IAAI,CAAf,EAAkB,CAAlB,IAAuB;AACnE,gBAAIgB,sBAAsB,KAAK;AAC7BrB,4BAAc;YACf,WAAUqB,sBAAsB,KAAK;AACpCpB,yBAAW;YACZ;UACF;QACF;MACF;AAGD,UAAID,aAAa;AACf,eAAO,CAACd,MAAMA,MAAMF,SAAS,CAAhB,GAAoB;AAC/BE,gBAAMoC,IAAN;AACAlC,qBAAWkC,IAAX;QACD;MACF,WAAUrB,UAAU;AACnBf,cAAMqC,KAAK,EAAX;AACAnC,mBAAWmC,KAAK,IAAhB;MACD;AACD,eAASC,KAAK,GAAGA,KAAKtC,MAAMF,SAAS,GAAGwC,MAAM;AAC5CtC,cAAMsC,EAAD,IAAOtC,MAAMsC,EAAD,IAAOpC,WAAWoC,EAAD;MACnC;AACD,aAAOtC,MAAMuC,KAAK,EAAX;IACR;AAGM,aAASC,aAAa/C,SAASC,SAAS;AAC7C,UAAI,OAAOD,YAAY,UAAU;AAC/BA;SAAU;;QAAAE,OAAAA,YAAWF,OAAX;MACX;AAED,UAAIgD,eAAe;AACnB,eAASC,eAAe;AACtB,YAAIC,QAAQlD,QAAQgD,cAAD;AACnB,YAAI,CAACE,OAAO;AACV,iBAAOjD,QAAQkD,SAAR;QACR;AAEDlD,gBAAQmD,SAASF,OAAO,SAASG,KAAKC,MAAM;AAC1C,cAAID,KAAK;AACP,mBAAOpD,QAAQkD,SAASE,GAAjB;UACR;AAED,cAAIE,iBAAiBzD,WAAWwD,MAAMJ,OAAOjD,OAAd;AAC/BA,kBAAQuD,QAAQN,OAAOK,gBAAgB,SAASF,MAAK;AACnD,gBAAIA,MAAK;AACP,qBAAOpD,QAAQkD,SAASE,IAAjB;YACR;AAEDJ,yBAAY;UACb,CAND;QAOD,CAbD;MAcD;AACDA,mBAAY;IACb;;;;;;;;;;;;;;;AC/JD,QAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,aAASQ,gBAAgBC,aAAaC,aAAaC,QAAQC,QAAQC,WAAWC,WAAWC,SAAS;AACvG,UAAI,CAACA,SAAS;AACZA,kBAAU,CAAA;MACX;AACD,UAAI,OAAOA,QAAQC,YAAY,aAAa;AAC1CD,gBAAQC,UAAU;MACnB;AAED,UAAMC;;SAAO;;QAAAC,MAAAA,WAAUP,QAAQC,QAAQG,OAA1B;;AACb,UAAG,CAACE,MAAM;AACR;MACD;AAEDA,WAAKE,KAAK;QAACC,OAAO;QAAIC,OAAO,CAAA;MAAnB,CAAV;AAEA,eAASC,aAAaD,OAAO;AAC3B,eAAOA,MAAME,IAAI,SAASC,OAAO;AAAE,iBAAO,MAAMA;QAAQ,CAAjD;MACR;AAED,UAAIC,QAAQ,CAAA;AACZ,UAAIC,gBAAgB,GAAGC,gBAAgB,GAAGC,WAAW,CAAA,GACjDC,UAAU,GAAGC,UAAU;AArB4E,UAAA,QAAA,SAAAC,OAsB9FC,IAtB8F;AAuBrG,YAAMC,UAAUhB,KAAKe,EAAD,GACdX,QAAQY,QAAQZ,SAASY,QAAQb,MAAMc,QAAQ,OAAO,EAA7B,EAAiCC,MAAM,IAAvC;AAC/BF,gBAAQZ,QAAQA;AAEhB,YAAIY,QAAQG,SAASH,QAAQI,SAAS;AAAA,cAAA;AAEpC,cAAI,CAACX,eAAe;AAClB,gBAAMY,QAAOrB,KAAKe,KAAI,CAAL;AACjBN,4BAAgBG;AAChBF,4BAAgBG;AAEhB,gBAAIQ,OAAM;AACRV,yBAAWb,QAAQC,UAAU,IAAIM,aAAagB,MAAKjB,MAAMkB,MAAM,CAACxB,QAAQC,OAA1B,CAAD,IAAuC,CAAA;AACpFU,+BAAiBE,SAASY;AAC1Bb,+BAAiBC,SAASY;YAC3B;UACF;AAGD,WAAA;UAAAZ,UAAST,KAAT;;YAAA;;YAAA;;cAAkBE,MAAME,IAAI,SAASC,OAAO;AAC1C,wBAAQS,QAAQG,QAAQ,MAAM,OAAOZ;cACtC,CAFiB;YAAlB;UAAA;AAKA,cAAIS,QAAQG,OAAO;AACjBN,uBAAWT,MAAMmB;UAClB,OAAM;AACLX,uBAAWR,MAAMmB;UAClB;QACF,OAAM;AAEL,cAAId,eAAe;AAEjB,gBAAIL,MAAMmB,UAAUzB,QAAQC,UAAU,KAAKgB,KAAIf,KAAKuB,SAAS,GAAG;AAAA,kBAAA;AAE9D,eAAA;cAAAZ,UAAST,KAAT;;gBAAA;;gBAAA;;kBAAkBG,aAAaD,KAAD;gBAA9B;cAAA;YACD,OAAM;AAAA,kBAAA;AAEL,kBAAIoB,cAAcC,KAAKC,IAAItB,MAAMmB,QAAQzB,QAAQC,OAA/B;AAClB,eAAA;cAAAY,UAAST,KAAT;;gBAAA;;gBAAA;;kBAAkBG,aAAaD,MAAMkB,MAAM,GAAGE,WAAf,CAAD;gBAA9B;cAAA;AAEA,kBAAIG,OAAO;gBACTC,UAAUnB;gBACVoB,UAAWjB,UAAUH,gBAAgBe;gBACrCM,UAAUpB;gBACVqB,UAAWlB,UAAUH,gBAAgBc;gBACrCpB,OAAOO;cALE;AAOX,kBAAII,MAAKf,KAAKuB,SAAS,KAAKnB,MAAMmB,UAAUzB,QAAQC,SAAS;AAE3D,oBAAIiC,gBAAkB,MAAOC,KAAKvC,MAAb;AACrB,oBAAIwC,gBAAkB,MAAOD,KAAKtC,MAAb;AACrB,oBAAIwC,iBAAiB/B,MAAMmB,UAAU,KAAKZ,SAASY,SAASI,KAAKE;AACjE,oBAAI,CAACG,iBAAiBG,kBAAkBzC,OAAO6B,SAAS,GAAG;AAGzDZ,2BAASyB,OAAOT,KAAKE,UAAU,GAAG,8BAAlC;gBACD;AACD,oBAAK,CAACG,iBAAiB,CAACG,kBAAmB,CAACD,eAAe;AACzDvB,2BAAST,KAAK,8BAAd;gBACD;cACF;AACDM,oBAAMN,KAAKyB,IAAX;AAEAlB,8BAAgB;AAChBC,8BAAgB;AAChBC,yBAAW,CAAA;YACZ;UACF;AACDC,qBAAWR,MAAMmB;AACjBV,qBAAWT,MAAMmB;QAClB;MA9FoG;AAsBvG,eAASR,IAAI,GAAGA,IAAIf,KAAKuB,QAAQR,KAAK;AAAA;;UAA7BA;QAA6B;MAyErC;AAED,aAAO;QACLvB;QAA0BC;QAC1BG;QAAsBC;QACtBW;MAHK;IAKR;AAEM,aAAS6B,YAAYrC,MAAM;AAChC,UAAIsC,MAAMC,QAAQvC,IAAd,GAAqB;AACvB,eAAOA,KAAKM,IAAI+B,WAAT,EAAsBG,KAAK,IAA3B;MACR;AAED,UAAMC,MAAM,CAAA;AACZ,UAAIzC,KAAKR,eAAeQ,KAAKP,aAAa;AACxCgD,YAAIvC,KAAK,YAAYF,KAAKR,WAA1B;MACD;AACDiD,UAAIvC,KAAK,qEAAT;AACAuC,UAAIvC,KAAK,SAASF,KAAKR,eAAe,OAAOQ,KAAKJ,cAAc,cAAc,KAAK,MAAOI,KAAKJ,UAA/F;AACA6C,UAAIvC,KAAK,SAASF,KAAKP,eAAe,OAAOO,KAAKH,cAAc,cAAc,KAAK,MAAOG,KAAKH,UAA/F;AAEA,eAASkB,IAAI,GAAGA,IAAIf,KAAKQ,MAAMe,QAAQR,KAAK;AAC1C,YAAMY,OAAO3B,KAAKQ,MAAMO,CAAX;AAIb,YAAIY,KAAKE,aAAa,GAAG;AACvBF,eAAKC,YAAY;QAClB;AACD,YAAID,KAAKI,aAAa,GAAG;AACvBJ,eAAKG,YAAY;QAClB;AACDW,YAAIvC,KACF,SAASyB,KAAKC,WAAW,MAAMD,KAAKE,WAClC,OAAOF,KAAKG,WAAW,MAAMH,KAAKI,WAClC,KAHJ;AAKAU,YAAIvC,KAAKwC,MAAMD,KAAKd,KAAKvB,KAAzB;MACD;AAED,aAAOqC,IAAID,KAAK,IAAT,IAAiB;IACzB;AAEM,aAASG,oBAAoBnD,aAAaC,aAAaC,QAAQC,QAAQC,WAAWC,WAAWC,SAAS;AAC3G,aAAOuC,YAAY9C,gBAAgBC,aAAaC,aAAaC,QAAQC,QAAQC,WAAWC,WAAWC,OAAjE,CAAhB;IACnB;AAEM,aAAS8C,YAAYC,UAAUnD,QAAQC,QAAQC,WAAWC,WAAWC,SAAS;AACnF,aAAO6C,oBAAoBE,UAAUA,UAAUnD,QAAQC,QAAQC,WAAWC,WAAWC,OAA3D;IAC3B;;;;;;;;;;;;;ACnJM,aAASgD,WAAWC,GAAGC,GAAG;AAC/B,UAAID,EAAEE,WAAWD,EAAEC,QAAQ;AACzB,eAAO;MACR;AAED,aAAOC,gBAAgBH,GAAGC,CAAJ;IACvB;AAEM,aAASE,gBAAgBC,OAAOC,OAAO;AAC5C,UAAIA,MAAMH,SAASE,MAAMF,QAAQ;AAC/B,eAAO;MACR;AAED,eAASI,IAAI,GAAGA,IAAID,MAAMH,QAAQI,KAAK;AACrC,YAAID,MAAMC,CAAD,MAAQF,MAAME,CAAD,GAAK;AACzB,iBAAO;QACR;MACF;AAED,aAAO;IACR;;;;;;;;;;;;;ACpBD,QAAA,UAAA;AACA,QAAA,SAAA;AAEA,QAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,aAASC,cAAcC,MAAM;AAAA,UAAA;;QACLC,oBAAoBD,KAAKE,KAAN;SAAzCC,WAD2B,qBAC3BA,UAAUC,WADiB,qBACjBA;AAEjB,UAAID,aAAaE,QAAW;AAC1BL,aAAKG,WAAWA;MACjB,OAAM;AACL,eAAOH,KAAKG;MACb;AAED,UAAIC,aAAaC,QAAW;AAC1BL,aAAKI,WAAWA;MACjB,OAAM;AACL,eAAOJ,KAAKI;MACb;IACF;AAEM,aAASE,OAAMC,MAAMC,QAAQC,MAAM;AACxCF,aAAOG,UAAUH,MAAME,IAAP;AAChBD,eAASE,UAAUF,QAAQC,IAAT;AAElB,UAAIE,MAAM,CAAA;AAKV,UAAIJ,KAAKK,SAASJ,OAAOI,OAAO;AAC9BD,YAAIC,QAAQL,KAAKK,SAASJ,OAAOI;MAClC;AAED,UAAIL,KAAKM,eAAeL,OAAOK,aAAa;AAC1C,YAAI,CAACC,gBAAgBP,IAAD,GAAQ;AAE1BI,cAAII,cAAcP,OAAOO,eAAeR,KAAKQ;AAC7CJ,cAAIE,cAAcL,OAAOK,eAAeN,KAAKM;AAC7CF,cAAIK,YAAYR,OAAOQ,aAAaT,KAAKS;AACzCL,cAAIM,YAAYT,OAAOS,aAAaV,KAAKU;QAC1C,WAAU,CAACH,gBAAgBN,MAAD,GAAU;AAEnCG,cAAII,cAAcR,KAAKQ;AACvBJ,cAAIE,cAAcN,KAAKM;AACvBF,cAAIK,YAAYT,KAAKS;AACrBL,cAAIM,YAAYV,KAAKU;QACtB,OAAM;AAELN,cAAII,cAAcG,YAAYP,KAAKJ,KAAKQ,aAAaP,OAAOO,WAA/B;AAC7BJ,cAAIE,cAAcK,YAAYP,KAAKJ,KAAKM,aAAaL,OAAOK,WAA/B;AAC7BF,cAAIK,YAAYE,YAAYP,KAAKJ,KAAKS,WAAWR,OAAOQ,SAA7B;AAC3BL,cAAIM,YAAYC,YAAYP,KAAKJ,KAAKU,WAAWT,OAAOS,SAA7B;QAC5B;MACF;AAEDN,UAAIQ,QAAQ,CAAA;AAEZ,UAAIC,YAAY,GACZC,cAAc,GACdC,aAAa,GACbC,eAAe;AAEnB,aAAOH,YAAYb,KAAKY,MAAMK,UAAUH,cAAcb,OAAOW,MAAMK,QAAQ;AACzE,YAAIC,cAAclB,KAAKY,MAAMC,SAAX,KAAyB;UAACM,UAAUC;QAAX,GACvCC,gBAAgBpB,OAAOW,MAAME,WAAb,KAA6B;UAACK,UAAUC;QAAX;AAEjD,YAAIE,WAAWJ,aAAaG,aAAd,GAA8B;AAE1CjB,cAAIQ,MAAMW,KAAKC,UAAUN,aAAaH,UAAd,CAAxB;AACAF;AACAG,0BAAgBE,YAAYrB,WAAWqB,YAAYtB;QACpD,WAAU0B,WAAWD,eAAeH,WAAhB,GAA8B;AAEjDd,cAAIQ,MAAMW,KAAKC,UAAUH,eAAeL,YAAhB,CAAxB;AACAF;AACAC,wBAAcM,cAAcxB,WAAWwB,cAAczB;QACtD,OAAM;AAEL,cAAI6B,aAAa;YACfN,UAAUO,KAAKC,IAAIT,YAAYC,UAAUE,cAAcF,QAA7C;YACVvB,UAAU;YACVgC,UAAUF,KAAKC,IAAIT,YAAYU,WAAWb,YAAYM,cAAcF,WAAWH,YAArE;YACVnB,UAAU;YACVF,OAAO,CAAA;UALQ;AAOjBkC,qBAAWJ,YAAYP,YAAYC,UAAUD,YAAYvB,OAAO0B,cAAcF,UAAUE,cAAc1B,KAA5F;AACVmB;AACAD;AAEAT,cAAIQ,MAAMW,KAAKE,UAAf;QACD;MACF;AAED,aAAOrB;IACR;AAED,aAASD,UAAU2B,OAAO5B,MAAM;AAC9B,UAAI,OAAO4B,UAAU,UAAU;AAC7B,YAAK,OAAQC,KAAKD,KAAd,KAA0B,WAAYC,KAAKD,KAAlB,GAA2B;AACtD;;aAAO;;YAAAE,OAAAA,YAAWF,KAAX,EAAkB,CAAlB;;QACR;AAED,YAAI,CAAC5B,MAAM;AACT,gBAAM,IAAI+B,MAAM,kDAAV;QACP;AACD;;WAAO;;UAAAC,QAAAA,iBAAgBpC,QAAWA,QAAWI,MAAM4B,KAA5C;;MACR;AAED,aAAOA;IACR;AAED,aAASvB,gBAAgB4B,OAAO;AAC9B,aAAOA,MAAM7B,eAAe6B,MAAM7B,gBAAgB6B,MAAM3B;IACzD;AAED,aAASG,YAAYN,OAAOL,MAAMC,QAAQ;AACxC,UAAID,SAASC,QAAQ;AACnB,eAAOD;MACR,OAAM;AACLK,cAAM+B,WAAW;AACjB,eAAO;UAACpC;UAAMC;QAAP;MACR;IACF;AAED,aAASqB,WAAWS,MAAMM,OAAO;AAC/B,aAAON,KAAKZ,WAAWkB,MAAMlB,YACvBY,KAAKZ,WAAWY,KAAKnC,WAAYyC,MAAMlB;IAC9C;AAED,aAASK,UAAU/B,MAAM6C,QAAQ;AAC/B,aAAO;QACLnB,UAAU1B,KAAK0B;QAAUvB,UAAUH,KAAKG;QACxCgC,UAAUnC,KAAKmC,WAAWU;QAAQzC,UAAUJ,KAAKI;QACjDF,OAAOF,KAAKE;MAHP;IAKR;AAED,aAASkC,WAAWpC,MAAMsB,YAAYwB,WAAWC,aAAaC,YAAY;AAGxE,UAAIzC,OAAO;QAACsC,QAAQvB;QAAYpB,OAAO4C;QAAWlC,OAAO;MAA9C,GACPqC,QAAQ;QAACJ,QAAQE;QAAa7C,OAAO8C;QAAYpC,OAAO;MAAhD;AAGZsC,oBAAclD,MAAMO,MAAM0C,KAAb;AACbC,oBAAclD,MAAMiD,OAAO1C,IAAd;AAGb,aAAOA,KAAKK,QAAQL,KAAKL,MAAMsB,UAAUyB,MAAMrC,QAAQqC,MAAM/C,MAAMsB,QAAQ;AACzE,YAAIC,cAAclB,KAAKL,MAAMK,KAAKK,KAAhB,GACduC,eAAeF,MAAM/C,MAAM+C,MAAMrC,KAAlB;AAEnB,aAAKa,YAAY,CAAD,MAAQ,OAAOA,YAAY,CAAD,MAAQ,SAC1C0B,aAAa,CAAD,MAAQ,OAAOA,aAAa,CAAD,MAAQ,MAAM;AAE3DC,uBAAapD,MAAMO,MAAM0C,KAAb;QACb,WAAUxB,YAAY,CAAD,MAAQ,OAAO0B,aAAa,CAAD,MAAQ,KAAK;AAAA,cAAA;AAE5D,WAAA;UAAAnD,KAAKE,OAAM4B,KAAX;;YAAA;;YAAA;;cAAoBuB,cAAc9C,IAAD;YAAjC;UAAA;QACD,WAAU4C,aAAa,CAAD,MAAQ,OAAO1B,YAAY,CAAD,MAAQ,KAAK;AAAA,cAAA;AAE5D,WAAA;UAAAzB,KAAKE,OAAM4B,KAAX;;YAAA;;YAAA;;cAAoBuB,cAAcJ,KAAD;YAAjC;UAAA;QACD,WAAUxB,YAAY,CAAD,MAAQ,OAAO0B,aAAa,CAAD,MAAQ,KAAK;AAE5DG,kBAAQtD,MAAMO,MAAM0C,KAAb;QACR,WAAUE,aAAa,CAAD,MAAQ,OAAO1B,YAAY,CAAD,MAAQ,KAAK;AAE5D6B,kBAAQtD,MAAMiD,OAAO1C,MAAM,IAApB;QACR,WAAUkB,gBAAgB0B,cAAc;AAEvCnD,eAAKE,MAAM4B,KAAKL,WAAhB;AACAlB,eAAKK;AACLqC,gBAAMrC;QACP,OAAM;AAEL+B,mBAAS3C,MAAMqD,cAAc9C,IAAD,GAAQ8C,cAAcJ,KAAD,CAAzC;QACT;MACF;AAGDM,qBAAevD,MAAMO,IAAP;AACdgD,qBAAevD,MAAMiD,KAAP;AAEdlD,oBAAcC,IAAD;IACd;AAED,aAASoD,aAAapD,MAAMO,MAAM0C,OAAO;AACvC,UAAIO,YAAYH,cAAc9C,IAAD,GACzBkD,eAAeJ,cAAcJ,KAAD;AAEhC,UAAIS,WAAWF,SAAD,KAAeE,WAAWD,YAAD,GAAgB;AAErD;;WAAI;;UAAAE,OAAAA,iBAAgBH,WAAWC,YAA3B,KACGG,mBAAmBX,OAAOO,WAAWA,UAAUhC,SAASiC,aAAajC,MAAnD;UAA4D;AAAA,cAAA;AACnF,WAAA;UAAAxB,KAAKE,OAAM4B,KAAX;;YAAA;;YAAA;;cAAoB0B;YAApB;UAAA;AACA;QACD;;WAAU;;UAAAG,OAAAA,iBAAgBF,cAAcD,SAA9B,KACJI,mBAAmBrD,MAAMkD,cAAcA,aAAajC,SAASgC,UAAUhC,MAArD;UAA8D;AAAA,cAAA;AACrF,WAAA;UAAAxB,KAAKE,OAAM4B,KAAX;;YAAA;;YAAA;;cAAoB2B;YAApB;UAAA;AACA;QACD;MACF;;SAAU;;QAAAI,OAAAA,YAAWL,WAAWC,YAAtB;QAAqC;AAAA,YAAA;AAC9C,SAAA;QAAAzD,KAAKE,OAAM4B,KAAX;;UAAA;;UAAA;;YAAoB0B;UAApB;QAAA;AACA;MACD;AAEDb,eAAS3C,MAAMwD,WAAWC,YAAlB;IACT;AAED,aAASH,QAAQtD,MAAMO,MAAM0C,OAAOa,MAAM;AACxC,UAAIN,YAAYH,cAAc9C,IAAD,GACzBkD,eAAeM,eAAed,OAAOO,SAAR;AACjC,UAAIC,aAAaO,QAAQ;AAAA,YAAA;AACvB,SAAA;QAAAhE,KAAKE,OAAM4B,KAAX;;UAAA;;UAAA;;YAAoB2B,aAAaO;UAAjC;QAAA;MACD,OAAM;AACLrB,iBAAS3C,MAAM8D,OAAOL,eAAeD,WAAWM,OAAON,YAAYC,YAA3D;MACT;IACF;AAED,aAASd,SAAS3C,MAAMO,MAAM0C,OAAO;AACnCjD,WAAK2C,WAAW;AAChB3C,WAAKE,MAAM4B,KAAK;QACda,UAAU;QACVpC;QACAC,QAAQyC;MAHM,CAAhB;IAKD;AAED,aAASC,cAAclD,MAAMiE,QAAQhB,OAAO;AAC1C,aAAOgB,OAAOpB,SAASI,MAAMJ,UAAUoB,OAAOrD,QAAQqD,OAAO/D,MAAMsB,QAAQ;AACzE,YAAI0C,QAAOD,OAAO/D,MAAM+D,OAAOrD,OAApB;AACXZ,aAAKE,MAAM4B,KAAKoC,KAAhB;AACAD,eAAOpB;MACR;IACF;AACD,aAASU,eAAevD,MAAMiE,QAAQ;AACpC,aAAOA,OAAOrD,QAAQqD,OAAO/D,MAAMsB,QAAQ;AACzC,YAAI0C,QAAOD,OAAO/D,MAAM+D,OAAOrD,OAApB;AACXZ,aAAKE,MAAM4B,KAAKoC,KAAhB;MACD;IACF;AAED,aAASb,cAAcc,OAAO;AAC5B,UAAIxD,MAAM,CAAA,GACNyD,YAAYD,MAAMjE,MAAMiE,MAAMvD,KAAlB,EAAyB,CAAzB;AAChB,aAAOuD,MAAMvD,QAAQuD,MAAMjE,MAAMsB,QAAQ;AACvC,YAAI0C,QAAOC,MAAMjE,MAAMiE,MAAMvD,KAAlB;AAGX,YAAIwD,cAAc,OAAOF,MAAK,CAAD,MAAQ,KAAK;AACxCE,sBAAY;QACb;AAED,YAAIA,cAAcF,MAAK,CAAD,GAAK;AACzBvD,cAAImB,KAAKoC,KAAT;AACAC,gBAAMvD;QACP,OAAM;AACL;QACD;MACF;AAED,aAAOD;IACR;AACD,aAASoD,eAAeI,OAAOE,cAAc;AAC3C,UAAIC,UAAU,CAAA,GACVN,SAAS,CAAA,GACTO,aAAa,GACbC,iBAAiB,OACjBC,aAAa;AACjB,aAAOF,aAAaF,aAAa7C,UACxB2C,MAAMvD,QAAQuD,MAAMjE,MAAMsB,QAAQ;AACzC,YAAIkD,SAASP,MAAMjE,MAAMiE,MAAMvD,KAAlB,GACT+D,SAAQN,aAAaE,UAAD;AAGxB,YAAII,OAAM,CAAD,MAAQ,KAAK;AACpB;QACD;AAEDH,yBAAiBA,kBAAkBE,OAAO,CAAD,MAAQ;AAEjDV,eAAOlC,KAAK6C,MAAZ;AACAJ;AAIA,YAAIG,OAAO,CAAD,MAAQ,KAAK;AACrBD,uBAAa;AAEb,iBAAOC,OAAO,CAAD,MAAQ,KAAK;AACxBJ,oBAAQxC,KAAK4C,MAAb;AACAA,qBAASP,MAAMjE,MAAM,EAAEiE,MAAMvD,KAApB;UACV;QACF;AAED,YAAI+D,OAAMC,OAAO,CAAb,MAAoBF,OAAOE,OAAO,CAAd,GAAkB;AACxCN,kBAAQxC,KAAK4C,MAAb;AACAP,gBAAMvD;QACP,OAAM;AACL6D,uBAAa;QACd;MACF;AAED,WAAKJ,aAAaE,UAAD,KAAgB,IAAI,CAAjC,MAAwC,OACrCC,gBAAgB;AACrBC,qBAAa;MACd;AAED,UAAIA,YAAY;AACd,eAAOH;MACR;AAED,aAAOC,aAAaF,aAAa7C,QAAQ;AACvCwC,eAAOlC,KAAKuC,aAAaE,YAAD,CAAxB;MACD;AAED,aAAO;QACLP;QACAM;MAFK;IAIR;AAED,aAASZ,WAAWY,SAAS;AAC3B,aAAOA,QAAQO,OAAO,SAASC,OAAMJ,QAAQ;AAC3C,eAAOI,SAAQJ,OAAO,CAAD,MAAQ;MAC9B,GAAE,IAFI;IAGR;AACD,aAASd,mBAAmBO,OAAOY,eAAeC,OAAO;AACvD,eAASC,IAAI,GAAGA,IAAID,OAAOC,KAAK;AAC9B,YAAIC,gBAAgBH,cAAcA,cAAcvD,SAASwD,QAAQC,CAAhC,EAAmCL,OAAO,CAAvD;AACpB,YAAIT,MAAMjE,MAAMiE,MAAMvD,QAAQqE,CAA1B,MAAiC,MAAMC,eAAe;AACxD,iBAAO;QACR;MACF;AAEDf,YAAMvD,SAASoE;AACf,aAAO;IACR;AAED,aAAS/E,oBAAoBC,OAAO;AAClC,UAAIC,WAAW;AACf,UAAIC,WAAW;AAEfF,YAAMiF,QAAQ,SAASjB,OAAM;AAC3B,YAAI,OAAOA,UAAS,UAAU;AAC5B,cAAIkB,UAAUnF,oBAAoBiE,MAAK3D,IAAN;AACjC,cAAI8E,aAAapF,oBAAoBiE,MAAK1D,MAAN;AAEpC,cAAIL,aAAaE,QAAW;AAC1B,gBAAI+E,QAAQjF,aAAakF,WAAWlF,UAAU;AAC5CA,0BAAYiF,QAAQjF;YACrB,OAAM;AACLA,yBAAWE;YACZ;UACF;AAED,cAAID,aAAaC,QAAW;AAC1B,gBAAI+E,QAAQhF,aAAaiF,WAAWjF,UAAU;AAC5CA,0BAAYgF,QAAQhF;YACrB,OAAM;AACLA,yBAAWC;YACZ;UACF;QACF,OAAM;AACL,cAAID,aAAaC,WAAc6D,MAAK,CAAD,MAAQ,OAAOA,MAAK,CAAD,MAAQ,MAAM;AAClE9D;UACD;AACD,cAAID,aAAaE,WAAc6D,MAAK,CAAD,MAAQ,OAAOA,MAAK,CAAD,MAAQ,MAAM;AAClE/D;UACD;QACF;MACF,CA5BD;AA8BA,aAAO;QAACA;QAAUC;MAAX;IACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvXM,aAASkF,aAAaC,iBAAiB;AAC5C,UAAIC,MAAMC,QAAQF,eAAd,GAAgC;AAClC,eAAOA,gBAAgBG,IAAIJ,YAApB,EAAkCK,QAAlC;MACR;AAED;;QAAA,cAAA;UAAA,CAAA;;UACKJ;QADL,GAAA,CAAA,GAAA;UAEEK,aAAaL,gBAAgBM;UAC7BC,WAAWP,gBAAgBQ;UAC3BF,aAAaN,gBAAgBK;UAC7BG,WAAWR,gBAAgBO;UAC3BE,OAAOT,gBAAgBS,MAAMN,IAAI,SAAAO,MAAQ;AACvC,mBAAO;cACLC,UAAUD,KAAKE;cACfC,UAAUH,KAAKI;cACfF,UAAUF,KAAKC;cACfG,UAAUJ,KAAKG;cACfE,gBAAgBL,KAAKK;cACrBC,OAAON,KAAKM,MAAMb,IAAI,SAAAc,GAAK;AACzB,oBAAIA,EAAEC,WAAW,GAAb,GAAmB;AAAE;;oBAAA,IAAA;;sBAAWD,EAAEE,MAAM,CAAR;oBAAX;;gBAA0B;AACnD,oBAAIF,EAAEC,WAAW,GAAb,GAAmB;AAAE;;oBAAA,IAAA;;sBAAWD,EAAEE,MAAM,CAAR;oBAAX;;gBAA0B;AACnD,uBAAOF;cACR,CAJM;YANF;UAYR,CAbM;QANT,CAAA;;IAqBD;;;;;;;;;;;;ACzBM,aAASG,oBAAoBC,SAAS;AAC3C,UAAIC,MAAM,CAAA,GACNC,QACAC;AACJ,eAASC,IAAI,GAAGA,IAAIJ,QAAQK,QAAQD,KAAK;AACvCF,iBAASF,QAAQI,CAAD;AAChB,YAAIF,OAAOI,OAAO;AAChBH,sBAAY;QACb,WAAUD,OAAOK,SAAS;AACzBJ,sBAAY;QACb,OAAM;AACLA,sBAAY;QACb;AAEDF,YAAIO,KAAK,CAACL,WAAWD,OAAOO,KAAnB,CAAT;MACD;AACD,aAAOR;IACR;;;;;;;;;;;;AClBM,aAASS,oBAAoBC,SAAS;AAC3C,UAAIC,MAAM,CAAA;AACV,eAASC,IAAI,GAAGA,IAAIF,QAAQG,QAAQD,KAAK;AACvC,YAAIE,SAASJ,QAAQE,CAAD;AACpB,YAAIE,OAAOC,OAAO;AAChBJ,cAAIK,KAAK,OAAT;QACD,WAAUF,OAAOG,SAAS;AACzBN,cAAIK,KAAK,OAAT;QACD;AAEDL,YAAIK,KAAKE,WAAWJ,OAAOK,KAAR,CAAnB;AAEA,YAAIL,OAAOC,OAAO;AAChBJ,cAAIK,KAAK,QAAT;QACD,WAAUF,OAAOG,SAAS;AACzBN,cAAIK,KAAK,QAAT;QACD;MACF;AACD,aAAOL,IAAIS,KAAK,EAAT;IACR;AAED,aAASF,WAAWG,GAAG;AACrB,UAAIC,IAAID;AACRC,UAAIA,EAAEC,QAAQ,MAAM,OAAhB;AACJD,UAAIA,EAAEC,QAAQ,MAAM,MAAhB;AACJD,UAAIA,EAAEC,QAAQ,MAAM,MAAhB;AACJD,UAAIA,EAAEC,QAAQ,MAAM,QAAhB;AAEJ,aAAOD;IACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbD,QAAA,QAAA,uBAAA,cAAA;AACA,QAAA,aAAA;AACA,QAAA,QAAA;AACA,QAAA,QAAA;AACA,QAAA,YAAA;AAEA,QAAA,OAAA;AACA,QAAA,QAAA;AAEA,QAAA,SAAA;AAEA,QAAA,SAAA;AACA,QAAA,SAAA;AACA,QAAA,SAAA;AACA,QAAA,WAAA;AACA,QAAA,UAAA;AAEA,QAAA,OAAA;AACA,QAAA,OAAA;;;;;;;;AClCA;AAAA;AAAA;AACA,QAAI,kBAAmB,WAAQ,QAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,UAAI,OAAO,OAAW,MAAK;AAC3B,UAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,UAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,eAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,iBAAO,EAAE,CAAC;AAAA,QAAG,EAAE;AAAA,MAC9D;AACA,aAAO,eAAe,GAAG,IAAI,IAAI;AAAA,IACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,UAAI,OAAO,OAAW,MAAK;AAC3B,QAAE,EAAE,IAAI,EAAE,CAAC;AAAA,IACf;AACA,QAAI,qBAAsB,WAAQ,QAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,aAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,EAAE,CAAC;AAAA,IACtE,IAAK,SAAS,GAAG,GAAG;AAChB,QAAE,SAAS,IAAI;AAAA,IACnB;AACA,QAAI,eAAgB,WAAQ,QAAK,gBAAiB,SAAU,KAAK;AAC7D,UAAI,OAAO,IAAI,WAAY,QAAO;AAClC,UAAI,SAAS,CAAC;AACd,UAAI,OAAO;AAAM,iBAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG,iBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvI,yBAAmB,QAAQ,GAAG;AAC9B,aAAO;AAAA,IACX;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,yBAAyB,QAAQ,aAAa,QAAQ,WAAW;AACzE,QAAM,OAAO,aAAa,aAAe;AACzC,QAAM,SAAS;AACf,QAAI;AACJ,KAAC,SAAUE,WAAU;AACjB,MAAAA,UAASA,UAAS,SAAS,IAAI,CAAC,IAAI;AACpC,MAAAA,UAASA,UAAS,OAAO,IAAI,CAAC,IAAI;AAClC,MAAAA,UAASA,UAAS,SAAS,IAAI,CAAC,IAAI;AACpC,MAAAA,UAASA,UAAS,SAAS,IAAI,CAAC,IAAI;AAAA,IACxC,GAAG,aAAa,QAAQ,WAAW,WAAW,CAAC,EAAE;AAEjD,QAAI;AACJ,KAAC,SAAUC,aAAY;AACnB,MAAAA,YAAW,OAAO,IAAI;AACtB,MAAAA,YAAW,OAAO,IAAI;AACtB,MAAAA,YAAW,kBAAkB,IAAI;AACjC,MAAAA,YAAW,OAAO,IAAI;AACtB,MAAAA,YAAW,eAAe,IAAI;AAC9B,MAAAA,YAAW,WAAW,IAAI;AAC1B,MAAAA,YAAW,KAAK,IAAI;AACpB,MAAAA,YAAW,MAAM,IAAI;AAAA,IACzB,GAAG,eAAe,QAAQ,aAAa,aAAa,CAAC,EAAE;AAOvD,QAAM,iBAAiB,CAAC,UAAU;AAC9B,UAAI,UAAU;AACV,eAAO,CAAC;AACZ,YAAM,QAAQ,MAAM,QAAQ,OAAO,EAAE,EAAE,MAAM,IAAI;AACjD,aAAO;AAAA,IACX;AASA,QAAM,cAAc,CAAC,UAAU,UAAU,gBAAgB,WAAW,UAAU;AAC1E,YAAM,YAAY,OAAO,aAAa,EAAE,UAAU,QAAQ;AAC1D,YAAM,eAAe;AAAA,QACjB,MAAM,CAAC;AAAA,QACP,OAAO,CAAC;AAAA,MACZ;AACA,gBAAU,QAAQ,CAAC,EAAE,OAAO,SAAS,MAAM,MAAM;AAC7C,cAAM,kBAAkB,CAAC;AACzB,YAAI,OAAO;AACP,0BAAgB,OAAO,SAAS;AAChC,0BAAgB,QAAQ;AACxB,uBAAa,MAAM,KAAK,eAAe;AAAA,QAC3C;AACA,YAAI,SAAS;AACT,0BAAgB,OAAO,SAAS;AAChC,0BAAgB,QAAQ;AACxB,uBAAa,KAAK,KAAK,eAAe;AAAA,QAC1C;AACA,YAAI,CAAC,WAAW,CAAC,OAAO;AACpB,0BAAgB,OAAO,SAAS;AAChC,0BAAgB,QAAQ;AACxB,uBAAa,MAAM,KAAK,eAAe;AACvC,uBAAa,KAAK,KAAK,eAAe;AAAA,QAC1C;AACA,eAAO;AAAA,MACX,CAAC;AACD,aAAO;AAAA,IACX;AAgBA,QAAM,yBAAyB,CAAC,WAAW,WAAW,kBAAkB,OAAO,oBAAoB,WAAW,OAAO,cAAc,GAAG,YAAY,CAAC,MAAM;AACrJ,UAAI,YAAY,CAAC;AAEjB,UAAI,OAAO,cAAc,YAAY,OAAO,cAAc,UAAU;AAChE,oBAAY,KAAK,UAAU,UAAU,UAAU,GAAG,UAAU,UAAU,GAAG;AAAA,UACrE,gBAAgB;AAAA,UAChB,kBAAkB;AAAA,UAClB,YAAY;AAAA,QAChB,CAAC;AAAA,MACL,OACK;AACD,oBAAY,KAAK,SAAS,WAAW,SAAS;AAAA,MAClD;AACA,UAAI,kBAAkB;AACtB,UAAI,iBAAiB;AACrB,UAAI,kBAAkB,CAAC;AACvB,UAAI,UAAU;AACd,YAAM,YAAY,CAAC;AACnB,YAAM,oBAAoB,CAAC;AAC3B,YAAM,qBAAqB,CAAC,OAAO,WAAW,OAAO,SAAS,0BAA0B;AACpF,cAAM,QAAQ,eAAe,KAAK;AAClC,eAAO,MACF,IAAI,CAACC,OAAM,cAAc;AAC1B,gBAAM,OAAO,CAAC;AACd,gBAAM,QAAQ,CAAC;AACf,cAAI,kBAAkB,SAAS,GAAG,SAAS,IAAI,SAAS,EAAE,KACrD,yBAAyB,cAAc,GAAI;AAC5C,mBAAO;AAAA,UACX;AACA,cAAI,SAAS,SAAS;AAClB,gBAAI,gBAAgB;AACpB,gBAAI,SAAS;AACT,gCAAkB;AAClB,mBAAK,aAAa;AAClB,mBAAK,OAAO,SAAS;AACrB,mBAAK,QAAQA,SAAQ;AAKrB,oBAAM,WAAW,UAAU,YAAY,CAAC;AACxC,kBAAI,YAAY,SAAS,OAAO;AAC5B,sBAAM,gBAAgB,eAAe,SAAS,KAAK,EAAE,SAAS;AAC9D,oBAAI,eAAe;AACf,wBAAM,mBAAmB,mBAAmB,eAAe,WAAW,MAAM,OAAO,IAAI;AACvF,wBAAM,EAAE,OAAO,YAAY,YAAY,KAAM,IAAI,iBAAiB,CAAC,EAAE;AAIrE,oCAAkB,KAAK,GAAG,YAAY,CAAC,IAAI,SAAS,EAAE;AACtD,wBAAM,aAAa;AACnB,sBAAI,KAAK,UAAU,YAAY;AAE3B,oCAAgB;AAChB,0BAAM,OAAO;AACb,yBAAK,OAAO;AACZ,0BAAM,QAAQ;AAAA,kBAClB,OACK;AACD,0BAAM,OAAO;AAGb,wBAAI,iBAAiB;AACjB,4BAAM,QAAQ;AAAA,oBAClB,OACK;AACD,4BAAM,eAAe,YAAYA,OAAM,YAAY,iBAAiB;AACpE,4BAAM,QAAQ,aAAa;AAC3B,2BAAK,QAAQ,aAAa;AAAA,oBAC9B;AAAA,kBACJ;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ,OACK;AACD,iCAAmB;AACnB,oBAAM,aAAa;AACnB,oBAAM,OAAO,SAAS;AACtB,oBAAM,QAAQA;AAAA,YAClB;AACA,gBAAI,iBAAiB,CAAC,uBAAuB;AACzC,kBAAI,CAAC,UAAU,SAAS,OAAO,GAAG;AAC9B,0BAAU,KAAK,OAAO;AAAA,cAC1B;AAAA,YACJ;AAAA,UACJ,OACK;AACD,8BAAkB;AAClB,+BAAmB;AACnB,iBAAK,aAAa;AAClB,iBAAK,OAAO,SAAS;AACrB,iBAAK,QAAQA;AACb,kBAAM,aAAa;AACnB,kBAAM,OAAO,SAAS;AACtB,kBAAM,QAAQA;AAAA,UAClB;AACA,eAAK,cAAc,QAAQ,cAAc,SAAS,SAAS,UAAU,SAAS,KAAK,KAAK,UAAU,EAAE,OAAO,cAAc,QAAQ,cAAc,SAAS,SAAS,UAAU,SAAS,KAAK,MAAM,UAAU,EAAE,MAAM,CAAC,UAAU,SAAS,OAAO,GAAG;AAC3O,sBAAU,KAAK,OAAO;AAAA,UAC1B;AACA,cAAI,CAAC,uBAAuB;AACxB,uBAAW;AAAA,UACf;AACA,iBAAO,EAAE,OAAO,KAAK;AAAA,QACzB,CAAC,EACI,OAAO,OAAO;AAAA,MACvB;AACA,gBAAU,QAAQ,CAAC,EAAE,OAAO,SAAS,MAAM,GAAG,UAAU;AACpD,0BAAkB;AAAA,UACd,GAAG;AAAA,UACH,GAAG,mBAAmB,OAAO,OAAO,OAAO,OAAO;AAAA,QACtD;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,QACH;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,yBAAyB;AAAA;AAAA;;;AC1MjC,SAAS,YAAY,KAAK;AACxB,MAAI,IAAI,OAAO;AACb,WAAO,IAAI;AAAA,EACb;AAKA,WAAS,IAAI,GAAG,IAAI,SAAS,YAAY,QAAQ,KAAK;AACpD,QAAI,SAAS,YAAY,CAAC,EAAE,cAAc,KAAK;AAC7C,aAAO,SAAS,YAAY,CAAC;AAAA,IAC/B;AAAA,EACF;AAIA,SAAO;AACT;AAEA,SAAS,mBAAmB,SAAS;AACnC,MAAI,MAAM,SAAS,cAAc,OAAO;AACxC,MAAI,aAAa,gBAAgB,QAAQ,GAAG;AAE5C,MAAI,QAAQ,UAAU,QAAW;AAC/B,QAAI,aAAa,SAAS,QAAQ,KAAK;AAAA,EACzC;AAEA,MAAI,YAAY,SAAS,eAAe,EAAE,CAAC;AAC3C,MAAI,aAAa,UAAU,EAAE;AAC7B,SAAO;AACT;AAvDA,IAAI,eAyDA;AAzDJ;AAAA;AAAA,IAAI,gBAAgB;AAyDpB,IAAI,aAA0B,WAAY;AAExC,eAASC,YAAW,SAAS;AAC3B,YAAI,QAAQ;AAEZ,aAAK,aAAa,SAAU,KAAK;AAC/B,cAAI;AAEJ,cAAI,MAAM,KAAK,WAAW,GAAG;AAC3B,gBAAI,MAAM,gBAAgB;AACxB,uBAAS,MAAM,eAAe;AAAA,YAChC,WAAW,MAAM,SAAS;AACxB,uBAAS,MAAM,UAAU;AAAA,YAC3B,OAAO;AACL,uBAAS,MAAM;AAAA,YACjB;AAAA,UACF,OAAO;AACL,qBAAS,MAAM,KAAK,MAAM,KAAK,SAAS,CAAC,EAAE;AAAA,UAC7C;AAEA,gBAAM,UAAU,aAAa,KAAK,MAAM;AAExC,gBAAM,KAAK,KAAK,GAAG;AAAA,QACrB;AAEA,aAAK,WAAW,QAAQ,WAAW,SAAY,CAAC,gBAAgB,QAAQ;AACxE,aAAK,OAAO,CAAC;AACb,aAAK,MAAM;AACX,aAAK,QAAQ,QAAQ;AAErB,aAAK,MAAM,QAAQ;AACnB,aAAK,YAAY,QAAQ;AACzB,aAAK,UAAU,QAAQ;AACvB,aAAK,iBAAiB,QAAQ;AAC9B,aAAK,SAAS;AAAA,MAChB;AAEA,UAAI,SAASA,YAAW;AAExB,aAAO,UAAU,SAAS,QAAQ,OAAO;AACvC,cAAM,QAAQ,KAAK,UAAU;AAAA,MAC/B;AAEA,aAAO,SAAS,SAAS,OAAO,MAAM;AAIpC,YAAI,KAAK,OAAO,KAAK,WAAW,OAAQ,OAAO,GAAG;AAChD,eAAK,WAAW,mBAAmB,IAAI,CAAC;AAAA,QAC1C;AAEA,YAAI,MAAM,KAAK,KAAK,KAAK,KAAK,SAAS,CAAC;AAExC;AACE,cAAIC,gBAAe,KAAK,WAAW,CAAC,MAAM,MAAM,KAAK,WAAW,CAAC,MAAM;AAEvE,cAAIA,iBAAgB,KAAK,sCAAsC;AAI7D,oBAAQ,MAAM,sDAAsD,OAAO,wLAAwL;AAAA,UACrQ;AAEA,eAAK,uCAAuC,KAAK,wCAAwC,CAACA;AAAA,QAC5F;AAEA,YAAI,KAAK,UAAU;AACjB,cAAI,QAAQ,YAAY,GAAG;AAE3B,cAAI;AAGF,kBAAM,WAAW,MAAM,MAAM,SAAS,MAAM;AAAA,UAC9C,SAAS,GAAG;AACV,gBAAI,CAAC,4IAA4I,KAAK,IAAI,GAAG;AAC3J,sBAAQ,MAAM,wDAAyD,OAAO,KAAM,CAAC;AAAA,YACvF;AAAA,UACF;AAAA,QACF,OAAO;AACL,cAAI,YAAY,SAAS,eAAe,IAAI,CAAC;AAAA,QAC/C;AAEA,aAAK;AAAA,MACP;AAEA,aAAO,QAAQ,SAAS,QAAQ;AAC9B,aAAK,KAAK,QAAQ,SAAU,KAAK;AAC/B,cAAI;AAEJ,kBAAQ,kBAAkB,IAAI,eAAe,OAAO,SAAS,gBAAgB,YAAY,GAAG;AAAA,QAC9F,CAAC;AACD,aAAK,OAAO,CAAC;AACb,aAAK,MAAM;AAEX;AACE,eAAK,uCAAuC;AAAA,QAC9C;AAAA,MACF;AAEA,aAAOD;AAAA,IACT,EAAE;AAAA;AAAA;;;AC7JF,IAAW,IACA,KACA,QAEA,SACA,SACA,aAIA,QAMA,WAIA;AApBX;AAAA;AAAO,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,SAAS;AAEb,IAAI,UAAU;AACd,IAAI,UAAU;AACd,IAAI,cAAc;AAIlB,IAAI,SAAS;AAMb,IAAI,YAAY;AAIhB,IAAI,QAAQ;AAAA;AAAA;;;ACGZ,SAAS,KAAM,OAAOE,SAAQ;AACpC,SAAO,OAAO,OAAO,CAAC,IAAI,QAAYA,WAAU,IAAK,OAAO,OAAO,CAAC,MAAM,IAAK,OAAO,OAAO,CAAC,MAAM,IAAK,OAAO,OAAO,CAAC,MAAM,IAAK,OAAO,OAAO,CAAC,IAAI;AACvJ;AAMO,SAAS,KAAM,OAAO;AAC5B,SAAO,MAAM,KAAK;AACnB;AAOO,SAAS,MAAO,OAAO,SAAS;AACtC,UAAQ,QAAQ,QAAQ,KAAK,KAAK,KAAK,MAAM,CAAC,IAAI;AACnD;AAQO,SAAS,QAAS,OAAO,SAAS,aAAa;AACrD,SAAO,MAAM,QAAQ,SAAS,WAAW;AAC1C;AAOO,SAAS,QAAS,OAAO,QAAQ;AACvC,SAAO,MAAM,QAAQ,MAAM;AAC5B;AAOO,SAAS,OAAQ,OAAO,OAAO;AACrC,SAAO,MAAM,WAAW,KAAK,IAAI;AAClC;AAQO,SAAS,OAAQ,OAAO,OAAO,KAAK;AAC1C,SAAO,MAAM,MAAM,OAAO,GAAG;AAC9B;AAMO,SAAS,OAAQ,OAAO;AAC9B,SAAO,MAAM;AACd;AAMO,SAAS,OAAQ,OAAO;AAC9B,SAAO,MAAM;AACd;AAOO,SAAS,OAAQ,OAAO,OAAO;AACrC,SAAO,MAAM,KAAK,KAAK,GAAG;AAC3B;AAOO,SAAS,QAAS,OAAO,UAAU;AACzC,SAAO,MAAM,IAAI,QAAQ,EAAE,KAAK,EAAE;AACnC;AAlHA,IAIW,KAMA,MAMA;AAhBX;AAAA;AAIO,IAAI,MAAM,KAAK;AAMf,IAAI,OAAO,OAAO;AAMlB,IAAI,SAAS,OAAO;AAAA;AAAA;;;ACEpB,SAAS,KAAM,OAAO,MAAM,QAAQ,MAAM,OAAO,UAAUC,SAAQ;AACzE,SAAO,EAAC,OAAc,MAAY,QAAgB,MAAY,OAAc,UAAoB,MAAY,QAAgB,QAAQA,SAAQ,QAAQ,GAAE;AACvJ;AAOO,SAAS,KAAM,MAAM,OAAO;AAClC,SAAO,OAAO,KAAK,IAAI,MAAM,MAAM,IAAI,MAAM,MAAM,CAAC,GAAG,MAAM,EAAC,QAAQ,CAAC,KAAK,OAAM,GAAG,KAAK;AAC3F;AAKO,SAAS,OAAQ;AACvB,SAAO;AACR;AAKO,SAAS,OAAQ;AACvB,cAAY,WAAW,IAAI,OAAO,YAAY,EAAE,QAAQ,IAAI;AAE5D,MAAI,UAAU,cAAc;AAC3B,aAAS,GAAG;AAEb,SAAO;AACR;AAKO,SAAS,OAAQ;AACvB,cAAY,WAAW,SAAS,OAAO,YAAY,UAAU,IAAI;AAEjE,MAAI,UAAU,cAAc;AAC3B,aAAS,GAAG;AAEb,SAAO;AACR;AAKO,SAAS,OAAQ;AACvB,SAAO,OAAO,YAAY,QAAQ;AACnC;AAKO,SAAS,QAAS;AACxB,SAAO;AACR;AAOO,SAAS,MAAO,OAAO,KAAK;AAClC,SAAO,OAAO,YAAY,OAAO,GAAG;AACrC;AAMO,SAAS,MAAO,MAAM;AAC5B,UAAQ,MAAM;AAAA,IAEb,KAAK;AAAA,IAAG,KAAK;AAAA,IAAG,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AACtC,aAAO;AAAA,IAER,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AAAA,IAE3D,KAAK;AAAA,IAAI,KAAK;AAAA,IAAK,KAAK;AACvB,aAAO;AAAA,IAER,KAAK;AACJ,aAAO;AAAA,IAER,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AAAA,IAAI,KAAK;AAC/B,aAAO;AAAA,IAER,KAAK;AAAA,IAAI,KAAK;AACb,aAAO;AAAA,EACT;AAEA,SAAO;AACR;AAMO,SAAS,MAAO,OAAO;AAC7B,SAAO,OAAO,SAAS,GAAG,SAAS,OAAO,aAAa,KAAK,GAAG,WAAW,GAAG,CAAC;AAC/E;AAMO,SAAS,QAAS,OAAO;AAC/B,SAAO,aAAa,IAAI;AACzB;AAMO,SAAS,QAAS,MAAM;AAC9B,SAAO,KAAK,MAAM,WAAW,GAAG,UAAU,SAAS,KAAK,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,IAAI,CAAC,CAAC;AACnG;AAcO,SAAS,WAAY,MAAM;AACjC,SAAO,YAAY,KAAK;AACvB,QAAI,YAAY;AACf,WAAK;AAAA;AAEL;AAEF,SAAO,MAAM,IAAI,IAAI,KAAK,MAAM,SAAS,IAAI,IAAI,KAAK;AACvD;AAwBO,SAAS,SAAU,OAAO,OAAO;AACvC,SAAO,EAAE,SAAS,KAAK;AAEtB,QAAI,YAAY,MAAM,YAAY,OAAQ,YAAY,MAAM,YAAY,MAAQ,YAAY,MAAM,YAAY;AAC7G;AAEF,SAAO,MAAM,OAAO,MAAM,KAAK,QAAQ,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,GAAG;AAC1E;AAMO,SAAS,UAAW,MAAM;AAChC,SAAO,KAAK;AACX,YAAQ,WAAW;AAAA,MAElB,KAAK;AACJ,eAAO;AAAA,MAER,KAAK;AAAA,MAAI,KAAK;AACb,YAAI,SAAS,MAAM,SAAS;AAC3B,oBAAU,SAAS;AACpB;AAAA,MAED,KAAK;AACJ,YAAI,SAAS;AACZ,oBAAU,IAAI;AACf;AAAA,MAED,KAAK;AACJ,aAAK;AACL;AAAA,IACF;AAED,SAAO;AACR;AAOO,SAAS,UAAW,MAAM,OAAO;AACvC,SAAO,KAAK;AAEX,QAAI,OAAO,cAAc,KAAK;AAC7B;AAAA,aAEQ,OAAO,cAAc,KAAK,MAAM,KAAK,MAAM;AACnD;AAEF,SAAO,OAAO,MAAM,OAAO,WAAW,CAAC,IAAI,MAAM,KAAK,SAAS,KAAK,OAAO,KAAK,CAAC;AAClF;AAMO,SAAS,WAAY,OAAO;AAClC,SAAO,CAAC,MAAM,KAAK,CAAC;AACnB,SAAK;AAEN,SAAO,MAAM,OAAO,QAAQ;AAC7B;AArPA,IAEW,MACA,QACA,QACA,UACA,WACA;AAPX;AAAA;AAAA;AAEO,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,WAAW;AACf,IAAI,YAAY;AAChB,IAAI,aAAa;AAAA;AAAA;;;ACCjB,SAAS,QAAS,OAAO;AAC/B,SAAO,QAAQ,MAAM,IAAI,MAAM,MAAM,MAAM,CAAC,EAAE,GAAG,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;AACtF;AAcO,SAAS,MAAO,OAAO,MAAM,QAAQ,MAAM,OAAO,UAAU,QAAQ,QAAQ,cAAc;AAChG,MAAI,QAAQ;AACZ,MAAI,SAAS;AACb,MAAIC,UAAS;AACb,MAAI,SAAS;AACb,MAAI,WAAW;AACf,MAAI,WAAW;AACf,MAAI,WAAW;AACf,MAAI,WAAW;AACf,MAAI,YAAY;AAChB,MAAIC,aAAY;AAChB,MAAI,OAAO;AACX,MAAI,QAAQ;AACZ,MAAI,WAAW;AACf,MAAI,YAAY;AAChB,MAAIC,cAAa;AAEjB,SAAO;AACN,YAAQ,WAAWD,YAAWA,aAAY,KAAK,GAAG;AAAA,MAEjD,KAAK;AACJ,YAAI,YAAY,OAAO,OAAOC,aAAYF,UAAS,CAAC,KAAK,IAAI;AAC5D,cAAI,QAAQE,eAAc,QAAQ,QAAQD,UAAS,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK;AAC5E,wBAAY;AACb;AAAA,QACD;AAAA,MAED,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AACtB,QAAAC,eAAc,QAAQD,UAAS;AAC/B;AAAA,MAED,KAAK;AAAA,MAAG,KAAK;AAAA,MAAI,KAAK;AAAA,MAAI,KAAK;AAC9B,QAAAC,eAAc,WAAW,QAAQ;AACjC;AAAA,MAED,KAAK;AACJ,QAAAA,eAAc,SAAS,MAAM,IAAI,GAAG,CAAC;AACrC;AAAA,MAED,KAAK;AACJ,gBAAQ,KAAK,GAAG;AAAA,UACf,KAAK;AAAA,UAAI,KAAK;AACb,mBAAO,QAAQ,UAAU,KAAK,GAAG,MAAM,CAAC,GAAG,MAAM,MAAM,GAAG,YAAY;AACtE;AAAA,UACD;AACC,YAAAA,eAAc;AAAA,QAChB;AACA;AAAA,MAED,KAAK,MAAM;AACV,eAAO,OAAO,IAAI,OAAOA,WAAU,IAAI;AAAA,MAExC,KAAK,MAAM;AAAA,MAAU,KAAK;AAAA,MAAI,KAAK;AAClC,gBAAQD,YAAW;AAAA,UAElB,KAAK;AAAA,UAAG,KAAK;AAAK,uBAAW;AAAA,UAE7B,KAAK,KAAK;AAAQ,gBAAI,aAAa,GAAI,CAAAC,cAAa,QAAQA,aAAY,OAAO,EAAE;AAChF,gBAAI,WAAW,KAAM,OAAOA,WAAU,IAAIF;AACzC,qBAAO,WAAW,KAAK,YAAYE,cAAa,KAAK,MAAM,QAAQF,UAAS,CAAC,IAAI,YAAY,QAAQE,aAAY,KAAK,EAAE,IAAI,KAAK,MAAM,QAAQF,UAAS,CAAC,GAAG,YAAY;AACzK;AAAA,UAED,KAAK;AAAI,YAAAE,eAAc;AAAA,UAEvB;AACC,mBAAO,YAAY,QAAQA,aAAY,MAAM,QAAQ,OAAO,QAAQ,OAAO,QAAQ,MAAM,QAAQ,CAAC,GAAG,WAAW,CAAC,GAAGF,OAAM,GAAG,QAAQ;AAErI,gBAAIC,eAAc;AACjB,kBAAI,WAAW;AACd,sBAAMC,aAAY,MAAM,WAAW,WAAW,OAAO,UAAUF,SAAQ,QAAQ,QAAQ;AAAA;AAEvF,wBAAQ,WAAW,MAAM,OAAOE,aAAY,CAAC,MAAM,MAAM,MAAM,QAAQ;AAAA,kBAEtE,KAAK;AAAA,kBAAK,KAAK;AAAA,kBAAK,KAAK;AAAA,kBAAK,KAAK;AAClC,0BAAM,OAAO,WAAW,WAAW,QAAQ,OAAO,QAAQ,OAAO,WAAW,WAAW,GAAG,GAAG,OAAO,QAAQ,MAAM,OAAO,QAAQ,CAAC,GAAGF,OAAM,GAAG,QAAQ,GAAG,OAAO,UAAUA,SAAQ,QAAQ,OAAO,QAAQ,QAAQ;AACjN;AAAA,kBACD;AACC,0BAAME,aAAY,WAAW,WAAW,WAAW,CAAC,EAAE,GAAG,UAAU,GAAG,QAAQ,QAAQ;AAAA,gBACxF;AAAA,QACJ;AAEA,gBAAQ,SAAS,WAAW,GAAG,WAAW,YAAY,GAAG,OAAOA,cAAa,IAAIF,UAAS;AAC1F;AAAA,MAED,KAAK;AACJ,QAAAA,UAAS,IAAI,OAAOE,WAAU,GAAG,WAAW;AAAA,MAC7C;AACC,YAAI,WAAW;AACd,cAAID,cAAa;AAChB,cAAE;AAAA,mBACMA,cAAa,OAAO,cAAc,KAAK,KAAK,KAAK;AACzD;AAAA;AAEF,gBAAQC,eAAc,KAAKD,UAAS,GAAGA,aAAY,UAAU;AAAA,UAE5D,KAAK;AACJ,wBAAY,SAAS,IAAI,KAAKC,eAAc,MAAM;AAClD;AAAA,UAED,KAAK;AACJ,mBAAO,OAAO,KAAK,OAAOA,WAAU,IAAI,KAAK,WAAW,YAAY;AACpE;AAAA,UAED,KAAK;AAEJ,gBAAI,KAAK,MAAM;AACd,cAAAA,eAAc,QAAQ,KAAK,CAAC;AAE7B,qBAAS,KAAK,GAAG,SAASF,UAAS,OAAO,OAAOE,eAAc,WAAW,MAAM,CAAC,CAAC,GAAGD;AACrF;AAAA,UAED,KAAK;AACJ,gBAAI,aAAa,MAAM,OAAOC,WAAU,KAAK;AAC5C,yBAAW;AAAA,QACd;AAAA,IACF;AAED,SAAO;AACR;AAgBO,SAAS,QAAS,OAAO,MAAM,QAAQ,OAAO,QAAQ,OAAO,QAAQ,MAAM,OAAO,UAAUF,SAAQ;AAC1G,MAAI,OAAO,SAAS;AACpB,MAAI,OAAO,WAAW,IAAI,QAAQ,CAAC,EAAE;AACrC,MAAI,OAAO,OAAO,IAAI;AAEtB,WAAS,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,OAAO,EAAE;AAC1C,aAAS,IAAI,GAAG,IAAI,OAAO,OAAO,OAAO,GAAG,OAAO,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,IAAI,MAAM,EAAE;AAC9F,UAAI,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,IAAI,QAAQ,GAAG,QAAQ,KAAK,CAAC,CAAC,CAAC;AACnE,cAAM,GAAG,IAAI;AAEhB,SAAO,KAAK,OAAO,MAAM,QAAQ,WAAW,IAAI,UAAU,MAAM,OAAO,UAAUA,OAAM;AACxF;AAQO,SAAS,QAAS,OAAO,MAAM,QAAQ;AAC7C,SAAO,KAAK,OAAO,MAAM,QAAQ,SAAS,KAAK,KAAK,CAAC,GAAG,OAAO,OAAO,GAAG,EAAE,GAAG,CAAC;AAChF;AASO,SAAS,YAAa,OAAO,MAAM,QAAQA,SAAQ;AACzD,SAAO,KAAK,OAAO,MAAM,QAAQ,aAAa,OAAO,OAAO,GAAGA,OAAM,GAAG,OAAO,OAAOA,UAAS,GAAG,EAAE,GAAGA,OAAM;AAC9G;AA9LA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACOO,SAAS,UAAW,UAAU,UAAU;AAC9C,MAAI,SAAS;AACb,MAAIG,UAAS,OAAO,QAAQ;AAE5B,WAAS,IAAI,GAAG,IAAIA,SAAQ;AAC3B,cAAU,SAAS,SAAS,CAAC,GAAG,GAAG,UAAU,QAAQ,KAAK;AAE3D,SAAO;AACR;AASO,SAAS,UAAW,SAAS,OAAO,UAAU,UAAU;AAC9D,UAAQ,QAAQ,MAAM;AAAA,IACrB,KAAK;AAAO,UAAI,QAAQ,SAAS,OAAQ;AAAA,IACzC,KAAK;AAAA,IAAQ,KAAK;AAAa,aAAO,QAAQ,SAAS,QAAQ,UAAU,QAAQ;AAAA,IACjF,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAW,aAAO,QAAQ,SAAS,QAAQ,QAAQ,MAAM,UAAU,QAAQ,UAAU,QAAQ,IAAI;AAAA,IACtG,KAAK;AAAS,cAAQ,QAAQ,QAAQ,MAAM,KAAK,GAAG;AAAA,EACrD;AAEA,SAAO,OAAO,WAAW,UAAU,QAAQ,UAAU,QAAQ,CAAC,IAAI,QAAQ,SAAS,QAAQ,QAAQ,MAAM,WAAW,MAAM;AAC3H;AAnCA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACSO,SAAS,WAAY,YAAY;AACvC,MAAIC,UAAS,OAAO,UAAU;AAE9B,SAAO,SAAU,SAAS,OAAO,UAAU,UAAU;AACpD,QAAI,SAAS;AAEb,aAAS,IAAI,GAAG,IAAIA,SAAQ;AAC3B,gBAAU,WAAW,CAAC,EAAE,SAAS,OAAO,UAAU,QAAQ,KAAK;AAEhE,WAAO;AAAA,EACR;AACD;AArBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACNA;AAAA;AAAA;AAAA;;;ACAA,SAAS,QAAQ,IAAI;AACnB,MAAI,QAAQ,uBAAO,OAAO,IAAI;AAC9B,SAAO,SAAU,KAAK;AACpB,QAAI,MAAM,GAAG,MAAM,OAAW,OAAM,GAAG,IAAI,GAAG,GAAG;AACjD,WAAO,MAAM,GAAG;AAAA,EAClB;AACF;AANA;AAAA;AAAA;AAAA;;;ACgPA,SAASC,QAAO,OAAOC,SAAQ;AAC7B,UAAQ,KAAK,OAAOA,OAAM,GAAG;AAAA,IAE3B,KAAK;AACH,aAAO,SAAS,WAAW,QAAQ;AAAA,IAGrC,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IAEL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IAEL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IAEL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO,SAAS,QAAQ;AAAA,IAG1B,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO,SAAS,QAAQ,MAAM,QAAQ,KAAK,QAAQ;AAAA,IAGrD,KAAK;AAAA,IACL,KAAK;AACH,aAAO,SAAS,QAAQ,KAAK,QAAQ;AAAA,IAGvC,KAAK;AACH,aAAO,SAAS,QAAQ,KAAK,UAAU,QAAQ;AAAA,IAGjD,KAAK;AACH,aAAO,SAAS,QAAQ,QAAQ,OAAO,kBAAkB,SAAS,aAAa,KAAK,WAAW,IAAI;AAAA,IAGrG,KAAK;AACH,aAAO,SAAS,QAAQ,KAAK,eAAe,QAAQ,OAAO,eAAe,EAAE,IAAI;AAAA,IAGlF,KAAK;AACH,aAAO,SAAS,QAAQ,KAAK,mBAAmB,QAAQ,OAAO,6BAA6B,EAAE,IAAI;AAAA,IAGpG,KAAK;AACH,aAAO,SAAS,QAAQ,KAAK,QAAQ,OAAO,UAAU,UAAU,IAAI;AAAA,IAGtE,KAAK;AACH,aAAO,SAAS,QAAQ,KAAK,QAAQ,OAAO,SAAS,gBAAgB,IAAI;AAAA,IAG3E,KAAK;AACH,aAAO,SAAS,SAAS,QAAQ,OAAO,SAAS,EAAE,IAAI,SAAS,QAAQ,KAAK,QAAQ,OAAO,QAAQ,UAAU,IAAI;AAAA,IAGpH,KAAK;AACH,aAAO,SAAS,QAAQ,OAAO,sBAAsB,OAAO,SAAS,IAAI,IAAI;AAAA,IAG/E,KAAK;AACH,aAAO,QAAQ,QAAQ,QAAQ,OAAO,gBAAgB,SAAS,IAAI,GAAG,eAAe,SAAS,IAAI,GAAG,OAAO,EAAE,IAAI;AAAA,IAGpH,KAAK;AAAA,IACL,KAAK;AACH,aAAO,QAAQ,OAAO,qBAAqB,SAAS,QAAa;AAAA,IAGnE,KAAK;AACH,aAAO,QAAQ,QAAQ,OAAO,qBAAqB,SAAS,gBAAgB,KAAK,cAAc,GAAG,cAAc,SAAS,IAAI,SAAS,QAAQ;AAAA,IAGhJ,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO,QAAQ,OAAO,mBAAmB,SAAS,MAAM,IAAI;AAAA,IAG9D,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAEH,UAAI,OAAO,KAAK,IAAI,IAAIA,UAAS,EAAG,SAAQ,OAAO,OAAOA,UAAS,CAAC,GAAG;AAAA,QAErE,KAAK;AAEH,cAAI,OAAO,OAAOA,UAAS,CAAC,MAAM,GAAI;AAAA,QAGxC,KAAK;AACH,iBAAO,QAAQ,OAAO,oBAAoB,OAAO,SAAS,YAAiB,OAAO,OAAO,OAAOA,UAAS,CAAC,KAAK,MAAM,OAAO,QAAQ,IAAI;AAAA,QAG1I,KAAK;AACH,iBAAO,CAAC,QAAQ,OAAO,SAAS,IAAID,QAAO,QAAQ,OAAO,WAAW,gBAAgB,GAAGC,OAAM,IAAI,QAAQ;AAAA,MAC9G;AACA;AAAA,IAGF,KAAK;AAEH,UAAI,OAAO,OAAOA,UAAS,CAAC,MAAM,IAAK;AAAA,IAGzC,KAAK;AACH,cAAQ,OAAO,OAAO,OAAO,KAAK,IAAI,KAAK,CAAC,QAAQ,OAAO,YAAY,KAAK,GAAG,GAAG;AAAA,QAEhF,KAAK;AACH,iBAAO,QAAQ,OAAO,KAAK,MAAM,MAAM,IAAI;AAAA,QAG7C,KAAK;AACH,iBAAO,QAAQ,OAAO,yBAAyB,OAAO,UAAU,OAAO,OAAO,EAAE,MAAM,KAAK,YAAY,MAAM,YAAiB,SAAS,WAAgB,KAAK,SAAS,IAAI;AAAA,MAC7K;AAEA;AAAA,IAGF,KAAK;AACH,cAAQ,OAAO,OAAOA,UAAS,EAAE,GAAG;AAAA,QAElC,KAAK;AACH,iBAAO,SAAS,QAAQ,KAAK,QAAQ,OAAO,sBAAsB,IAAI,IAAI;AAAA,QAG5E,KAAK;AACH,iBAAO,SAAS,QAAQ,KAAK,QAAQ,OAAO,sBAAsB,OAAO,IAAI;AAAA,QAG/E,KAAK;AACH,iBAAO,SAAS,QAAQ,KAAK,QAAQ,OAAO,sBAAsB,IAAI,IAAI;AAAA,MAC9E;AAEA,aAAO,SAAS,QAAQ,KAAK,QAAQ;AAAA,EACzC;AAEA,SAAO;AACT;AA3ZA,IAKI,6BAsBA,SA2CA,UAKA,eACA,QAwCA,aAaA,YAEA,mBAIA,4BAgEA,cAIA,6BAaA,gBAQA,sBA6LA,UAqCA,sBACA,cAGE,kBASF;AA/cJ;AAAA;AAAA;AACA;AACA;AACA;AAEA,IAAI,8BAA8B,SAASC,6BAA4B,OAAO,QAAQ,OAAO;AAC3F,UAAI,WAAW;AACf,UAAIC,aAAY;AAEhB,aAAO,MAAM;AACX,mBAAWA;AACX,QAAAA,aAAY,KAAK;AAEjB,YAAI,aAAa,MAAMA,eAAc,IAAI;AACvC,iBAAO,KAAK,IAAI;AAAA,QAClB;AAEA,YAAI,MAAMA,UAAS,GAAG;AACpB;AAAA,QACF;AAEA,aAAK;AAAA,MACP;AAEA,aAAO,MAAM,OAAO,QAAQ;AAAA,IAC9B;AAEA,IAAI,UAAU,SAASC,SAAQ,QAAQ,QAAQ;AAE7C,UAAI,QAAQ;AACZ,UAAID,aAAY;AAEhB,SAAG;AACD,gBAAQ,MAAMA,UAAS,GAAG;AAAA,UACxB,KAAK;AAEH,gBAAIA,eAAc,MAAM,KAAK,MAAM,IAAI;AAKrC,qBAAO,KAAK,IAAI;AAAA,YAClB;AAEA,mBAAO,KAAK,KAAK,4BAA4B,WAAW,GAAG,QAAQ,KAAK;AACxE;AAAA,UAEF,KAAK;AACH,mBAAO,KAAK,KAAK,QAAQA,UAAS;AAClC;AAAA,UAEF,KAAK;AAEH,gBAAIA,eAAc,IAAI;AAEpB,qBAAO,EAAE,KAAK,IAAI,KAAK,MAAM,KAAK,QAAQ;AAC1C,qBAAO,KAAK,IAAI,OAAO,KAAK,EAAE;AAC9B;AAAA,YACF;AAAA,UAIF;AACE,mBAAO,KAAK,KAAK,KAAKA,UAAS;AAAA,QACnC;AAAA,MACF,SAASA,aAAY,KAAK;AAE1B,aAAO;AAAA,IACT;AAEA,IAAI,WAAW,SAASE,UAAS,OAAO,QAAQ;AAC9C,aAAO,QAAQ,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC;AAAA,IAC9C;AAGA,IAAI,gBAA+B,oBAAI,QAAQ;AAC/C,IAAI,SAAS,SAASC,QAAO,SAAS;AACpC,UAAI,QAAQ,SAAS,UAAU,CAAC,QAAQ;AAAA;AAAA,MAExC,QAAQ,SAAS,GAAG;AAClB;AAAA,MACF;AAEA,UAAI,QAAQ,QAAQ;AACpB,UAAI,SAAS,QAAQ;AACrB,UAAI,iBAAiB,QAAQ,WAAW,OAAO,UAAU,QAAQ,SAAS,OAAO;AAEjF,aAAO,OAAO,SAAS,QAAQ;AAC7B,iBAAS,OAAO;AAChB,YAAI,CAAC,OAAQ;AAAA,MACf;AAGA,UAAI,QAAQ,MAAM,WAAW,KAAK,MAAM,WAAW,CAAC,MAAM,MAEvD,CAAC,cAAc,IAAI,MAAM,GAAG;AAC7B;AAAA,MACF;AAIA,UAAI,gBAAgB;AAClB;AAAA,MACF;AAEA,oBAAc,IAAI,SAAS,IAAI;AAC/B,UAAI,SAAS,CAAC;AACd,UAAI,QAAQ,SAAS,OAAO,MAAM;AAClC,UAAI,cAAc,OAAO;AAEzB,eAAS,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AAC5C,iBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK,KAAK;AAChD,kBAAQ,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,MAAM,CAAC,EAAE,QAAQ,QAAQ,YAAY,CAAC,CAAC,IAAI,YAAY,CAAC,IAAI,MAAM,MAAM,CAAC;AAAA,QAC1G;AAAA,MACF;AAAA,IACF;AACA,IAAI,cAAc,SAASC,aAAY,SAAS;AAC9C,UAAI,QAAQ,SAAS,QAAQ;AAC3B,YAAI,QAAQ,QAAQ;AAEpB;AAAA;AAAA,UACA,MAAM,WAAW,CAAC,MAAM;AAAA,UACxB,MAAM,WAAW,CAAC,MAAM;AAAA,UAAI;AAE1B,kBAAQ,QAAQ,IAAI;AACpB,kBAAQ,QAAQ;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AACA,IAAI,aAAa;AAEjB,IAAI,oBAAoB,SAASC,mBAAkB,SAAS;AAC1D,aAAO,QAAQ,SAAS,UAAU,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAAA,IAC3E;AAEA,IAAI,6BAA6B,SAASC,4BAA2B,OAAO;AAC1E,aAAO,SAAU,SAAS,OAAO,UAAU;AACzC,YAAI,QAAQ,SAAS,UAAU,MAAM,OAAQ;AAC7C,YAAI,sBAAsB,QAAQ,MAAM,MAAM,gCAAgC;AAE9E,YAAI,qBAAqB;AACvB,cAAI,WAAW,CAAC,CAAC,QAAQ;AAgBzB,cAAI,mBAAmB,WAAW,QAAQ,OAAO;AAAA;AAAA,YACjD;AAAA;AAEA,mBAAS,IAAI,iBAAiB,SAAS,GAAG,KAAK,GAAG,KAAK;AACrD,gBAAIC,QAAO,iBAAiB,CAAC;AAE7B,gBAAIA,MAAK,OAAO,QAAQ,MAAM;AAC5B;AAAA,YACF;AAkBA,gBAAIA,MAAK,SAAS,QAAQ,QAAQ;AAChC,kBAAI,kBAAkBA,KAAI,GAAG;AAC3B;AAAA,cACF;AAEA;AAAA,YACF;AAAA,UACF;AAEA,8BAAoB,QAAQ,SAAU,mBAAmB;AACvD,oBAAQ,MAAM,uBAAwB,oBAAoB,mFAAqF,kBAAkB,MAAM,QAAQ,EAAE,CAAC,IAAI,YAAa;AAAA,UACrM,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AAEA,IAAI,eAAe,SAASC,cAAa,SAAS;AAChD,aAAO,QAAQ,KAAK,WAAW,CAAC,MAAM,OAAO,QAAQ,KAAK,WAAW,CAAC,MAAM;AAAA,IAC9E;AAEA,IAAI,8BAA8B,SAASC,6BAA4B,OAAO,UAAU;AACtF,eAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK;AACnC,YAAI,CAAC,aAAa,SAAS,CAAC,CAAC,GAAG;AAC9B,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,IAAI,iBAAiB,SAASC,gBAAe,SAAS;AACpD,cAAQ,OAAO;AACf,cAAQ,QAAQ;AAChB,cAAQ,QAAQ,IAAI;AACpB,cAAQ,WAAW;AACnB,cAAQ,QAAQ;AAAA,IAClB;AAEA,IAAI,uBAAuB,SAASC,sBAAqB,SAAS,OAAO,UAAU;AACjF,UAAI,CAAC,aAAa,OAAO,GAAG;AAC1B;AAAA,MACF;AAEA,UAAI,QAAQ,QAAQ;AAClB,gBAAQ,MAAM,oLAAoL;AAClM,uBAAe,OAAO;AAAA,MACxB,WAAW,4BAA4B,OAAO,QAAQ,GAAG;AACvD,gBAAQ,MAAM,sGAAsG;AACpH,uBAAe,OAAO;AAAA,MACxB;AAAA,IACF;AAiLA,IAAI,WAAW,SAASC,UAAS,SAAS,OAAO,UAAU,UAAU;AACnE,UAAI,QAAQ,SAAS;AAAI,YAAI,CAAC,QAAQ,QAAQ,EAAG,SAAQ,QAAQ,MAAM;AAAA,UACrE,KAAK;AACH,oBAAQ,QAAQ,IAAIf,QAAO,QAAQ,OAAO,QAAQ,MAAM;AACxD;AAAA,UAEF,KAAK;AACH,mBAAO,UAAU,CAAC,KAAK,SAAS;AAAA,cAC9B,OAAO,QAAQ,QAAQ,OAAO,KAAK,MAAM,MAAM;AAAA,YACjD,CAAC,CAAC,GAAG,QAAQ;AAAA,UAEf,KAAK;AACH,gBAAI,QAAQ,OAAQ,QAAO,QAAQ,QAAQ,OAAO,SAAU,OAAO;AACjE,sBAAQ,MAAM,OAAO,uBAAuB,GAAG;AAAA,gBAE7C,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,UAAU,CAAC,KAAK,SAAS;AAAA,oBAC9B,OAAO,CAAC,QAAQ,OAAO,eAAe,MAAM,MAAM,IAAI,CAAC;AAAA,kBACzD,CAAC,CAAC,GAAG,QAAQ;AAAA,gBAGf,KAAK;AACH,yBAAO,UAAU,CAAC,KAAK,SAAS;AAAA,oBAC9B,OAAO,CAAC,QAAQ,OAAO,cAAc,MAAM,SAAS,UAAU,CAAC;AAAA,kBACjE,CAAC,GAAG,KAAK,SAAS;AAAA,oBAChB,OAAO,CAAC,QAAQ,OAAO,cAAc,MAAM,MAAM,IAAI,CAAC;AAAA,kBACxD,CAAC,GAAG,KAAK,SAAS;AAAA,oBAChB,OAAO,CAAC,QAAQ,OAAO,cAAc,KAAK,UAAU,CAAC;AAAA,kBACvD,CAAC,CAAC,GAAG,QAAQ;AAAA,cACjB;AAEA,qBAAO;AAAA,YACT,CAAC;AAAA,QACL;AAAA;AAAA,IACF;AAEA,IAAI,uBAAuB,CAAC,QAAQ;AAGpC;AACM,yBAAmB;AAEvB,qBAAe,SAASgB,cAAa,QAAQ;AAC3C,YAAI,UAAU,OAAO,MAAM,gBAAgB;AAC3C,YAAI,CAAC,QAAS;AACd,eAAO,QAAQ,QAAQ,SAAS,CAAC;AAAA,MACnC;AAAA,IACF;AAEA,IAAI,cAAc,SAASC,aAAY,SAAS;AAC9C,UAAI,MAAM,QAAQ;AAElB,UAAI,CAAC,KAAK;AACR,cAAM,IAAI,MAAM,+OAAoP;AAAA,MACtQ;AAEA,UAAI,QAAQ,OAAO;AACjB,YAAI,YAAY,SAAS,iBAAiB,mCAAmC;AAK7E,cAAM,UAAU,QAAQ,KAAK,WAAW,SAAUP,OAAM;AAOtD,cAAI,uBAAuBA,MAAK,aAAa,cAAc;AAE3D,cAAI,qBAAqB,QAAQ,GAAG,MAAM,IAAI;AAC5C;AAAA,UACF;AAEA,mBAAS,KAAK,YAAYA,KAAI;AAC9B,UAAAA,MAAK,aAAa,UAAU,EAAE;AAAA,QAChC,CAAC;AAAA,MACH;AAEA,UAAI,gBAAgB,QAAQ,iBAAiB;AAE7C;AACE,YAAI,UAAU,KAAK,GAAG,GAAG;AACvB,gBAAM,IAAI,MAAM,iFAAkF,MAAM,cAAe;AAAA,QACzH;AAAA,MACF;AAEA,UAAI,WAAW,CAAC;AAChB,UAAI;AACJ,UAAI,iBAAiB,CAAC;AAEtB;AACE,oBAAY,QAAQ,aAAa,SAAS;AAC1C,cAAM,UAAU,QAAQ;AAAA;AAAA;AAAA,UAExB,SAAS,iBAAiB,0BAA2B,MAAM,KAAM;AAAA,UAAG,SAAUA,OAAM;AAClF,gBAAI,SAASA,MAAK,aAAa,cAAc,EAAE,MAAM,GAAG;AAExD,qBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,uBAAS,OAAO,CAAC,CAAC,IAAI;AAAA,YACxB;AAEA,2BAAe,KAAKA,KAAI;AAAA,UAC1B;AAAA,QAAC;AAAA,MACH;AAEA,UAAI;AAEJ,UAAI,qBAAqB,CAAC,QAAQ,WAAW;AAE7C;AACE,2BAAmB,KAAK,2BAA2B;AAAA,UACjD,IAAI,SAAS;AACX,mBAAO,MAAM;AAAA,UACf;AAAA,QAEF,CAAC,GAAG,oBAAoB;AAAA,MAC1B;AAEA;AACE,YAAI;AACJ,YAAI,oBAAoB,CAAC,WAAW,SAAU,SAAS;AACrD,cAAI,CAAC,QAAQ,MAAM;AACjB,gBAAI,QAAQ,QAAQ,GAAG;AACrB,2BAAa,OAAO,QAAQ,QAAQ,CAAC;AAAA,YACvC,WAAW,QAAQ,SAAS,QAAQ,SAAS,SAAS;AAGpD,2BAAa,OAAO,QAAQ,QAAQ,IAAI;AAAA,YAC1C;AAAA,UACF;AAAA,QACF,CAAE;AACF,YAAI,aAAa,WAAW,mBAAmB,OAAO,eAAe,iBAAiB,CAAC;AAEvF,YAAI,SAAS,SAASQ,QAAO,QAAQ;AACnC,iBAAO,UAAU,QAAQ,MAAM,GAAG,UAAU;AAAA,QAC9C;AAEA,kBAAU,SAAS,OAAO,UAAU,YAAY,OAAO,aAAa;AAClE,yBAAe;AAEf,cAAI,cAAc;AAChB,gBAAI,YAAY,aAAa,WAAW,MAAM;AAE9C,gBAAI,WAAW;AACb,6BAAe;AAAA,gBACb,QAAQ,SAASC,QAAO,MAAM;AAC5B,wBAAM,OAAO,OAAO,SAAS;AAAA,gBAC/B;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,iBAAO,WAAW,WAAW,MAAM,WAAW,SAAS,MAAM,WAAW,MAAM;AAE9E,cAAI,aAAa;AACf,kBAAM,SAAS,WAAW,IAAI,IAAI;AAAA,UACpC;AAAA,QACF;AAAA,MACF;AAEA,UAAI,QAAQ;AAAA,QACV;AAAA,QACA,OAAO,IAAI,WAAW;AAAA,UACpB;AAAA,UACA;AAAA,UACA,OAAO,QAAQ;AAAA,UACf,QAAQ,QAAQ;AAAA,UAChB,SAAS,QAAQ;AAAA,UACjB,gBAAgB,QAAQ;AAAA,QAC1B,CAAC;AAAA,QACD,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,YAAY,CAAC;AAAA,QACb,QAAQ;AAAA,MACV;AACA,YAAM,MAAM,QAAQ,cAAc;AAClC,aAAO;AAAA,IACT;AAAA;AAAA;;;AC9kBA,SAAS,QAAQ,KAAK;AAMpB,MAAI,IAAI;AAER,MAAI,GACA,IAAI,GACJ,MAAM,IAAI;AAEd,SAAO,OAAO,GAAG,EAAE,GAAG,OAAO,GAAG;AAC9B,QAAI,IAAI,WAAW,CAAC,IAAI,OAAQ,IAAI,WAAW,EAAE,CAAC,IAAI,QAAS,KAAK,IAAI,WAAW,EAAE,CAAC,IAAI,QAAS,MAAM,IAAI,WAAW,EAAE,CAAC,IAAI,QAAS;AACxI;AAAA,KAEC,IAAI,SAAU,eAAe,MAAM,MAAM,SAAU;AACpD;AAAA,IAEA,MAAM;AACN;AAAA,KAEC,IAAI,SAAU,eAAe,MAAM,MAAM,SAAU;AAAA,KAEnD,IAAI,SAAU,eAAe,MAAM,MAAM,SAAU;AAAA,EACtD;AAGA,UAAQ,KAAK;AAAA,IACX,KAAK;AACH,YAAM,IAAI,WAAW,IAAI,CAAC,IAAI,QAAS;AAAA,IAEzC,KAAK;AACH,YAAM,IAAI,WAAW,IAAI,CAAC,IAAI,QAAS;AAAA,IAEzC,KAAK;AACH,WAAK,IAAI,WAAW,CAAC,IAAI;AACzB;AAAA,OAEC,IAAI,SAAU,eAAe,MAAM,MAAM,SAAU;AAAA,EACxD;AAIA,OAAK,MAAM;AACX;AAAA,GAEC,IAAI,SAAU,eAAe,MAAM,MAAM,SAAU;AACpD,WAAS,IAAI,MAAM,QAAQ,GAAG,SAAS,EAAE;AAC3C;AApDA;AAAA;AAAA;AAAA;;;ACAA,IAAI;AAAJ;AAAA;AAAA,IAAI,eAAe;AAAA,MACjB,yBAAyB;AAAA,MACzB,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,MACV,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,WAAW;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,iBAAiB;AAAA;AAAA,MAEjB,aAAa;AAAA,MACb,cAAc;AAAA,MACd,aAAa;AAAA,MACb,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,aAAa;AAAA,IACf;AAAA;AAAA;;;AC6BA,SAAS,oBAAoB,aAAa,YAAY,eAAe;AACnE,MAAI,iBAAiB,MAAM;AACzB,WAAO;AAAA,EACT;AAEA,MAAI,oBAAoB;AAExB,MAAI,kBAAkB,qBAAqB,QAAW;AACpD,QAAI,OAAO,iBAAiB,MAAM,yBAAyB;AACzD,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AAEA,WAAO;AAAA,EACT;AAEA,UAAQ,OAAO,eAAe;AAAA,IAC5B,KAAK,WACH;AACE,aAAO;AAAA,IACT;AAAA,IAEF,KAAK,UACH;AACE,UAAI,YAAY;AAEhB,UAAI,UAAU,SAAS,GAAG;AACxB,iBAAS;AAAA,UACP,MAAM,UAAU;AAAA,UAChB,QAAQ,UAAU;AAAA,UAClB,MAAM;AAAA,QACR;AACA,eAAO,UAAU;AAAA,MACnB;AAEA,UAAI,mBAAmB;AAEvB,UAAI,iBAAiB,WAAW,QAAW;AACzC,YAAIC,QAAO,iBAAiB;AAE5B,YAAIA,UAAS,QAAW;AAGtB,iBAAOA,UAAS,QAAW;AACzB,qBAAS;AAAA,cACP,MAAMA,MAAK;AAAA,cACX,QAAQA,MAAK;AAAA,cACb,MAAM;AAAA,YACR;AACA,YAAAA,QAAOA,MAAK;AAAA,UACd;AAAA,QACF;AAEA,YAAI,SAAS,iBAAiB,SAAS;AACvC,eAAO;AAAA,MACT;AAEA,aAAO,uBAAuB,aAAa,YAAY,aAAa;AAAA,IACtE;AAAA,IAEF,KAAK,YACH;AACE,UAAI,gBAAgB,QAAW;AAC7B,YAAI,iBAAiB;AACrB,YAAI,SAAS,cAAc,WAAW;AACtC,iBAAS;AACT,eAAO,oBAAoB,aAAa,YAAY,MAAM;AAAA,MAC5D,OAAO;AACL,gBAAQ,MAAM,sWAA0X;AAAA,MAC1Y;AAEA;AAAA,IACF;AAAA,IAEF,KAAK;AACH;AACE,YAAI,UAAU,CAAC;AACf,YAAI,WAAW,cAAc,QAAQ,gBAAgB,SAAU,QAAQ,KAAK,IAAI;AAC9E,cAAI,cAAc,cAAc,QAAQ;AACxC,kBAAQ,KAAK,WAAW,cAAc,kBAAkB,GAAG,QAAQ,6BAA6B,EAAE,IAAI,GAAG;AACzG,iBAAO,OAAO,cAAc;AAAA,QAC9B,CAAC;AAED,YAAI,QAAQ,QAAQ;AAClB,kBAAQ,MAAM,oHAAoH,CAAC,EAAE,OAAO,SAAS,CAAC,MAAM,WAAW,GAAG,CAAC,EAAE,KAAK,IAAI,IAAI,yDAAyD,WAAW,GAAG;AAAA,QACnQ;AAAA,MACF;AAEA;AAAA,EACJ;AAGA,MAAI,WAAW;AAEf,MAAI,cAAc,MAAM;AACtB,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,WAAW,QAAQ;AAChC,SAAO,WAAW,SAAY,SAAS;AACzC;AAEA,SAAS,uBAAuB,aAAa,YAAY,KAAK;AAC5D,MAAI,SAAS;AAEb,MAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,gBAAU,oBAAoB,aAAa,YAAY,IAAI,CAAC,CAAC,IAAI;AAAA,IACnE;AAAA,EACF,OAAO;AACL,aAAS,OAAO,KAAK;AACnB,UAAI,QAAQ,IAAI,GAAG;AAEnB,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAI,WAAW;AAEf,YAAI,cAAc,QAAQ,WAAW,QAAQ,MAAM,QAAW;AAC5D,oBAAU,MAAM,MAAM,WAAW,QAAQ,IAAI;AAAA,QAC/C,WAAW,mBAAmB,QAAQ,GAAG;AACvC,oBAAU,iBAAiB,GAAG,IAAI,MAAM,kBAAkB,KAAK,QAAQ,IAAI;AAAA,QAC7E;AAAA,MACF,OAAO;AACL,YAAI,QAAQ,2BAA2BC,gBAAe;AACpD,gBAAM,IAAI,MAAM,0BAA0B;AAAA,QAC5C;AAEA,YAAI,MAAM,QAAQ,KAAK,KAAK,OAAO,MAAM,CAAC,MAAM,aAAa,cAAc,QAAQ,WAAW,MAAM,CAAC,CAAC,MAAM,SAAY;AACtH,mBAAS,KAAK,GAAG,KAAK,MAAM,QAAQ,MAAM;AACxC,gBAAI,mBAAmB,MAAM,EAAE,CAAC,GAAG;AACjC,wBAAU,iBAAiB,GAAG,IAAI,MAAM,kBAAkB,KAAK,MAAM,EAAE,CAAC,IAAI;AAAA,YAC9E;AAAA,UACF;AAAA,QACF,OAAO;AACL,cAAI,eAAe,oBAAoB,aAAa,YAAY,KAAK;AAErE,kBAAQ,KAAK;AAAA,YACX,KAAK;AAAA,YACL,KAAK,iBACH;AACE,wBAAU,iBAAiB,GAAG,IAAI,MAAM,eAAe;AACvD;AAAA,YACF;AAAA,YAEF,SACE;AACE,kBAAI,QAAQ,aAAa;AACvB,wBAAQ,MAAM,6BAA6B;AAAA,cAC7C;AAEA,wBAAU,MAAM,MAAM,eAAe;AAAA,YACvC;AAAA,UACJ;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAMA,SAAS,gBAAgB,MAAM,YAAY,aAAa;AACtD,MAAI,KAAK,WAAW,KAAK,OAAO,KAAK,CAAC,MAAM,YAAY,KAAK,CAAC,MAAM,QAAQ,KAAK,CAAC,EAAE,WAAW,QAAW;AACxG,WAAO,KAAK,CAAC;AAAA,EACf;AAEA,MAAI,aAAa;AACjB,MAAI,SAAS;AACb,WAAS;AACT,MAAI,UAAU,KAAK,CAAC;AAEpB,MAAI,WAAW,QAAQ,QAAQ,QAAQ,QAAW;AAChD,iBAAa;AACb,cAAU,oBAAoB,aAAa,YAAY,OAAO;AAAA,EAChE,OAAO;AACL,QAAI,uBAAuB;AAE3B,QAAI,qBAAqB,CAAC,MAAM,QAAW;AACzC,cAAQ,MAAM,6BAA6B;AAAA,IAC7C;AAEA,cAAU,qBAAqB,CAAC;AAAA,EAClC;AAGA,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAU,oBAAoB,aAAa,YAAY,KAAK,CAAC,CAAC;AAE9D,QAAI,YAAY;AACd,UAAI,qBAAqB;AAEzB,UAAI,mBAAmB,CAAC,MAAM,QAAW;AACvC,gBAAQ,MAAM,6BAA6B;AAAA,MAC7C;AAEA,gBAAU,mBAAmB,CAAC;AAAA,IAChC;AAAA,EACF;AAGA,eAAa,YAAY;AACzB,MAAI,iBAAiB;AACrB,MAAIC;AAEJ,UAAQA,SAAQ,aAAa,KAAK,MAAM,OAAO,MAAM;AACnD,sBAAkB,MAAMA,OAAM,CAAC;AAAA,EACjC;AAEA,MAAI,OAAO,QAAW,MAAM,IAAI;AAEhC;AACE,QAAI,YAAY;AAAA,MACd;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN,UAAU,SAAS,WAAW;AAC5B,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AA7SA,IAIID,gBAEA,+BACA,+BACA,gBACA,gBAEA,kBAIA,oBAIA,kBAIA,mBA0BE,qBACA,eACA,sBACA,WACA,eACA,iBAsBF,4BAiKA,cAGA;AAhPJ;AAAA;AAAA;AACA;AACA;AAEA,IAAIA,iBAAgB;AAEpB,IAAI,gCAAgC;AAAA;AAAA;AAAA;AACpC,IAAI,gCAAgC;AACpC,IAAI,iBAAiB;AACrB,IAAI,iBAAiB;AAErB,IAAI,mBAAmB,SAASE,kBAAiB,UAAU;AACzD,aAAO,SAAS,WAAW,CAAC,MAAM;AAAA,IACpC;AAEA,IAAI,qBAAqB,SAASC,oBAAmB,OAAO;AAC1D,aAAO,SAAS,QAAQ,OAAO,UAAU;AAAA,IAC3C;AAEA,IAAI,mBAAkC,QAAQ,SAAU,WAAW;AACjE,aAAO,iBAAiB,SAAS,IAAI,YAAY,UAAU,QAAQ,gBAAgB,KAAK,EAAE,YAAY;AAAA,IACxG,CAAC;AAED,IAAI,oBAAoB,SAASC,mBAAkB,KAAK,OAAO;AAC7D,cAAQ,KAAK;AAAA,QACX,KAAK;AAAA,QACL,KAAK,iBACH;AACE,cAAI,OAAO,UAAU,UAAU;AAC7B,mBAAO,MAAM,QAAQ,gBAAgB,SAAUH,QAAO,IAAI,IAAI;AAC5D,uBAAS;AAAA,gBACP,MAAM;AAAA,gBACN,QAAQ;AAAA,gBACR,MAAM;AAAA,cACR;AACA,qBAAO;AAAA,YACT,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACJ;AAEA,UAAI,aAAS,GAAG,MAAM,KAAK,CAAC,iBAAiB,GAAG,KAAK,OAAO,UAAU,YAAY,UAAU,GAAG;AAC7F,eAAO,QAAQ;AAAA,MACjB;AAEA,aAAO;AAAA,IACT;AAEA;AACM,4BAAsB;AACtB,sBAAgB,CAAC,UAAU,QAAQ,WAAW,WAAW,OAAO;AAChE,6BAAuB;AACvB,kBAAY;AACZ,sBAAgB;AAChB,wBAAkB,CAAC;AAEvB,0BAAoB,SAASG,mBAAkB,KAAK,OAAO;AACzD,YAAI,QAAQ,WAAW;AACrB,cAAI,OAAO,UAAU,YAAY,cAAc,QAAQ,KAAK,MAAM,MAAM,CAAC,oBAAoB,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,MAAM,MAAM,OAAO,MAAM,SAAS,CAAC,KAAK,MAAM,OAAO,CAAC,MAAM,OAAO,MAAM,OAAO,CAAC,MAAM,MAAM;AACtN,kBAAM,IAAI,MAAM,mGAAmG,QAAQ,MAAM;AAAA,UACnI;AAAA,QACF;AAEA,YAAI,YAAY,qBAAqB,KAAK,KAAK;AAE/C,YAAI,cAAc,MAAM,CAAC,iBAAiB,GAAG,KAAK,IAAI,QAAQ,GAAG,MAAM,MAAM,gBAAgB,GAAG,MAAM,QAAW;AAC/G,0BAAgB,GAAG,IAAI;AACvB,kBAAQ,MAAM,mFAAmF,IAAI,QAAQ,WAAW,KAAK,EAAE,QAAQ,eAAe,SAAU,KAAK,OAAO;AAC1K,mBAAO,MAAM,YAAY;AAAA,UAC3B,CAAC,IAAI,GAAG;AAAA,QACV;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,IAAI,6BAA6B;AAiKjC,IAAI,eAAe;AAAA;AAAA;;;AC3OnB,SAAS,oBAAoB,YAAY,kBAAkB,YAAY;AACrE,MAAI,eAAe;AACnB,aAAW,MAAM,GAAG,EAAE,QAAQ,SAAU,WAAW;AACjD,QAAI,WAAW,SAAS,MAAM,QAAW;AACvC,uBAAiB,KAAK,WAAW,SAAS,IAAI,GAAG;AAAA,IACnD,WAAW,WAAW;AACpB,sBAAgB,YAAY;AAAA,IAC9B;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAZA,IAAI,WAaA,gBAgBA;AA7BJ;AAAA;AAAA,IAAI,YAAY;AAahB,IAAI,iBAAiB,SAASC,gBAAe,OAAO,YAAY,aAAa;AAC3E,UAAI,YAAY,MAAM,MAAM,MAAM,WAAW;AAE7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKC,gBAAgB;AAAA;AAAA;AAAA;AAAA,QAIjB,cAAc,UAAW,MAAM,WAAW,SAAS,MAAM;AAAA,QAAW;AAClE,cAAM,WAAW,SAAS,IAAI,WAAW;AAAA,MAC3C;AAAA,IACF;AACA,IAAI,eAAe,SAASC,cAAa,OAAO,YAAY,aAAa;AACvE,qBAAe,OAAO,YAAY,WAAW;AAC7C,UAAI,YAAY,MAAM,MAAM,MAAM,WAAW;AAE7C,UAAI,MAAM,SAAS,WAAW,IAAI,MAAM,QAAW;AACjD,YAAI,UAAU;AAEd,WAAG;AACD,gBAAM,OAAO,eAAe,UAAU,MAAM,YAAY,IAAI,SAAS,MAAM,OAAO,IAAI;AAEtF,oBAAU,QAAQ;AAAA,QACpB,SAAS,YAAY;AAAA,MACvB;AAAA,IACF;AAAA;AAAA;;;AC1CA;AAAA;AAAA;AAAA;AAIA,SAAS,qBAAqB,OAAO,YAAY;AAC/C,MAAI,MAAM,SAAS,WAAW,IAAI,MAAM,QAAW;AACjD,WAAO,MAAM,OAAO,IAAI,YAAY,MAAM,OAAO,IAAI;AAAA,EACvD;AACF;AAEA,SAAS,MAAM,YAAY,KAAK,WAAW;AACzC,MAAI,mBAAmB,CAAC;AACxB,MAAI,eAAe,oBAAoB,YAAY,kBAAkB,SAAS;AAE9E,MAAI,iBAAiB,SAAS,GAAG;AAC/B,WAAO;AAAA,EACT;AAEA,SAAO,eAAe,IAAI,gBAAgB;AAC5C;AAnBA,IAqBI,eA4EA;AAjGJ;AAAA;AAAA;AACA;AACA;AAmBA,IAAI,gBAAgB,SAASC,eAAc,SAAS;AAClD,UAAI,QAAQ,YAAY,OAAO;AAE/B,YAAM,MAAM,SAAS,SAAU,OAAO;AACpC,YAAI,KAAK,QAAQ,GAAG;AAClB,gBAAM,IAAI,MAAM,sDAAsD;AAAA,QACxE;AAEA,aAAK,WAAW;AAAA,MAClB;AAEA,YAAM,SAAS;AAEf,UAAI,MAAM,SAASC,OAAM;AACvB,iBAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,eAAK,IAAI,IAAI,UAAU,IAAI;AAAA,QAC7B;AAEA,YAAI,aAAa,gBAAgB,MAAM,MAAM,YAAY,MAAS;AAClE,qBAAa,OAAO,YAAY,KAAK;AACrC,eAAO,MAAM,MAAM,MAAM,WAAW;AAAA,MACtC;AAEA,UAAI,YAAY,SAASC,aAAY;AACnC,iBAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,eAAK,KAAK,IAAI,UAAU,KAAK;AAAA,QAC/B;AAEA,YAAI,aAAa,gBAAgB,MAAM,MAAM,UAAU;AACvD,YAAI,YAAY,eAAe,WAAW;AAC1C,6BAAqB,OAAO;AAAA,UAC1B,MAAM,WAAW;AAAA,UACjB,QAAQ,gBAAgB,YAAY,MAAM,WAAW,SAAS;AAAA,QAChE,CAAC;AACD,eAAO;AAAA,MACT;AAEA,UAAI,eAAe,SAASC,gBAAe;AACzC,iBAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,eAAK,KAAK,IAAI,UAAU,KAAK;AAAA,QAC/B;AAEA,YAAI,aAAa,gBAAgB,MAAM,MAAM,UAAU;AACvD,6BAAqB,OAAO,UAAU;AAAA,MACxC;AAEA,UAAI,KAAK,SAASC,MAAK;AACrB,iBAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,eAAK,KAAK,IAAI,UAAU,KAAK;AAAA,QAC/B;AAEA,eAAO,MAAM,MAAM,YAAY,KAAK,WAAW,IAAI,CAAC;AAAA,MACtD;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,SAAS,QAAQ,KAAK;AAC7B,cAAI,QAAQ,SAAU,KAAK;AACzB,kBAAM,SAAS,GAAG,IAAI;AAAA,UACxB,CAAC;AAAA,QACH;AAAA,QACA,OAAO,SAAS,QAAQ;AACtB,gBAAM,aAAa,CAAC;AACpB,gBAAM,WAAW,CAAC;AAClB,gBAAM,MAAM,MAAM;AAAA,QACpB;AAAA,QACA,OAAO,MAAM;AAAA,QACb;AAAA,QACA,qBAAqB,oBAAoB,KAAK,MAAM,MAAM,UAAU;AAAA,QACpE,OAAO,MAAM,KAAK,MAAM,MAAM,YAAY,GAAG;AAAA,MAC/C;AAAA,IACF;AAEA,IAAI,aAAa,SAASC,YAAW,MAAM;AACzC,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAI,MAAM,KAAK,CAAC;AAChB,YAAI,OAAO,KAAM;AACjB,YAAI,QAAQ;AAEZ,gBAAQ,OAAO,KAAK;AAAA,UAClB,KAAK;AACH;AAAA,UAEF,KAAK,UACH;AACE,gBAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,sBAAQA,YAAW,GAAG;AAAA,YACxB,OAAO;AACL,sBAAQ;AAER,uBAAS,KAAK,KAAK;AACjB,oBAAI,IAAI,CAAC,KAAK,GAAG;AACf,4BAAU,SAAS;AACnB,2BAAS;AAAA,gBACX;AAAA,cACF;AAAA,YACF;AAEA;AAAA,UACF;AAAA,UAEF,SACE;AACE,oBAAQ;AAAA,UACV;AAAA,QACJ;AAEA,YAAI,OAAO;AACT,kBAAQ,OAAO;AACf,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC5IA;AAAA;AAAA;AACA,QAAI,SAAU,WAAQ,QAAK,UAAW,SAAU,GAAG,GAAG;AAClD,UAAI,IAAI,CAAC;AACT,eAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI;AAC9E,UAAE,CAAC,IAAI,EAAE,CAAC;AACd,UAAI,KAAK,QAAQ,OAAO,OAAO,0BAA0B;AACrD,iBAAS,IAAI,GAAG,IAAI,OAAO,sBAAsB,CAAC,GAAG,IAAI,EAAE,QAAQ,KAAK;AACpE,cAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAK,GAAG,EAAE,CAAC,CAAC;AACzE,cAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,QACxB;AACJ,aAAO;AAAA,IACX;AACA,QAAI,kBAAmB,WAAQ,QAAK,mBAAoB,SAAU,KAAK;AACnE,aAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAI;AAAA,IAC5D;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAM,oBAAoB,gBAAgB,uHAAuC;AAEjF,YAAQ,UAAU,CAAC,eAAe,eAAe,OAAO,QAAQ,OAAO;AACnE,YAAM,EAAE,WAAW,oBAAoB,CAAC,EAAE,IAAI,eAAe,SAAS,OAAO,eAAe,CAAC,WAAW,CAAC;AACzG,YAAM,iBAAiB;AAAA,QACnB,OAAO,OAAO,OAAO;AAAA,UACjB,sBAAsB;AAAA,UACtB,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,UACjB,YAAY;AAAA,UACZ,mBAAmB;AAAA,UACnB,cAAc;AAAA,UACd,mBAAmB;AAAA,UACnB,qBAAqB;AAAA,UACrB,uBAAuB;AAAA,UACvB,uBAAuB;AAAA,UACvB,yBAAyB;AAAA,UACzB,kBAAkB;AAAA,UAClB,sBAAsB;AAAA,UACtB,qBAAqB;AAAA,UACrB,2BAA2B;AAAA,UAC3B,0BAA0B;AAAA,UAC1B,oBAAoB;AAAA,UACpB,qBAAqB;AAAA,UACrB,aAAa;AAAA,UACb,kBAAkB;AAAA,UAClB,oBAAoB;AAAA,UACpB,sBAAsB;AAAA,UACtB,2BAA2B;AAAA,UAC3B,sBAAsB;AAAA,UACtB,4BAA4B;AAAA,QAChC,GAAI,kBAAkB,SAAS,CAAC,CAAE;AAAA,QAClC,MAAM,OAAO,OAAO;AAAA,UAChB,sBAAsB;AAAA,UACtB,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,UACjB,YAAY;AAAA,UACZ,mBAAmB;AAAA,UACnB,cAAc;AAAA,UACd,mBAAmB;AAAA,UACnB,qBAAqB;AAAA,UACrB,uBAAuB;AAAA,UACvB,uBAAuB;AAAA,UACvB,yBAAyB;AAAA,UACzB,kBAAkB;AAAA,UAClB,sBAAsB;AAAA,UACtB,qBAAqB;AAAA,UACrB,2BAA2B;AAAA,UAC3B,0BAA0B;AAAA,UAC1B,oBAAoB;AAAA,UACpB,qBAAqB;AAAA,UACrB,aAAa;AAAA,UACb,kBAAkB;AAAA,UAClB,oBAAoB;AAAA,UACpB,sBAAsB;AAAA,UACtB,2BAA2B;AAAA,UAC3B,sBAAsB;AAAA,UACtB,4BAA4B;AAAA,QAChC,GAAI,kBAAkB,QAAQ,CAAC,CAAE;AAAA,MACrC;AACA,YAAM,YAAY,eAAe,eAAe,OAAO,eAAe;AACtE,YAAM,EAAE,KAAK,GAAG,KAAK,GAAG,kBAAkB,SAAS,EAAE,KAAK,cAAc,MAAM,CAAC;AAC/E,YAAM,UAAU,IAAI;AAAA,QAChB,OAAO;AAAA,QACP,OAAO;AAAA,MACX,CAAC;AACD,YAAM,YAAY,IAAI;AAAA,QAClB,CAAC,IAAI,OAAO,EAAE,GAAG;AAAA,UACb,OAAO;AAAA,QACX;AAAA,QACA,OAAO;AAAA,MACX,CAAC;AACD,YAAM,gBAAgB,IAAI;AAAA,QACtB,OAAO;AAAA,QACP,YAAY,UAAU;AAAA,QACtB,KAAK;AAAA,UACD,QAAQ;AAAA,UACR,YAAY;AAAA,UACZ,YAAY;AAAA,QAChB;AAAA,QACA,OAAO;AAAA,QACP,gBAAgB;AAAA,MACpB,CAAC;AACD,YAAM,kBAAkB,IAAI;AAAA,QACxB,OAAO,UAAU;AAAA,QACjB,OAAO;AAAA,MACX,CAAC;AACD,YAAM,cAAc,IAAI;AAAA,QACpB,OAAO,UAAU;AAAA,QACjB,OAAO;AAAA,MACX,CAAC;AACD,YAAM,aAAa,IAAI;AAAA,QACnB,YAAY,UAAU;AAAA,QACtB,SAAS;AAAA,QACT,cAAc,aAAa,UAAU,0BAA0B;AAAA,QAC/D,OAAO;AAAA,QACP,eAAe;AAAA,UACX,YAAY,aAAa,UAAU,0BAA0B;AAAA,QACjE;AAAA,QACA,CAAC,IAAI,WAAW,EAAE,GAAG;AAAA,UACjB,OAAO,UAAU;AAAA,QACrB;AAAA,MACJ,CAAC;AACD,YAAM,aAAa,IAAI;AAAA,QACnB,OAAO,UAAU;AAAA,QACjB,OAAO;AAAA,MACX,CAAC;AACD,YAAM,cAAc,IAAI;AAAA,QACpB,YAAY,UAAU;AAAA,QACtB,OAAO,UAAU;AAAA,QACjB,KAAK;AAAA,UACD,OAAO,UAAU;AAAA,QACrB;AAAA,QACA,CAAC,IAAI,UAAU,EAAE,GAAG;AAAA,UAChB,OAAO,UAAU;AAAA,QACrB;AAAA,QACA,OAAO;AAAA,MACX,CAAC;AACD,YAAM,YAAY,IAAI;AAAA,QAClB,YAAY,UAAU;AAAA,QACtB,OAAO,UAAU;AAAA,QACjB,KAAK;AAAA,UACD,OAAO,UAAU;AAAA,QACrB;AAAA,QACA,CAAC,IAAI,UAAU,EAAE,GAAG;AAAA,UAChB,OAAO,UAAU;AAAA,QACrB;AAAA,QACA,OAAO;AAAA,MACX,CAAC;AACD,YAAM,cAAc,IAAI;AAAA,QACpB,YAAY,UAAU;AAAA,QACtB,CAAC,IAAI,UAAU,EAAE,GAAG;AAAA,UAChB,OAAO,UAAU;AAAA,QACrB;AAAA,QACA,OAAO;AAAA,MACX,CAAC;AACD,YAAM,WAAW,IAAI;AAAA,QACjB,SAAS;AAAA,QACT,SAAS;AAAA,QACT,cAAc;AAAA,QACd,WAAW;AAAA,QACX,OAAO;AAAA,MACX,CAAC;AACD,YAAM,YAAY,IAAI;AAAA,QAClB,YAAY,UAAU;AAAA,QACtB,OAAO;AAAA,MACX,CAAC;AACD,YAAM,cAAc,IAAI;AAAA,QACpB,YAAY,UAAU;AAAA,QACtB,OAAO;AAAA,MACX,CAAC;AACD,YAAM,iBAAiB,IAAI;AAAA,QACvB,iBAAiB,UAAU;AAAA,QAC3B,OAAO;AAAA,MACX,CAAC;AACD,YAAM,WAAW,IAAI;AAAA,QACjB,iBAAiB,UAAU;AAAA,QAC3B,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,GAAG;AAAA,UACC,gBAAgB;AAAA,UAChB,QAAQ;AAAA,UACR,KAAK;AAAA,YACD,SAAS;AAAA,UACb;AAAA,QACJ;AAAA,MACJ,CAAC;AACD,YAAM,YAAY,IAAI;AAAA,QAClB,iBAAiB,UAAU;AAAA,QAC3B,OAAO;AAAA,MACX,CAAC;AACD,YAAM,SAAS,IAAI;AAAA,QACf,OAAO;AAAA,QACP,aAAa;AAAA,QACb,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,CAAC,KAAK,SAAS,EAAE,GAAG;AAAA,UAChB,KAAK;AAAA,YACD,OAAO,UAAU;AAAA,UACrB;AAAA,QACJ;AAAA,QACA,CAAC,KAAK,WAAW,EAAE,GAAG;AAAA,UAClB,KAAK;AAAA,YACD,OAAO,UAAU;AAAA,UACrB;AAAA,QACJ;AAAA,MACJ,CAAC;AACD,YAAM,kBAAkB,IAAI;AAAA,QACxB,YAAY,UAAU;AAAA,QACtB,OAAO;AAAA,QACP,CAAC,IAAI,SAAS,MAAM,WAAW,EAAE,GAAG;AAAA,UAChC,iBAAiB;AAAA,QACrB;AAAA,MACJ,CAAC;AACD,YAAM,oBAAoB,IAAI;AAAA,QAC1B,OAAO;AAAA,MACX,CAAC;AACD,YAAM,SAAS,IAAI;AAAA,QACf,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,WAAW;AAAA,QACX,YAAY,UAAU;AAAA,QACtB,WAAW;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,UAAU;AAAA,UACtB,KAAK;AAAA,YACD,SAAS;AAAA,UACb;AAAA,QACJ;AAAA,QACA,KAAK;AAAA,UACD,SAAS;AAAA,QACb;AAAA,QACA,CAAC,KAAK,SAAS,EAAE,GAAG;AAAA,UAChB,YAAY,UAAU;AAAA,QAC1B;AAAA,QACA,CAAC,KAAK,WAAW,EAAE,GAAG;AAAA,UAClB,YAAY,UAAU;AAAA,QAC1B;AAAA,QACA,CAAC,KAAK,iBAAiB,EAAE,GAAG;AAAA,UACxB,YAAY,UAAU;AAAA,UACtB,WAAW;AAAA,YACP,YAAY,UAAU;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ,CAAC;AACD,YAAM,cAAc,IAAI;AAAA,QACpB,WAAW;AAAA,UACP,YAAY,UAAU;AAAA,UACtB,QAAQ;AAAA,QACZ;AAAA,QACA,OAAO;AAAA,MACX,CAAC;AACD,YAAMC,QAAO,IAAI;AAAA,QACb,eAAe;AAAA,QACf,OAAO;AAAA,MACX,CAAC;AACD,YAAM,gBAAgB;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AACA,YAAM,yBAAyB,OAAO,KAAK,MAAM,EAAE,OAAO,CAAC,KAAK,QAAS,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,GAAG,GAAG;AAAA,QAC3G,CAAC,GAAG,GAAG,IAAI,OAAO,GAAG,CAAC;AAAA,MAC1B,CAAC,GAAI,CAAC,CAAC;AACP,aAAO,OAAO,KAAK,aAAa,EAAE,OAAO,CAAC,KAAK,QAAS,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,GAAG,GAAG;AAAA,QAC1F,CAAC,GAAG,GAAG,uBAAuB,GAAG,IAC3B,GAAG,cAAc,GAAG,GAAG,uBAAuB,GAAG,CAAC,IAClD,cAAc,GAAG;AAAA,MAC3B,CAAC,GAAI,CAAC,CAAC;AAAA,IACX;AAAA;AAAA;;;AClSA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,sBAAsB;AAC9B,aAAS,oBAAoB,iBAAiB,WAAW,YAAY;AACjE,UAAI,gBAAgB;AACpB,UAAI;AACJ,UAAI,aAAa,CAAC;AAClB,UAAI,SAAS,CAAC;AACd,sBAAgB,QAAQ,CAACC,OAAM,cAAc;AACzC,cAAM,aAAa,UAAU,KAAK,cAAY,YAAY,YAAY,cAAc,YAAY,YAAY,UAAU;AACtH,YAAI,CAAC,cAAc,gBAAgB,QAAW;AAE1C,yBAAe;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,YACX,SAAS;AAAA,YACT,OAAO;AAAA,UACX;AACA,iBAAO,KAAK,YAAY;AACxB,qBAAW,SAAS,IAAI,aAAa;AACrC;AAAA,QACJ,WACS,CAAC,YAAY;AAElB,uBAAa,UAAU;AACvB,uBAAa;AACb,qBAAW,SAAS,IAAI,aAAa;AAAA,QACzC,OACK;AAED,yBAAe;AAAA,QACnB;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,QACH;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAAA;AAAA;;;ACtC9B;AAAA;AAAA;AAAA;AAIA,SAAS,QAAQ,OAAO,QAAQ;AAC5B,MAAI,UAAU,QAAQ;AAClB,WAAO;AAAA,EACX;AACA,MAAI,UAAU,KAAK,KAAK,UAAU,MAAM,GAAG;AACvC,WAAO;AAAA,EACX;AACA,SAAO;AACX;AACA,SAAS,eAAe,WAAW,YAAY;AAC3C,MAAI,UAAU,WAAW,WAAW,QAAQ;AACxC,WAAO;AAAA,EACX;AACA,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,QAAI,CAAC,QAAQ,UAAU,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG;AACvC,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAEA,SAAS,WAAW,UAAUC,UAAS;AACnC,MAAIA,aAAY,QAAQ;AAAE,IAAAA,WAAU;AAAA,EAAgB;AACpD,MAAI,QAAQ;AACZ,WAAS,WAAW;AAChB,QAAI,UAAU,CAAC;AACf,aAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,cAAQ,EAAE,IAAI,UAAU,EAAE;AAAA,IAC9B;AACA,QAAI,SAAS,MAAM,aAAa,QAAQA,SAAQ,SAAS,MAAM,QAAQ,GAAG;AACtE,aAAO,MAAM;AAAA,IACjB;AACA,QAAI,aAAa,SAAS,MAAM,MAAM,OAAO;AAC7C,YAAQ;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,MACV,UAAU;AAAA,IACd;AACA,WAAO;AAAA,EACX;AACA,WAAS,QAAQ,SAAS,QAAQ;AAC9B,YAAQ;AAAA,EACZ;AACA,SAAO;AACX;AAhDA,IAAI;AAAJ;AAAA;AAAA,IAAI,YAAY,OAAO,SACnB,SAAS,SAAS,OAAO;AACrB,aAAO,OAAO,UAAU,YAAY,UAAU;AAAA,IAClD;AAAA;AAAA;;;ACHJ;AAAA;AACA,QAAI,kBAAmB,WAAQ,QAAK,oBAAqB,OAAO,SAAU,SAAS,GAAGC,IAAG,GAAG,IAAI;AAC5F,UAAI,OAAO,OAAW,MAAK;AAC3B,UAAI,OAAO,OAAO,yBAAyBA,IAAG,CAAC;AAC/C,UAAI,CAAC,SAAS,SAAS,OAAO,CAACA,GAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,eAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,iBAAOA,GAAE,CAAC;AAAA,QAAG,EAAE;AAAA,MAC9D;AACA,aAAO,eAAe,GAAG,IAAI,IAAI;AAAA,IACrC,IAAM,SAAS,GAAGA,IAAG,GAAG,IAAI;AACxB,UAAI,OAAO,OAAW,MAAK;AAC3B,QAAE,EAAE,IAAIA,GAAE,CAAC;AAAA,IACf;AACA,QAAI,qBAAsB,WAAQ,QAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,aAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,EAAE,CAAC;AAAA,IACtE,IAAK,SAAS,GAAG,GAAG;AAChB,QAAE,SAAS,IAAI;AAAA,IACnB;AACA,QAAI,eAAgB,WAAQ,QAAK,gBAAiB,SAAU,KAAK;AAC7D,UAAI,OAAO,IAAI,WAAY,QAAO;AAClC,UAAI,SAAS,CAAC;AACd,UAAI,OAAO;AAAM,iBAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG,iBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvI,yBAAmB,QAAQ,GAAG;AAC9B,aAAO;AAAA,IACX;AACA,QAAI,kBAAmB,WAAQ,QAAK,mBAAoB,SAAU,KAAK;AACnE,aAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAI;AAAA,IAC5D;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,aAAa,QAAQ,mBAAmB;AAChD,QAAM,gBAAgB;AACtB,QAAM,QAAQ,aAAa,eAAgB;AAC3C,QAAM,eAAe,gBAAgB,oBAAqB;AAC1D,QAAM,kBAAkB;AACxB,WAAO,eAAe,SAAS,cAAc,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,gBAAgB;AAAA,IAAY,EAAE,CAAC;AAC1H,QAAM,WAAW,gBAAgB,gBAAmB;AACpD,QAAM,0BAA0B;AAChC,QAAM,IAAI;AACV,QAAMC,WAAU,EAAE,WAAW;AAC7B,QAAI;AACJ,KAAC,SAAUC,mBAAkB;AACzB,MAAAA,kBAAiB,MAAM,IAAI;AAC3B,MAAAA,kBAAiB,OAAO,IAAI;AAAA,IAChC,GAAG,qBAAqB,QAAQ,mBAAmB,mBAAmB,CAAC,EAAE;AACzE,QAAM,aAAN,cAAyB,MAAM,UAAU;AAAA,MACrC,YAAY,OAAO;AACf,cAAM,KAAK;AAKX,aAAK,kBAAkB,MAAM;AACzB,cAAI,KAAK,MAAM,eAAe,SAAS,GAAG;AACtC,iBAAK,SAAS;AAAA,cACV,gBAAgB,CAAC;AAAA,YACrB,CAAC;AACD,mBAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACX;AAKA,aAAK,gBAAgB,CAAC,OAAO;AACzB,gBAAM,YAAY,KAAK,MAAM,eAAe,MAAM;AAClD,oBAAU,KAAK,EAAE;AACjB,eAAK,SAAS;AAAA,YACV,gBAAgB;AAAA,UACpB,CAAC;AAAA,QACL;AAOA,aAAK,gBAAgBD,SAAQ,SAAS,OAAO;AAO7C,aAAK,yBAAyB,CAAC,OAAO;AAClC,cAAI,KAAK,MAAM,mBAAmB;AAC9B,mBAAO,CAAC,MAAM,KAAK,MAAM,kBAAkB,IAAI,CAAC;AAAA,UACpD;AACA,iBAAO,MAAM;AAAA,UAAE;AAAA,QACnB;AAOA,aAAK,iBAAiB,CAAC,WAAW,aAAa;AAC3C,iBAAO,UAAU,IAAI,CAAC,UAAU,MAAM;AAClC,oBAAS,GAAG,cAAc,KAAK,QAAQ,EAAE,YAAY,GAAG,aAAa,SAAS,KAAK,OAAO,UAAU;AAAA,cAC5F,CAAC,KAAK,OAAO,SAAS,GAAG,SAAS,SAAS,gBAAgB,SAAS;AAAA,cACpE,CAAC,KAAK,OAAO,WAAW,GAAG,SAAS,SAAS,gBAAgB,SAAS;AAAA,YAC1E,CAAC,GAAG,UAAU,WAAW,SAAS,SAAS,KAAK,IAAI,SAAS,MAAM,GAAG,CAAC;AAAA,UAC/E,CAAC;AAAA,QACL;AAcA,aAAK,aAAa,CAAC,YAAY,MAAME,SAAQ,OAAO,sBAAsB,qBAAqB;AAC3F,gBAAM,qBAAqB,GAAGA,OAAM,IAAI,UAAU;AAClD,gBAAM,+BAA+B,GAAG,gBAAgB,IAAI,oBAAoB;AAChF,gBAAM,gBAAgB,KAAK,MAAM,eAAe,SAAS,kBAAkB,KACvE,KAAK,MAAM,eAAe,SAAS,4BAA4B;AACnE,gBAAM,QAAQ,SAAS,gBAAgB,SAAS;AAChD,gBAAM,UAAU,SAAS,gBAAgB,SAAS;AAClD,gBAAM,UAAU,SAAS,gBAAgB,SAAS;AAClD,cAAI;AACJ,cAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,sBAAU,KAAK,eAAe,OAAO,KAAK,MAAM,aAAa;AAAA,UACjE,WACS,KAAK,MAAM,eAAe;AAC/B,sBAAU,KAAK,MAAM,cAAc,KAAK;AAAA,UAC5C,OACK;AACD,sBAAU;AAAA,UACd;AACA,kBAAS,GAAG,cAAc,MAAM,MAAM,UAAU,EAAE,UAAU,CAAC,CAAC,KAAK,MAAM,oBAAqB,GAAG,cAAc,KAAK,MAAM,EAAE,SAAS,cAAc,KAAK,uBAAuB,kBAAkB,GAAG,YAAY,GAAG,aAAa,SAAS,KAAK,OAAO,QAAQ;AAAA,YAC7O,CAAC,KAAK,OAAO,WAAW,GAAG,CAAC;AAAA,YAC5B,CAAC,KAAK,OAAO,SAAS,GAAG;AAAA,YACzB,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,iBAAiB,GAAG;AAAA,UACrC,CAAC,GAAG,WAAW,GAAG,cAAc,KAAK,OAAO,EAAE,WAAW,KAAK,OAAO,YAAY,UAAU,WAAW,CAAC,EAAE,CAAC,GAAI,CAAC,KAAK,MAAM,aAAa,CAAC,KAAK,MAAM,oBAAqB,GAAG,cAAc,KAAK,MAAM,EAAE,SAAS,wBAC3M,KAAK,uBAAuB,4BAA4B,GAAG,YAAY,GAAG,aAAa,SAAS,KAAK,OAAO,QAAQ;AAAA,YACpH,CAAC,KAAK,OAAO,WAAW,GAAG,CAAC;AAAA,YAC5B,CAAC,KAAK,OAAO,SAAS,GAAG;AAAA,YACzB,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,iBAAiB,GAAG;AAAA,UACrC,CAAC,GAAG,WAAW,GAAG,cAAc,KAAK,OAAO,EAAE,WAAW,KAAK,OAAO,YAAY,UAAU,qBAAqB,CAAC,EAAE,CAAC,GAAI,KAAK,MAAM,eACjI,KAAK,MAAM,aAAa;AAAA,YACtB;AAAA,YACA;AAAA,YACA,QAAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,QAAQ,KAAK;AAAA,UACjB,CAAC,IACC,MAAM,CAAC,KAAK,MAAM,gBAAiB,GAAG,cAAc,KAAK,MAAM,EAAE,YAAY,GAAG,aAAa,SAAS,KAAK,OAAO,QAAQ;AAAA,YACxH,CAAC,KAAK,OAAO,SAAS,GAAG,CAAC;AAAA,YAC1B,CAAC,KAAK,OAAO,SAAS,GAAG;AAAA,YACzB,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,eAAe,GAAG;AAAA,UACnC,CAAC,GAAG,WAAW,GAAG,cAAc,MAAM,OAAO,EAAE,UAAU,CAAC,SAAS,KAAK,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,IAAK,GAAG,cAAc,KAAK,MAAM,EAAE,YAAY,GAAG,aAAa,SAAS,KAAK,OAAO,SAAS;AAAA,YACrL,CAAC,KAAK,OAAO,SAAS,GAAG,CAAC;AAAA,YAC1B,CAAC,KAAK,OAAO,SAAS,GAAG;AAAA,YACzB,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,WAAW,GAAG;AAAA,YAC3B,CAAC,KAAK,OAAO,eAAe,GAAG;AAAA,UACnC,CAAC,GAAG,WAAW,GAAG,cAAc,KAAK,OAAO,EAAE,WAAW,KAAK,OAAO,aAAa,UAAU,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;AAAA,QAC5H;AASA,aAAK,kBAAkB,CAAC,EAAE,MAAM,MAAM,GAAG,UAAU;AAC/C,kBAAS,GAAG,cAAc,MAAM,MAAM,EAAE,WAAW,KAAK,OAAO,MAAM,UAAU,CAAC,KAAK,WAAW,KAAK,YAAY,KAAK,MAAM,iBAAiB,MAAM,KAAK,KAAK,GAAG,KAAK,WAAW,MAAM,YAAY,MAAM,MAAM,iBAAiB,OAAO,MAAM,KAAK,CAAC,EAAE,GAAG,KAAK;AAAA,QAChQ;AASA,aAAK,mBAAmB,CAAC,EAAE,MAAM,MAAM,GAAG,UAAU;AAChD,cAAI;AACJ,cAAI,KAAK,SAAS,gBAAgB,SAAS,WAAW,MAAM,SAAS,gBAAgB,SAAS,OAAO;AACjG,oBAAS,GAAG,cAAc,MAAM,MAAM,UAAU,EAAE,UAAU,EAAE,GAAG,cAAc,KAAK,MAAM,EAAE,WAAW,KAAK,OAAO,MAAM,UAAU,KAAK,WAAW,KAAK,YAAY,KAAK,MAAM,iBAAiB,MAAM,KAAK,OAAO,IAAI,EAAE,CAAC,IAAI,GAAG,cAAc,KAAK,MAAM,EAAE,WAAW,KAAK,OAAO,MAAM,UAAU,KAAK,WAAW,MAAM,MAAM,MAAM,iBAAiB,OAAO,MAAM,OAAO,MAAM,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,KAAK;AAAA,UAC3Y;AACA,cAAI,KAAK,SAAS,gBAAgB,SAAS,SAAS;AAChD,sBAAU,KAAK,WAAW,KAAK,YAAY,KAAK,MAAM,iBAAiB,MAAM,KAAK,OAAO,IAAI;AAAA,UACjG;AACA,cAAI,KAAK,SAAS,gBAAgB,SAAS,SAAS;AAChD,sBAAU,KAAK,WAAW,KAAK,YAAY,KAAK,MAAM,iBAAiB,MAAM,KAAK,OAAO,MAAM,YAAY,iBAAiB,KAAK;AAAA,UACrI;AACA,cAAI,MAAM,SAAS,gBAAgB,SAAS,OAAO;AAC/C,sBAAU,KAAK,WAAW,MAAM,MAAM,MAAM,iBAAiB,OAAO,MAAM,OAAO,MAAM,UAAU;AAAA,UACrG;AACA,kBAAS,GAAG,cAAc,KAAK,MAAM,EAAE,WAAW,KAAK,OAAO,MAAM,UAAU,QAAQ,GAAG,KAAK;AAAA,QAClG;AAMA,aAAK,oBAAoB,CAAC,OAAO,MAAM,KAAK,cAAc,EAAE;AAU5D,aAAK,6BAA6B,CAAC,KAAK,aAAa,qBAAqB,yBAAyB;AAC/F,gBAAM,EAAE,iBAAiB,UAAU,IAAI,KAAK;AAC5C,gBAAM,UAAU,KAAK,MAAM,0BAA2B,KAAK,MAAM,wBAAwB,KAAK,qBAAqB,oBAAoB,KAAO,GAAG,cAAc,MAAM,OAAO,EAAE,WAAW,KAAK,OAAO,iBAAiB,UAAU,CAAC,WAAW,KAAK,YAAY,EAAE,CAAC;AAChQ,gBAAM,WAAY,GAAG,cAAc,KAAK,MAAM,EAAE,WAAW,GAAG,cAAc,KAAK,KAAK,EAAE,SAAS,KAAK,kBAAkB,WAAW,GAAG,UAAU,GAAG,UAAU,QAAQ,CAAC,EAAE,CAAC;AACzK,gBAAM,kCAAkC,CAAC,aAAa,CAAC;AACvD,kBAAS,GAAG,cAAc,MAAM,MAAM,EAAE,WAAW,KAAK,OAAO,UAAU,UAAU,CAAC,CAAC,oBAAoB,GAAG,cAAc,KAAK,MAAM,EAAE,WAAW,KAAK,OAAO,eAAe,CAAC,GAAG,KAAK,MAAM,gBAAiB,GAAG,cAAc,KAAK,MAAM,EAAE,WAAW,KAAK,OAAO,eAAe,CAAC,IAAK,OAAO,GAAG,cAAc,KAAK,MAAM,EAAE,YAAY,GAAG,aAAa,SAAS;AAAA,YACjV,CAAC,KAAK,OAAO,cAAc,GAAG;AAAA,UAClC,CAAC,EAAE,CAAC,GAAG,mCAAoC,GAAG,cAAc,MAAM,MAAM,UAAU,EAAE,UAAU,EAAE,GAAG,cAAc,KAAK,MAAM,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,KAAO,GAAG,cAAc,MAAM,MAAM,UAAU,EAAE,UAAU,CAAC,SAAS,KAAK,MAAM,gBAAgB,GAAG,cAAc,KAAK,MAAM,CAAC,CAAC,IAAI,OAAO,GAAG,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAK,GAAG,cAAc,KAAK,MAAM,CAAC,CAAC,IAAI,GAAG,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,mBAAmB,IAAI,oBAAoB,EAAE;AAAA,QAChc;AAIA,aAAK,aAAa,MAAM;AACpB,gBAAM,EAAE,UAAU,UAAU,WAAW,iBAAiB,eAAe,YAAa,IAAI,KAAK;AAC7F,gBAAM,EAAE,iBAAiB,UAAU,KAAK,GAAG,gBAAgB,wBAAwB,UAAU,UAAU,iBAAiB,eAAe,aAAa,KAAK,MAAM,eAAe;AAC9K,gBAAM,aAAa,KAAK,MAAM,4BAA4B,IACpD,IACA,KAAK,MAAM,KAAK,MAAM,yBAAyB;AACrD,gBAAM,EAAE,YAAY,OAAO,KAAK,GAAG,wBAAwB,qBAAqB,iBAAiB,WAAW,UAAU;AACtH,iBAAO,gBAAgB,IAAI,CAACC,OAAM,cAAc;AAC5C,gBAAI,KAAK,MAAM,cAAc;AACzB,oBAAM,aAAa,WAAW,SAAS;AACvC,kBAAI,eAAe,QAAW;AAC1B,sBAAM,kBAAkB,OAAO,UAAU,EAAE,YAAY;AACvD,oBAAI,CAAC,KAAK,MAAM,eAAe,SAAS,UAAU,KAAK,iBAAiB;AACpE,0BAAS,GAAG,cAAc,KAAK,MAAM,UAAU,EAAE,UAAU,KAAK,2BAA2B,OAAO,UAAU,EAAE,OAAO,YAAYA,MAAK,KAAK,YAAYA,MAAK,MAAM,UAAU,EAAE,GAAG,SAAS;AAAA,gBAC9L,WACS,CAAC,KAAK,MAAM,eAAe,SAAS,UAAU,GAAG;AACtD,yBAAO;AAAA,gBACX;AAAA,cACJ;AAAA,YACJ;AACA,kBAAM,YAAY,YACZ,KAAK,gBAAgBA,OAAM,SAAS,IACpC,KAAK,iBAAiBA,OAAM,SAAS;AAC3C,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AACA,aAAK,SAAS,MAAM;AAChB,gBAAM,EAAE,UAAU,UAAU,cAAc,WAAW,YAAY,WAAW,iBAAiB,aAAa,MAAO,IAAI,KAAK;AAC1H,cAAI,KAAK,MAAM,kBAAkB,gBAAgB,WAAW,MAAM;AAC9D,gBAAI,OAAO,aAAa,YAAY,OAAO,aAAa,UAAU;AAC9D,oBAAM,MAAM,6CAA6C;AAAA,YAC7D;AAAA,UACJ;AACA,eAAK,SAAS,KAAK,cAAc,KAAK,MAAM,QAAQ,cAAc,KAAK;AACvE,gBAAM,QAAQ,KAAK,WAAW;AAC9B,cAAI,qBAAqB,kBAAkB,IAAI;AAC/C,cAAI,sBAAsB,kBAAkB,IAAI;AAChD,cAAI,aAAa;AACb,kCAAsB;AACtB,mCAAuB;AAAA,UAC3B;AACA,gBAAM,kBAAkB,KAAK,MAAM,eAAe,IAAI;AACtD,gBAAM,SAAS,aAAa,gBAAiB,GAAG,cAAc,MAAM,MAAM,EAAE,UAAU,EAAE,GAAG,cAAc,KAAK,MAAM,EAAE,UAAU,YAAY,qBAAqB,uBACjJ,iBAAiB,WAAW,KAAK,OAAO,YAAY,WAAW,GAAG,cAAc,KAAK,OAAO,EAAE,WAAW,KAAK,OAAO,aAAa,UAAU,UAAU,CAAC,EAAE,CAAC,GAAG,cAAe,GAAG,cAAc,KAAK,MAAM,EAAE,SAAS,qBAAqB,iBAAiB,WAAW,KAAK,OAAO,YAAY,WAAW,GAAG,cAAc,KAAK,OAAO,EAAE,WAAW,KAAK,OAAO,aAAa,UAAU,WAAW,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC;AACxZ,kBAAS,GAAG,cAAc,KAAK,SAAS,EAAE,YAAY,GAAG,aAAa,SAAS,KAAK,OAAO,eAAe;AAAA,YAClG,CAAC,KAAK,OAAO,SAAS,GAAG;AAAA,UAC7B,CAAC,GAAG,WAAW,GAAG,cAAc,MAAM,SAAS,EAAE,UAAU,CAAC,OAAO,KAAK,EAAE,CAAC,EAAE,CAAC;AAAA,QACtF;AACA,aAAK,QAAQ;AAAA,UACT,gBAAgB,CAAC;AAAA,QACrB;AAAA,MACJ;AAAA,IACJ;AACA,eAAW,eAAe;AAAA,MACtB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,gBAAgB,CAAC;AAAA,MACjB,iBAAiB;AAAA,MACjB,eAAe,gBAAgB,WAAW;AAAA,MAC1C,QAAQ,CAAC;AAAA,MACT,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,2BAA2B;AAAA,MAC3B,cAAc;AAAA,MACd,cAAc;AAAA,MACd,aAAa;AAAA,MACb,OAAO;AAAA,IACX;AACA,YAAQ,UAAU;AAAA;AAAA;",
  "names": ["Diff", "prototype", "diff", "oldString", "newString", "options", "callback", "self", "done", "value", "setTimeout", "undefined", "castInput", "removeEmpty", "tokenize", "newLen", "length", "oldLen", "editLength", "maxEditLength", "Math", "min", "maxExecutionTime", "timeout", "Infinity", "abortAfterTimestamp", "Date", "now", "bestPath", "oldPos", "lastComponent", "newPos", "extractCommon", "join", "count", "minDiagonalToConsider", "maxDiagonalToConsider", "execEditLength", "diagonalPath", "max", "basePath", "removePath", "addPath", "canAdd", "addPathNewPos", "canRemove", "addToPath", "buildValues", "useLongestToken", "exec", "ret", "path", "added", "removed", "oldPosInc", "last", "previousComponent", "commonCount", "equals", "left", "right", "comparator", "ignoreCase", "toLowerCase", "array", "i", "push", "split", "chars", "components", "nextComponent", "reverse", "componentPos", "componentLen", "component", "slice", "map", "oldValue", "tmp", "finalComponent", "pop", "characterDiff", "Diff", "diffChars", "oldStr", "newStr", "options", "diff", "generateOptions", "options", "defaults", "callback", "name", "hasOwnProperty", "extendedWordChars", "reWhitespace", "wordDiff", "Diff", "equals", "left", "right", "options", "ignoreCase", "toLowerCase", "ignoreWhitespace", "test", "tokenize", "value", "tokens", "split", "i", "length", "splice", "diffWords", "oldStr", "newStr", "generateOptions", "diff", "diffWordsWithSpace", "lineDiff", "Diff", "tokenize", "value", "options", "stripTrailingCr", "replace", "retLines", "linesAndNewlines", "split", "length", "pop", "i", "line", "newlineIsToken", "ignoreWhitespace", "trim", "push", "diffLines", "oldStr", "newStr", "callback", "diff", "diffTrimmedLines", "generateOptions", "sentenceDiff", "Diff", "tokenize", "value", "split", "diffSentences", "oldStr", "newStr", "callback", "diff", "cssDiff", "Diff", "tokenize", "value", "split", "diffCss", "oldStr", "newStr", "callback", "diff", "objectPrototypeToString", "Object", "prototype", "toString", "jsonDiff", "Diff", "useLongestToken", "tokenize", "lineDiff", "castInput", "value", "options", "undefinedReplacement", "stringifyReplacer", "k", "v", "JSON", "stringify", "canonicalize", "equals", "left", "right", "call", "replace", "diffJson", "oldObj", "newObj", "diff", "obj", "stack", "replacementStack", "replacer", "key", "i", "length", "canonicalizedObj", "push", "Array", "pop", "toJSON", "sortedKeys", "hasOwnProperty", "sort", "arrayDiff", "Diff", "tokenize", "value", "slice", "join", "removeEmpty", "diffArrays", "oldArr", "newArr", "callback", "diff", "parsePatch", "uniDiff", "options", "diffstr", "split", "delimiters", "match", "list", "i", "parseIndex", "index", "push", "length", "line", "test", "header", "exec", "parseFileHeader", "hunks", "parseHunk", "strict", "Error", "JSON", "stringify", "fileHeader", "keyPrefix", "data", "fileName", "replace", "substr", "trim", "chunkHeaderIndex", "chunkHeaderLine", "chunkHeader", "hunk", "oldStart", "oldLines", "newStart", "newLines", "lines", "linedelimiters", "addCount", "removeCount", "indexOf", "operation", "start", "minLine", "maxLine", "wantForward", "backwardExhausted", "forwardExhausted", "localOffset", "iterator", "applyPatch", "source", "uniDiff", "options", "parsePatch", "Array", "isArray", "length", "Error", "lines", "split", "delimiters", "match", "hunks", "compareLine", "lineNumber", "line", "operation", "patchContent", "errorCount", "fuzzFactor", "minLine", "offset", "removeEOFNL", "addEOFNL", "hunkFits", "hunk", "toPos", "j", "content", "substr", "i", "maxLine", "oldLines", "localOffset", "oldStart", "iterator", "distanceIterator", "undefined", "diffOffset", "newLines", "delimiter", "linedelimiters", "splice", "previousOperation", "pop", "push", "_k", "join", "applyPatches", "currentIndex", "processIndex", "index", "complete", "loadFile", "err", "data", "updatedContent", "patched", "structuredPatch", "oldFileName", "newFileName", "oldStr", "newStr", "oldHeader", "newHeader", "options", "context", "diff", "diffLines", "push", "value", "lines", "contextLines", "map", "entry", "hunks", "oldRangeStart", "newRangeStart", "curRange", "oldLine", "newLine", "_loop", "i", "current", "replace", "split", "added", "removed", "prev", "slice", "length", "contextSize", "Math", "min", "hunk", "oldStart", "oldLines", "newStart", "newLines", "oldEOFNewline", "test", "newEOFNewline", "noNlBeforeAdds", "splice", "formatPatch", "Array", "isArray", "join", "ret", "apply", "createTwoFilesPatch", "createPatch", "fileName", "arrayEqual", "a", "b", "length", "arrayStartsWith", "array", "start", "i", "calcLineCount", "hunk", "calcOldNewLineCount", "lines", "oldLines", "newLines", "undefined", "merge", "mine", "theirs", "base", "loadPatch", "ret", "index", "newFileName", "fileNameChanged", "oldFileName", "oldHeader", "newHeader", "selectField", "hunks", "mineIndex", "theirsIndex", "mineOffset", "theirsOffset", "length", "mineCurrent", "oldStart", "Infinity", "theirsCurrent", "hunkBefore", "push", "cloneHunk", "mergedHunk", "Math", "min", "newStart", "mergeLines", "param", "test", "parsePatch", "Error", "structuredPatch", "patch", "conflict", "check", "offset", "mineLines", "theirOffset", "theirLines", "their", "insertLeading", "theirCurrent", "mutualChange", "collectChange", "removal", "insertTrailing", "myChanges", "theirChanges", "allRemoves", "arrayStartsWith", "skipRemoveSuperset", "arrayEqual", "swap", "collectContext", "merged", "insert", "line", "state", "operation", "matchChanges", "changes", "matchIndex", "contextChanges", "conflicted", "change", "match", "substr", "reduce", "prev", "removeChanges", "delta", "i", "changeContent", "forEach", "myCount", "theirCount", "reversePatch", "structuredPatch", "Array", "isArray", "map", "reverse", "oldFileName", "newFileName", "oldHeader", "newHeader", "hunks", "hunk", "oldLines", "newLines", "oldStart", "newStart", "linedelimiters", "lines", "l", "startsWith", "slice", "convertChangesToDMP", "changes", "ret", "change", "operation", "i", "length", "added", "removed", "push", "value", "convertChangesToXML", "changes", "ret", "i", "length", "change", "added", "push", "removed", "escapeHTML", "value", "join", "s", "n", "replace", "DiffType", "DiffMethod", "line", "StyleSheet", "isImportRule", "length", "length", "length", "character", "characters", "length", "length", "prefix", "length", "identifierWithPointTracking", "character", "toRules", "getRules", "compat", "removeLabel", "isIgnoringComment", "createUnsafeSelectorsAlarm", "node", "isImportRule", "isPrependedWithRegularRules", "nullifyElement", "incorrectImportAlarm", "prefixer", "getSourceMap", "createCache", "stylis", "insert", "next", "isDevelopment", "match", "isCustomProperty", "isProcessableValue", "processStyleValue", "registerStyles", "insertStyles", "createEmotion", "css", "keyframes", "injectGlobal", "cx", "classnames", "line", "line", "isEqual", "m", "memoize", "LineNumberPrefix", "prefix", "line"]
}
